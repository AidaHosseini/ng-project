{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\SearchForm.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useLocation } from \"./LocationContext\"; // ‚úÖ Add this\n\n// const SearchForm = ({ setGraphData }) => {\n//     // ‚úÖ Import context values at the top of the component\n//     const { allLocations, selectedLocation, setSelectedLocation, userLocation } = useLocation();\n//     // State for search fields\n//     const [city, setCity] = useState(\"\");\n//     const [icdCode, setIcdCode] = useState(\"\");\n//     const [radius, setRadius] = useState(30); // Default 30 km\n\n//     // State for checkboxes (filters)\n//     const [focus, setFocus] = useState({\n//         onkologen: false,\n//         neurologen: false,\n//     });\n//     const [providers, setProviders] = useState({\n//         clinics: false,\n//         mvz: false,\n//         asv: false,\n//         niedergelasseneAertze: false,\n//     });\n//     const [cooperation, setCooperation] = useState(false);\n\n//     // Handle logic to disable Schwerpunkt if ICD is entered\n//     // eslint-disable-next-line no-undef\n//     useEffect(() => {\n//         if (icdCode.trim() !== \"\") {\n//             setFocus({ onkologen: false, neurologen: false });\n//         }\n//     }, [icdCode]);\n\n//     //üü¢ Handle search form submission\n//     const handleSearch = async (e) => {\n//         e.preventDefault();\n//         console.log(\"üîµ Search Button Clicked\");\n\n//         try {\n//             const params = {\n//                 city,\n//                 icd_code: icdCode,\n//                 radius,\n//                 onkologen: focus.onkologen,\n//                 neurologen: focus.neurologen,\n//                 clinic: providers.clinics,\n//                 mvz: providers.mvz,\n//                 asv: providers.asv,\n//                 cooperation,\n//             };\n\n//             if (userLocation) {\n//                 params.lat = userLocation.latitude;\n//                 params.lon = userLocation.longitude;\n//             }\n\n//             const response = await axios.get(\"http://127.0.0.1:5000/search\", { params });\n//             console.log(\"‚úÖ API Response Received:\", response.data);\n\n//             // üõë Filter out invalid locations\n//             const validResults = response.data.filter(loc => (loc.clinic_latitude && loc.clinic_longitude) ||\n//             (loc.mvz_latitude && loc.mvz_longitude) ||\n//             (loc.asv_latitude && loc.asv_longitude) ||  // Fixed: loc.asv.longitude ‚Üí loc.asv_longitude\n//             (loc.niedergelassene_latitude && loc.niedergelassene_longitude) ||\n//             (loc.neurologe_latitude && loc.neurologe_longitude) ||\n//             (loc.onkologe_latitude && loc.onkologe_longitude)\n//         );\n\n//             if (validResults.length > 0) {\n//                 setGraphData(validResults);  // ‚úÖ Only use valid locations\n//             } else {\n//                 console.warn(\"‚ö†Ô∏è No valid locations in API response!\");\n//                 setGraphData([]); // Clear map if no valid results\n//             }\n//         } catch (error) {\n//             console.error(\"‚ùå API Error:\", error);\n//         }\n//     };\n\n//     return (\n//         <div style={styles.container}>\n//             <form onSubmit={handleSearch} style={styles.form}>\n//                 {/* üü¢ FLEX CONTAINER FOR SEARCH FIELDS & GUIDELINE BOX */}\n//                 <div style={styles.searchRow}>\n\n//                     {/* üü¢ SEARCH FIELDS (CITY & ICD CODE) */}\n//                     <div style={styles.inputContainer}>\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"City\"\n//                             value={city}\n//                             onChange={(e) => setCity(e.target.value)}\n//                             style={styles.input}\n//                             // required= {true}\n//                             required={!userLocation} // only require city if no user location\n//                         />\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"ICD Code\"\n//                             value={icdCode}\n//                             onChange={(e) => setIcdCode(e.target.value)}\n//                             style={styles.input}\n//                         />\n//                     </div>\n\n//                     {/* üü¢ GUIDELINE BOX */}\n//                     <div style={styles.guideBox}>\n//                         <strong>Sucheingaben: Diagnosen, Stadt oder eine der folgenden Optionen</strong>\n//                     </div>\n//                 </div>\n\n//                 {/* üü¢ RADIUS INPUT */}\n//                 <div style={styles.radiusContainer}>\n//                     <label>Umkreis  </label>\n//                     <input\n//                         type=\"number\"\n//                         value={radius}\n//                         onChange={(e) => setRadius(e.target.value)}\n//                         style={styles.radiusInput}\n//                     />\n//                     <span>km</span>\n//                 </div>\n\n//                 {/* üü¢ FILTERS (Schwerpunkt, Leistungserbringer & Kooperationen in the same row) */}\n//                 <div style={styles.filterRow}>\n\n//                     {/* üü¢ SCHWERPUNKT FILTER */}\n//                     <div style={styles.filterBox}>\n//                         <h3>Schwerpunkt</h3>\n\n//                         <div>\n//                             <label>\n//                                 <input\n//                                     type=\"checkbox\"\n//                                     checked={focus.onkologen}\n//                                     onChange={() => setFocus({ onkologen: !focus.onkologen, neurologen: false })}\n//                                     // disabled={icdCode.trim() !== \"\"}\n//                                 />\n//                                 Onkologie\n//                             </label>\n//                         </div>\n\n//                         {/* Second row (new line) */}\n//                         <div style={{ marginTop: \"5px\" }}>\n//                             <label>\n//                                 <input\n//                                     type=\"checkbox\"\n//                                     checked={focus.neurologen}\n//                                     onChange={() => setFocus({ neurologen: !focus.neurologen, onkologen: false })}\n//                                     // disabled={icdCode.trim() !== \"\"}\n//                                 />\n//                                 Neurologie\n//                             </label>\n//                         </div>\n//                     </div>\n\n//                     {/* üü¢ LEISTUNGSERBRINGER FILTER (Same Line) */}\n//                     <div style={styles.filterBox}>\n//                         <h3>Leistungserbringer</h3>\n//                         <div style={{ display: \"flex\", gap: \"10px\" }}>\n//                             <label>\n//                                 <input type=\"checkbox\" checked={providers.clinics} onChange={() => setProviders({ ...providers, clinics: !providers.clinics })} />\n//                                 Kliniken\n//                             </label>\n//                             <label>\n//                                 <input type=\"checkbox\" checked={providers.mvz} onChange={() => setProviders({ ...providers, mvz: !providers.mvz })} />\n//                                 MVZ\n//                             </label>\n//                             <label>\n//                                 <input type=\"checkbox\" checked={providers.asv} onChange={() => setProviders({ ...providers, asv: !providers.asv })} />\n//                                 ASV\n//                             </label>\n//                         </div>\n\n//                         {/* Move Niedergelassene √Ñrzte to a new line */}\n//                         <div style={{ marginTop: \"5px\" }}>\n//                             <label>\n//                                 <input type=\"checkbox\" checked={providers.niedergelasseneAertze} onChange={() => setProviders({ ...providers, niedergelasseneAertze: !providers.niedergelasseneAertze })} />\n//                                 Niedergelassene √Ñrzte\n//                             </label>\n//                         </div>\n//                     </div>\n\n//                     {/* üü¢ KOOPERATIONEN TOGGLE (Same Row) */}\n//                     <div style={styles.filterBox}>\n//                         <h3>Kooperationen</h3>\n//                         <label>\n//                             <input\n//                                 type=\"checkbox\"\n//                                 checked={cooperation}\n//                                 onChange={() => setCooperation(!cooperation)}\n//                             />\n//                             Kooperationen anzeigen\n//                         </label>\n//                     </div>\n\n//                 </div>\n\n//                 {/* üü¢ SEARCH BUTTON */}\n//                 <button type=\"submit\" style={styles.searchButton}>Suche</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// // üü¢ CSS STYLES\n// const styles = {\n//     container: {\n//         padding: \"10px\",\n//         borderRadius: \"8px\",\n//         border: \"2px solid #b3e5fc\",\n//         backgroundColor: \"#f9f9f9\",\n//         width: \"59%\",\n//         height: \"auto\",\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         justifyContent: \"space-between\",\n//         alignItems: \"center\",\n//         boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\",\n//         overflow: \"auto\",\n//         marginBottom: \"5px\",\n//     },\n//     form: {\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         gap: \"10px\",\n//         width: \"100%\",\n//     },\n//     searchRow: {\n//         display: \"flex\",\n//         justifyContent: \"space-between\",\n//         alignItems: \"center\",\n//         width: \"100%\",\n//     },\n//     inputContainer: {\n//         display: \"flex\",\n//         gap: \"10px\",\n//         alignItems: \"center\",\n//         flex: \"2\",\n//     },\n//     input: {\n//         fontSize: \"12px\",\n//         padding: \"5px\",\n//         width: \"100%\",\n//     },\n//     guideBox: {\n//         flex: \"3\",\n//         backgroundColor: \"#e3f2fd\",\n//         justifyContent: \"space-between\",\n//         padding: \"5px\",\n//         borderRadius: \"5px\",\n//         fontSize: \"14px\",\n//         marginleft: \"10px\",\n//         marginwidth: \"10px\",\n//         boxShadow: \"0px 0px 5px rgba(0, 0, 0, 0.1)\",\n//     },\n//     filterRow: {\n//         display: \"flex\",\n//         justifyContent: \"space-between\",\n//         alignItems: \"flex-start\",\n//         gap: \"20px\",\n//         width: \"100%\",\n//     },\n//     filterBox: {\n//         flex: 1,\n//         backgroundColor: \"#fff\",\n//         padding: \"10px\",\n//         borderRadius: \"5px\",\n//         boxShadow: \"0px 0px 5px rgba(0, 0, 0, 0.1)\",\n//         fontSize: \"12px\",\n//         width: \"30%\", // Adjusted for three columns\n//         minWidth: \"250px\", // Set a minimum width to keep them the same\n//         height: \"100px\", // Adjust the height as needed\n//         justifyContent: \"space-between\", // Keeps content aligned\n//     },\n//     searchButton: {\n//         padding: \"10px\",\n//         backgroundColor: \"#007BFF\",\n//         color: \"#fff\",\n//         border: \"none\",\n//         borderRadius: \"5px\",\n//         cursor: \"pointer\",\n//         width: \"10%\",\n//         fontSize: \"14px\",\n//     },\n// };\n\n// export default SearchForm;\n// ‚úÖ Updated SearchForm.js\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"./LocationContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchForm = ({\n  setGraphData\n}) => {\n  _s();\n  const {\n    userLocation\n  } = useLocation();\n  const [city, setCity] = useState(\"\");\n  const [icdCode, setIcdCode] = useState(\"\");\n  const [radius, setRadius] = useState(30);\n  const [focus, setFocus] = useState({\n    onkologen: false,\n    neurologen: false\n  });\n  const [providers, setProviders] = useState({\n    clinics: false,\n    mvz: false,\n    asv: false,\n    niedergelasseneAertze: false\n  });\n  const [cooperation, setCooperation] = useState(false);\n  useEffect(() => {\n    if (icdCode.trim() !== \"\") {\n      setFocus({\n        onkologen: false,\n        neurologen: false\n      });\n    }\n  }, [icdCode]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    console.log(\"üîµ Search Button Clicked\");\n    try {\n      const params = {\n        city,\n        icd_code: icdCode,\n        radius,\n        onkologen: focus.onkologen,\n        neurologen: focus.neurologen,\n        clinic: providers.clinics,\n        mvz: providers.mvz,\n        asv: providers.asv,\n        cooperation\n      };\n      if (userLocation) {\n        params.lat = userLocation.latitude;\n        params.lon = userLocation.longitude;\n      }\n      const response = await axios.get(\"http://127.0.0.1:5000/search\", {\n        params\n      });\n      console.log(\"‚úÖ API Response Received:\", response.data);\n      const combinedResults = [...(response.data.clinics || []), ...(response.data.mvz || []), ...(response.data.neurologen || []), ...(response.data.onkologen || [])];\n      const validResults = combinedResults.filter(loc => loc.clinic_latitude && loc.clinic_longitude || loc.mvz_latitude && loc.mvz_longitude || loc.asv_latitude && loc.asv_longitude || loc.niedergelassene_latitude && loc.niedergelassene_longitude || loc.neurologe_latitude && loc.neurologe_longitude || loc.onkologe_latitude && loc.onkologe_longitude);\n      if (validResults.length > 0) {\n        setGraphData({\n          results: validResults,\n          icd: response.data.icd\n        });\n      } else {\n        console.warn(\"‚ö†Ô∏è No valid locations in API response!\");\n        setGraphData({\n          results: [],\n          icd: response.data.icd\n        });\n      }\n    } catch (error) {\n      console.error(\"‚ùå API Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSearch,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"City\",\n      required: !userLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: icdCode,\n      onChange: e => setIcdCode(e.target.value),\n      placeholder: \"ICD Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: radius,\n      onChange: e => setRadius(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: focus.onkologen,\n        onChange: () => setFocus({\n          onkologen: !focus.onkologen,\n          neurologen: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 20\n      }, this), \" Onkologen\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: focus.neurologen,\n        onChange: () => setFocus({\n          neurologen: !focus.neurologen,\n          onkologen: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 20\n      }, this), \" Neurologen\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: providers.clinics,\n        onChange: () => setProviders({\n          ...providers,\n          clinics: !providers.clinics\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 20\n      }, this), \" Kliniken\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: providers.mvz,\n        onChange: () => setProviders({\n          ...providers,\n          mvz: !providers.mvz\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 20\n      }, this), \" MVZ\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: cooperation,\n        onChange: () => setCooperation(!cooperation)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 20\n      }, this), \" Kooperationen\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Suche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchForm, \"WbVYr9Z8/m1upZAJzdQpZoDjey8=\", false, function () {\n  return [useLocation];\n});\n_c = SearchForm;\nexport default SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","SearchForm","setGraphData","_s","userLocation","city","setCity","icdCode","setIcdCode","radius","setRadius","focus","setFocus","onkologen","neurologen","providers","setProviders","clinics","mvz","asv","niedergelasseneAertze","cooperation","setCooperation","trim","handleSearch","e","preventDefault","console","log","params","icd_code","clinic","lat","latitude","lon","longitude","response","get","data","combinedResults","validResults","filter","loc","clinic_latitude","clinic_longitude","mvz_latitude","mvz_longitude","asv_latitude","asv_longitude","niedergelassene_latitude","niedergelassene_longitude","neurologe_latitude","neurologe_longitude","onkologe_latitude","onkologe_longitude","length","results","icd","warn","error","onSubmit","children","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","_c","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/SearchForm.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useLocation } from \"./LocationContext\"; // ‚úÖ Add this\r\n\r\n// const SearchForm = ({ setGraphData }) => {\r\n//     // ‚úÖ Import context values at the top of the component\r\n//     const { allLocations, selectedLocation, setSelectedLocation, userLocation } = useLocation();\r\n//     // State for search fields\r\n//     const [city, setCity] = useState(\"\");\r\n//     const [icdCode, setIcdCode] = useState(\"\");\r\n//     const [radius, setRadius] = useState(30); // Default 30 km\r\n\r\n//     // State for checkboxes (filters)\r\n//     const [focus, setFocus] = useState({\r\n//         onkologen: false,\r\n//         neurologen: false,\r\n//     });\r\n//     const [providers, setProviders] = useState({\r\n//         clinics: false,\r\n//         mvz: false,\r\n//         asv: false,\r\n//         niedergelasseneAertze: false,\r\n//     });\r\n//     const [cooperation, setCooperation] = useState(false);\r\n\r\n//     // Handle logic to disable Schwerpunkt if ICD is entered\r\n//     // eslint-disable-next-line no-undef\r\n//     useEffect(() => {\r\n//         if (icdCode.trim() !== \"\") {\r\n//             setFocus({ onkologen: false, neurologen: false });\r\n//         }\r\n//     }, [icdCode]);\r\n\r\n//     //üü¢ Handle search form submission\r\n//     const handleSearch = async (e) => {\r\n//         e.preventDefault();\r\n//         console.log(\"üîµ Search Button Clicked\");\r\n \r\n//         try {\r\n//             const params = {\r\n//                 city,\r\n//                 icd_code: icdCode,\r\n//                 radius,\r\n//                 onkologen: focus.onkologen,\r\n//                 neurologen: focus.neurologen,\r\n//                 clinic: providers.clinics,\r\n//                 mvz: providers.mvz,\r\n//                 asv: providers.asv,\r\n//                 cooperation,\r\n//             };\r\n\r\n//             if (userLocation) {\r\n//                 params.lat = userLocation.latitude;\r\n//                 params.lon = userLocation.longitude;\r\n//             }\r\n\r\n//             const response = await axios.get(\"http://127.0.0.1:5000/search\", { params });\r\n//             console.log(\"‚úÖ API Response Received:\", response.data);\r\n    \r\n//             // üõë Filter out invalid locations\r\n//             const validResults = response.data.filter(loc => (loc.clinic_latitude && loc.clinic_longitude) ||\r\n//             (loc.mvz_latitude && loc.mvz_longitude) ||\r\n//             (loc.asv_latitude && loc.asv_longitude) ||  // Fixed: loc.asv.longitude ‚Üí loc.asv_longitude\r\n//             (loc.niedergelassene_latitude && loc.niedergelassene_longitude) ||\r\n//             (loc.neurologe_latitude && loc.neurologe_longitude) ||\r\n//             (loc.onkologe_latitude && loc.onkologe_longitude)\r\n//         );\r\n        \r\n//             if (validResults.length > 0) {\r\n//                 setGraphData(validResults);  // ‚úÖ Only use valid locations\r\n//             } else {\r\n//                 console.warn(\"‚ö†Ô∏è No valid locations in API response!\");\r\n//                 setGraphData([]); // Clear map if no valid results\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå API Error:\", error);\r\n//         }\r\n//     };\r\n       \r\n    \r\n\r\n//     return (\r\n//         <div style={styles.container}>\r\n//             <form onSubmit={handleSearch} style={styles.form}>\r\n//                 {/* üü¢ FLEX CONTAINER FOR SEARCH FIELDS & GUIDELINE BOX */}\r\n//                 <div style={styles.searchRow}>\r\n                    \r\n//                     {/* üü¢ SEARCH FIELDS (CITY & ICD CODE) */}\r\n//                     <div style={styles.inputContainer}>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             placeholder=\"City\"\r\n//                             value={city}\r\n//                             onChange={(e) => setCity(e.target.value)}\r\n//                             style={styles.input}\r\n//                             // required= {true}\r\n//                             required={!userLocation} // only require city if no user location\r\n//                         />\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             placeholder=\"ICD Code\"\r\n//                             value={icdCode}\r\n//                             onChange={(e) => setIcdCode(e.target.value)}\r\n//                             style={styles.input}\r\n//                         />\r\n//                     </div>\r\n                    \r\n//                     {/* üü¢ GUIDELINE BOX */}\r\n//                     <div style={styles.guideBox}>\r\n//                         <strong>Sucheingaben: Diagnosen, Stadt oder eine der folgenden Optionen</strong>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 {/* üü¢ RADIUS INPUT */}\r\n//                 <div style={styles.radiusContainer}>\r\n//                     <label>Umkreis  </label>\r\n//                     <input\r\n//                         type=\"number\"\r\n//                         value={radius}\r\n//                         onChange={(e) => setRadius(e.target.value)}\r\n//                         style={styles.radiusInput}\r\n//                     />\r\n//                     <span>km</span>\r\n//                 </div>\r\n\r\n//                 {/* üü¢ FILTERS (Schwerpunkt, Leistungserbringer & Kooperationen in the same row) */}\r\n//                 <div style={styles.filterRow}>\r\n                    \r\n//                     {/* üü¢ SCHWERPUNKT FILTER */}\r\n//                     <div style={styles.filterBox}>\r\n//                         <h3>Schwerpunkt</h3>\r\n                        \r\n//                         <div>\r\n//                             <label>\r\n//                                 <input\r\n//                                     type=\"checkbox\"\r\n//                                     checked={focus.onkologen}\r\n//                                     onChange={() => setFocus({ onkologen: !focus.onkologen, neurologen: false })}\r\n//                                     // disabled={icdCode.trim() !== \"\"}\r\n//                                 />\r\n//                                 Onkologie\r\n//                             </label>\r\n//                         </div>\r\n\r\n//                         {/* Second row (new line) */}\r\n//                         <div style={{ marginTop: \"5px\" }}>\r\n//                             <label>\r\n//                                 <input\r\n//                                     type=\"checkbox\"\r\n//                                     checked={focus.neurologen}\r\n//                                     onChange={() => setFocus({ neurologen: !focus.neurologen, onkologen: false })}\r\n//                                     // disabled={icdCode.trim() !== \"\"}\r\n//                                 />\r\n//                                 Neurologie\r\n//                             </label>\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     {/* üü¢ LEISTUNGSERBRINGER FILTER (Same Line) */}\r\n//                     <div style={styles.filterBox}>\r\n//                         <h3>Leistungserbringer</h3>\r\n//                         <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n//                             <label>\r\n//                                 <input type=\"checkbox\" checked={providers.clinics} onChange={() => setProviders({ ...providers, clinics: !providers.clinics })} />\r\n//                                 Kliniken\r\n//                             </label>\r\n//                             <label>\r\n//                                 <input type=\"checkbox\" checked={providers.mvz} onChange={() => setProviders({ ...providers, mvz: !providers.mvz })} />\r\n//                                 MVZ\r\n//                             </label>\r\n//                             <label>\r\n//                                 <input type=\"checkbox\" checked={providers.asv} onChange={() => setProviders({ ...providers, asv: !providers.asv })} />\r\n//                                 ASV\r\n//                             </label>\r\n//                         </div>\r\n\r\n//                         {/* Move Niedergelassene √Ñrzte to a new line */}\r\n//                         <div style={{ marginTop: \"5px\" }}>\r\n//                             <label>\r\n//                                 <input type=\"checkbox\" checked={providers.niedergelasseneAertze} onChange={() => setProviders({ ...providers, niedergelasseneAertze: !providers.niedergelasseneAertze })} />\r\n//                                 Niedergelassene √Ñrzte\r\n//                             </label>\r\n//                         </div>\r\n//                     </div>\r\n\r\n\r\n//                     {/* üü¢ KOOPERATIONEN TOGGLE (Same Row) */}\r\n//                     <div style={styles.filterBox}>\r\n//                         <h3>Kooperationen</h3>\r\n//                         <label>\r\n//                             <input\r\n//                                 type=\"checkbox\"\r\n//                                 checked={cooperation}\r\n//                                 onChange={() => setCooperation(!cooperation)}\r\n//                             />\r\n//                             Kooperationen anzeigen\r\n//                         </label>\r\n//                     </div>\r\n\r\n//                 </div>\r\n\r\n//                 {/* üü¢ SEARCH BUTTON */}\r\n//                 <button type=\"submit\" style={styles.searchButton}>Suche</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n\r\n// // üü¢ CSS STYLES\r\n// const styles = {\r\n//     container: {\r\n//         padding: \"10px\",\r\n//         borderRadius: \"8px\",\r\n//         border: \"2px solid #b3e5fc\",\r\n//         backgroundColor: \"#f9f9f9\",\r\n//         width: \"59%\",\r\n//         height: \"auto\",\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"center\",\r\n//         boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\",\r\n//         overflow: \"auto\",\r\n//         marginBottom: \"5px\",\r\n//     },\r\n//     form: {\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         gap: \"10px\",\r\n//         width: \"100%\",\r\n//     },\r\n//     searchRow: {\r\n//         display: \"flex\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"center\",\r\n//         width: \"100%\",\r\n//     },\r\n//     inputContainer: {\r\n//         display: \"flex\",\r\n//         gap: \"10px\",\r\n//         alignItems: \"center\",\r\n//         flex: \"2\",\r\n//     },\r\n//     input: {\r\n//         fontSize: \"12px\",\r\n//         padding: \"5px\",\r\n//         width: \"100%\",\r\n//     },\r\n//     guideBox: {\r\n//         flex: \"3\",\r\n//         backgroundColor: \"#e3f2fd\",\r\n//         justifyContent: \"space-between\",\r\n//         padding: \"5px\",\r\n//         borderRadius: \"5px\",\r\n//         fontSize: \"14px\",\r\n//         marginleft: \"10px\",\r\n//         marginwidth: \"10px\",\r\n//         boxShadow: \"0px 0px 5px rgba(0, 0, 0, 0.1)\",\r\n//     },\r\n//     filterRow: {\r\n//         display: \"flex\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"flex-start\",\r\n//         gap: \"20px\",\r\n//         width: \"100%\",\r\n//     },\r\n//     filterBox: {\r\n//         flex: 1,\r\n//         backgroundColor: \"#fff\",\r\n//         padding: \"10px\",\r\n//         borderRadius: \"5px\",\r\n//         boxShadow: \"0px 0px 5px rgba(0, 0, 0, 0.1)\",\r\n//         fontSize: \"12px\",\r\n//         width: \"30%\", // Adjusted for three columns\r\n//         minWidth: \"250px\", // Set a minimum width to keep them the same\r\n//         height: \"100px\", // Adjust the height as needed\r\n//         justifyContent: \"space-between\", // Keeps content aligned\r\n//     },\r\n//     searchButton: {\r\n//         padding: \"10px\",\r\n//         backgroundColor: \"#007BFF\",\r\n//         color: \"#fff\",\r\n//         border: \"none\",\r\n//         borderRadius: \"5px\",\r\n//         cursor: \"pointer\",\r\n//         width: \"10%\",\r\n//         fontSize: \"14px\",\r\n//     },\r\n// };\r\n\r\n// export default SearchForm;\r\n// ‚úÖ Updated SearchForm.js\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"./LocationContext\";\r\n\r\nconst SearchForm = ({ setGraphData }) => {\r\n    const { userLocation } = useLocation();\r\n\r\n    const [city, setCity] = useState(\"\");\r\n    const [icdCode, setIcdCode] = useState(\"\");\r\n    const [radius, setRadius] = useState(30);\r\n    const [focus, setFocus] = useState({ onkologen: false, neurologen: false });\r\n    const [providers, setProviders] = useState({ clinics: false, mvz: false, asv: false, niedergelasseneAertze: false });\r\n    const [cooperation, setCooperation] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (icdCode.trim() !== \"\") {\r\n            setFocus({ onkologen: false, neurologen: false });\r\n        }\r\n    }, [icdCode]);\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"üîµ Search Button Clicked\");\r\n\r\n        try {\r\n            const params = {\r\n                city,\r\n                icd_code: icdCode,\r\n                radius,\r\n                onkologen: focus.onkologen,\r\n                neurologen: focus.neurologen,\r\n                clinic: providers.clinics,\r\n                mvz: providers.mvz,\r\n                asv: providers.asv,\r\n                cooperation,\r\n            };\r\n\r\n            if (userLocation) {\r\n                params.lat = userLocation.latitude;\r\n                params.lon = userLocation.longitude;\r\n            }\r\n\r\n            const response = await axios.get(\"http://127.0.0.1:5000/search\", { params });\r\n            console.log(\"‚úÖ API Response Received:\", response.data);\r\n\r\n            const combinedResults = [\r\n                ...(response.data.clinics || []),\r\n                ...(response.data.mvz || []),\r\n                ...(response.data.neurologen || []),\r\n                ...(response.data.onkologen || [])\r\n            ];\r\n\r\n            const validResults = combinedResults.filter(loc =>\r\n                (loc.clinic_latitude && loc.clinic_longitude) ||\r\n                (loc.mvz_latitude && loc.mvz_longitude) ||\r\n                (loc.asv_latitude && loc.asv_longitude) ||\r\n                (loc.niedergelassene_latitude && loc.niedergelassene_longitude) ||\r\n                (loc.neurologe_latitude && loc.neurologe_longitude) ||\r\n                (loc.onkologe_latitude && loc.onkologe_longitude)\r\n            );\r\n\r\n            if (validResults.length > 0) {\r\n                setGraphData({ results: validResults, icd: response.data.icd });\r\n            } else {\r\n                console.warn(\"‚ö†Ô∏è No valid locations in API response!\");\r\n                setGraphData({ results: [], icd: response.data.icd });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"‚ùå API Error:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSearch}>\r\n            <input value={city} onChange={e => setCity(e.target.value)} placeholder=\"City\" required={!userLocation} />\r\n            <input value={icdCode} onChange={e => setIcdCode(e.target.value)} placeholder=\"ICD Code\" />\r\n            <input type=\"number\" value={radius} onChange={e => setRadius(e.target.value)} />\r\n            <label><input type=\"checkbox\" checked={focus.onkologen} onChange={() => setFocus({ onkologen: !focus.onkologen, neurologen: false })} /> Onkologen</label>\r\n            <label><input type=\"checkbox\" checked={focus.neurologen} onChange={() => setFocus({ neurologen: !focus.neurologen, onkologen: false })} /> Neurologen</label>\r\n            <label><input type=\"checkbox\" checked={providers.clinics} onChange={() => setProviders({ ...providers, clinics: !providers.clinics })} /> Kliniken</label>\r\n            <label><input type=\"checkbox\" checked={providers.mvz} onChange={() => setProviders({ ...providers, mvz: !providers.mvz })} /> MVZ</label>\r\n            <label><input type=\"checkbox\" checked={cooperation} onChange={() => setCooperation(!cooperation)} /> Kooperationen</label>\r\n            <button type=\"submit\">Suche</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SearchForm;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}