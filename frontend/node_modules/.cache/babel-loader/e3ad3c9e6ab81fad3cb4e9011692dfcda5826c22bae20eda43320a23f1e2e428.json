{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\Analystics.js\",\n  _s = $RefreshSig$();\n// // export default Analytics;\n// import React, { useState, useEffect, useMemo, useCallback } from \"react\";\n// import { useLocation } from \"./LocationContext\";\n// import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\n\n// const LINE_COLORS = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\n\n// const styles = {\n//   scrollWrapper: {\n//     width: \"35%\",\n//     position: \"absolute\",\n//     right: \"10px\",\n//     top: \"130px\",\n//     bottom: \"5px\",\n//     height: \"100%\",\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     gap: \"10px\",\n//     padding: \"10px\",\n//     fontSize: \"12px\",\n//     fontWeight: \"600\",\n//     boxSizing: \"border-box\"\n//   },\n\n//   scrollSection: (percentage) => ({\n//     height: `${percentage}%`,\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     overflow: \"hidden\"\n//   }),\n\n//   scrollSectionContent: {\n//     flex: 1,\n//     overflowY: \"auto\",\n//     backgroundColor: \"#F0F1F1\",\n//     border: \"2px solid #b3e5fc\",\n//     padding: \"10px\",\n//     borderRadius: \"8px\",\n//     boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\n//   },\n\n//   title: {\n//     fontSize: \"16px\",\n//     marginBottom: \"4px\",\n//     fontWeight: \"600\",\n//     padding: \"2px 6px\",\n//     borderRadius: \"2px\"\n//   },\n\n//   list: {\n//     listStyleType: \"none\",\n//     padding: 0,\n//     margin: 0\n//   },\n\n//   listItem: {\n//     marginBottom: \"8px\",\n//     padding: \"8px\",\n//     borderBottom: \"1px solid #ddd\"\n//   },\n\n//   bold: { fontWeight: \"600\" },\n\n//   noData: {\n//     fontStyle: \"italic\",\n//     color: \"#999\"\n//   },\n\n//   colorDot: {\n//     display: \"inline-block\",\n//     width: \"12px\",\n//     height: \"12px\",\n//     borderRadius: \"50%\",\n//     marginRight: \"5px\"\n//   },\n\n//   calculatingText: {\n//     color: \"#666\",\n//     fontStyle: \"italic\"\n//   }\n// };\n\n// // Haversine Formula to calculate distances\n// const haversineDistance = (lat1, lon1, lat2, lon2) => {\n//     const toRad = (value) => (value * Math.PI) / 180;\n\n//     const R = 6371; // Radius of Earth in kilometers\n//     const dLat = toRad(lat2 - lat1);\n//     const dLon = toRad(lon2 - lon1);\n\n//     const a =\n//       Math.sin(dLat / 2) ** 2 +\n//       Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n\n//     const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n//     return (R * c).toFixed(2);\n//   };\n// const Analytics = React.memo(() => {\n//   const { allLocations, selectedLocation } = useLocation();\n//   const [distances, setDistances] = useState({});\n\n//   const originLocation = useMemo(() => {\n//     return allLocations.find(loc =>\n//       loc.clinic_name === \"Your Location\" || loc.clinic_name === \"Zentrum (Umkreis)\"\n//     );\n//   }, [allLocations]);\n\n//   const getProviderKey = (type, name, address) => `${type}-${(name || '').trim()}-${(address || '').trim()}`;\n\n//   const getProviderDetails = (provider) => {\n//     const type = provider.clinic_name ? \"clinic\" :\n//       provider.mvz_name ? \"mvz\" :\n//       provider.asv_name ? \"asv\" :\n//       provider.niedergelassene_name ? \"niedergelassene\" :\n//       provider.neurologe_name ? \"neurologe\" :\n//       provider.onkologe_name ? \"onkologe\" : null;\n\n//     const name = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name || provider.neurologe_name || provider.onkologe_name;\n//     const address = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || provider.neurologe_address || provider.onkologe_address;\n//     const city = provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.neurologe_city || provider.onkologe_city;\n\n//     const lat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude || provider.neurologe_latitude || provider.onkologe_latitude;\n//     const lon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude || provider.neurologe_longitude || provider.onkologe_longitude;\n\n//     return { type, name, address, city, lat, lon };\n//   };\n\n//   const filteredLocations = useMemo(() => allLocations.filter(p => p.clinic_name !== \"Your Location\" && p.clinic_name !== \"Zentrum (Umkreis)\"), [allLocations]);\n\n//   const renderSelectedLocationInfo = () => {\n//     const details = selectedLocation ? getProviderDetails(selectedLocation) : null;\n//     if (!details) return <p style={styles.noData}>Keine Einrichtung ausgewählt.</p>;\n//     const key = getProviderKey(details.type, details.name, details.address);\n//     return (\n//       <>\n//         <p><strong>Name:</strong> {details.name}</p>\n//         <p><strong>Adresse:</strong> {details.address}</p>\n//         <p><strong>Stadt:</strong> {details.city}</p>\n//         <p><strong>Beste Route:</strong> {distances[key] ? `${distances[key]} km` : \"Berechne...\"}</p>\n//       </>\n//     );\n//   };\n\n//   const renderProviderList = () => (\n//     filteredLocations.length === 0 ? <p style={styles.noData}>Keine Daten verfügbar.</p> : (\n//       <ul style={styles.list}>\n//         {filteredLocations.map((provider, index) => {\n//           const { type, name, address, city } = getProviderDetails(provider);\n//           const key = getProviderKey(type, name, address);\n//           return (\n//             <li key={index} style={styles.listItem}>\n//               <span style={{ ...styles.colorDot, backgroundColor: LINE_COLORS[index % LINE_COLORS.length] }} />\n//               <strong>{name}</strong><br />\n//               {address && <>Adresse: {address}<br /></>}\n//               {city && <>Stadt: {city}<br /></>}\n//               Beste Route: <span style={styles.bold}>{distances[key] || \"Berechne...\"} km</span>\n//             </li>\n//           );\n//         })}\n//       </ul>\n//     )\n//   );\n\n//   const mockICDData = [\n//     { icd: \"D27\", count: 120 },\n//     { icd: \"C50\", count: 85 },\n//     { icd: \"G40\", count: 42 },\n//     { icd: \"I10\", count: 60 },\n//     { icd: \"C34\", count: 30 }\n//   ];\n\n//   return (\n//     <div style={styles.scrollWrapper}>\n//       <div style={styles.scrollSection(20)}>\n//         <h3 style={styles.title}>Informationen zur ausgewählten Einrichtung</h3>\n//         <div style={styles.scrollSectionContent}>{renderSelectedLocationInfo()}</div>\n//       </div>\n\n//       <div style={styles.scrollSection(30)}>\n//         <h3 style={styles.title}>Leistungserbringer Informationen</h3>\n//         <div style={styles.scrollSectionContent}>{renderProviderList()}</div>\n//       </div>\n\n//       <div style={styles.scrollSection(45)}>\n//         <h3 style={styles.title}>Analytics Dashboard</h3>\n//         <div style={styles.scrollSectionContent}>\n//           <div style={{ marginBottom: \"20px\" }}>\n//             <h4>Verteilung der ICD-Fälle</h4>\n//             <p>Zeigt an, wie viele Fälle (Fallzahlen) mit jedem ICD-Code verbunden sind.</p>\n//             <p>Darstellung als Balkendiagramm nach ICD-Code.</p>\n//             <ResponsiveContainer width=\"100%\" height={200}>\n//               <BarChart data={mockICDData}>\n//                 <XAxis dataKey=\"icd\" />\n//                 <YAxis />\n//                 <Tooltip />\n//                 <Bar dataKey=\"count\" fill=\"#8884d8\" />\n//               </BarChart>\n//             </ResponsiveContainer>\n//           </div>\n//           <hr />\n//           <div style={{ margin: \"20px 0\" }}>\n//             <h4>Erreichbarkeit</h4>\n//             <p>Berechnet die beste Route (Straßenentfernung) zwischen dem Standort des Nutzers und jedem Anbieter.</p>\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\n//           </div>\n//           <hr />\n//           <div style={{ margin: \"20px 0\" }}>\n//             <h4>Spezialisierungsgrad</h4>\n//             <p>Ermittelt Zentren mit einer hohen Anzahl von Fällen in einem bestimmten ICD.</p>\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\n//           </div>\n//           <hr />\n//           <div style={{ margin: \"20px 0\" }}>\n//             <h4>Kooperationsnetzwerke</h4>\n//             <p>Visualisiert Kooperationen zwischen Kliniken, MVZs und ASVs.</p>\n//             <p>Basierend auf KOOPERIERT_MIT-Beziehungen.</p>\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\n//           </div>\n//           <hr />\n//           <div style={{ marginTop: \"20px\" }}>\n//             <h4>Empfohlene Behandlungsorte</h4>\n//             <p>Schlägt den besten Behandlungsort vor, basierend auf:</p>\n//             <ul>\n//               <li>Entfernung</li>\n//               <li>ICD-Spezialisierung</li>\n//               <li>Konnektivität der Kooperation</li>\n//             </ul>\n//             <p><strong>KI-basiertes Ranking:</strong> z.B. „Top 3 am nächsten + beste ICD-Übereinstimmung“</p>\n//             <p style={styles.noData}>Noch keine Empfehlungen verfügbar.</p>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// });\n\n// export default Analytics;\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useLocation } from \"./LocationContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LINE_COLORS = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\nconst styles = {\n  scrollWrapper: {\n    width: \"35%\",\n    position: \"absolute\",\n    right: \"10px\",\n    top: \"130px\",\n    bottom: \"5px\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\",\n    padding: \"10px\",\n    fontSize: \"12px\",\n    fontWeight: \"600\",\n    boxSizing: \"border-box\"\n  },\n  scrollSection: percentage => ({\n    height: `${percentage}%`,\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\"\n  }),\n  scrollSectionContent: {\n    flex: 1,\n    overflowY: \"auto\",\n    backgroundColor: \"#F0F1F1\",\n    border: \"2px solid #b3e5fc\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\n  },\n  title: {\n    fontSize: \"16px\",\n    marginBottom: \"4px\",\n    fontWeight: \"600\",\n    padding: \"2px 6px\",\n    borderRadius: \"2px\"\n  },\n  list: {\n    listStyleType: \"none\",\n    padding: 0,\n    margin: 0\n  },\n  listItem: {\n    marginBottom: \"8px\",\n    padding: \"8px\",\n    borderBottom: \"1px solid #ddd\"\n  },\n  bold: {\n    fontWeight: \"600\"\n  },\n  noData: {\n    fontStyle: \"italic\",\n    color: \"#999\"\n  },\n  colorDot: {\n    display: \"inline-block\",\n    width: \"12px\",\n    height: \"12px\",\n    borderRadius: \"50%\",\n    marginRight: \"5px\"\n  },\n  calculatingText: {\n    color: \"#666\",\n    fontStyle: \"italic\"\n  }\n};\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\n  if (!startLat || !startLon || !endLat || !endLon) {\n    console.warn(\"🚨 Missing coordinates for distance calculation!\", {\n      startLat,\n      startLon,\n      endLat,\n      endLon\n    });\n    return \"N/A\";\n  }\n  const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.routes && data.routes.length > 0) {\n      return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\n    } else {\n      console.warn(\"⚠️ No valid route found for coordinates:\", {\n        startLat,\n        startLon,\n        endLat,\n        endLon\n      });\n      return \"N/A\";\n    }\n  } catch (error) {\n    console.error(\"❌ Error fetching road distance:\", error);\n    return \"N/A\";\n  }\n};\nconst Analystics = () => {\n  _s();\n  const {\n    allLocations\n  } = useLocation();\n  const [distances, setDistances] = useState({});\n\n  // ✅ Extract Unique ICD Information (Only Once)\n  const uniqueICDInfo = useMemo(() => {\n    return allLocations.length > 0 ? {\n      icd_name: allLocations[0].icd_name || \"N/A\",\n      icd_fallzahl: allLocations[0].icd_fallzahl || \"N/A\"\n    } : null;\n  }, [allLocations]);\n\n  // ✅ Find User's Location\n  const userLocation = useMemo(() => allLocations.find(loc => loc.clinic_name === \"Your Location\"), [allLocations]);\n\n  // ✅ Fetch Road Distances for ALL PROVIDERS\n  useEffect(() => {\n    const fetchDistances = async () => {\n      if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\n        console.warn(\"⚠️ No valid user location found!\");\n        return;\n      }\n      const newDistances = {};\n      for (const provider of allLocations) {\n        if (provider.clinic_name === \"Your Location\") continue;\n        const providerType = provider.clinic_name ? \"clinic\" : provider.mvz_name ? \"mvz\" : provider.asv_name ? \"asv\" : provider.niedergelassene_name ? \"niedergelassene\" : null;\n        const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\n        const providerAddress = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address;\n        if (!providerType || !providerName) continue;\n        const providerLat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude;\n        const providerLon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude;\n        if (!providerLat || !providerLon) {\n          console.warn(`⚠️ Skipping provider with missing coordinates: ${providerName}`);\n          continue;\n        }\n        const roadDistance = await getRoadDistance(userLocation.latitude, userLocation.longitude, providerLat, providerLon);\n        const providerKey = `${providerType}-${providerName}-${providerAddress || ''}`;\n        newDistances[providerKey] = roadDistance;\n      }\n      setDistances(newDistances);\n    };\n    fetchDistances();\n  }, [userLocation, allLocations]);\n  const filteredLocations = useMemo(() => allLocations.filter(loc => loc.clinic_name !== \"Your Location\"), [allLocations]);\n  const renderICDInfo = () => uniqueICDInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Kooperation mit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 20\n      }, this), \" \", uniqueICDInfo.icd_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Fallzahl:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 20\n      }, this), \" \", uniqueICDInfo.icd_fallzahl]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    style: styles.noData,\n    children: \"Keine Kooperationsinformationen verf\\xFCgbar.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 13\n  }, this);\n  const renderProviderList = () => filteredLocations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n    style: styles.noData,\n    children: \"Keine Leistungserbringer verf\\xFCgbar.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: styles.list,\n    children: filteredLocations.map((provider, index) => {\n      const providerType = provider.clinic_name ? \"clinic\" : provider.mvz_name ? \"mvz\" : provider.asv_name ? \"asv\" : provider.niedergelassene_name ? \"niedergelassene\" : null;\n      const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\n      const providerAddress = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address;\n      const providerCity = provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city;\n      if (!providerType || !providerName) return null;\n      const providerKey = `${providerType}-${providerName}-${providerAddress || ''}`;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.listItem,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            ...styles.colorDot,\n            backgroundColor: LINE_COLORS[index % LINE_COLORS.length]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: providerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 60\n        }, this), providerCity && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Stadt: \", providerCity, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true), providerAddress && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Adresse: \", providerAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 77\n          }, this)]\n        }, void 0, true), provider.clinic_number_of_beds && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Anzahl von Betten: \", provider.clinic_number_of_beds, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 117\n          }, this)]\n        }, void 0, true), provider.cooperation && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Kooperation: \", provider.cooperation, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 91\n          }, this)]\n        }, void 0, true), provider.clinic_chefarzt && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Chefarzt: \", provider.clinic_chefarzt, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 96\n          }, this)]\n        }, void 0, true), \"Beste Route: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.bold,\n          children: [distances[providerKey] || \"Berechne...\", \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 42\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 431,\n    columnNumber: 13\n  }, this);\n  const mockICDData = [{\n    icd: \"D27\",\n    count: 120\n  }, {\n    icd: \"C50\",\n    count: 85\n  }, {\n    icd: \"G40\",\n    count: 42\n  }, {\n    icd: \"I10\",\n    count: 60\n  }, {\n    icd: \"C34\",\n    count: 30\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.scrollWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.scrollSection(20),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Informationen zur ausgew\\xE4hlten Einrichtung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.scrollSectionContent,\n        children: renderSelectedLocationInfo()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.scrollSection(30),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Leistungserbringer Informationen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.scrollSectionContent,\n        children: renderProviderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.scrollSection(45),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.scrollSectionContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Verteilung der ICD-F\\xE4lle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Zeigt an, wie viele F\\xE4lle (Fallzahlen) mit jedem ICD-Code verbunden sind.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Darstellung als Balkendiagramm nach ICD-Code.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 200,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: mockICDData,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"icd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"count\",\n                fill: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"20px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Erreichbarkeit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Berechnet die beste Route (Stra\\xDFenentfernung) zwischen dem Standort des Nutzers und jedem Anbieter.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.noData,\n            children: \"Noch keine Daten geladen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"20px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Spezialisierungsgrad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ermittelt Zentren mit einer hohen Anzahl von F\\xE4llen in einem bestimmten ICD.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.noData,\n            children: \"Noch keine Daten geladen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"20px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Kooperationsnetzwerke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Visualisiert Kooperationen zwischen Kliniken, MVZs und ASVs.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Basierend auf KOOPERIERT_MIT-Beziehungen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.noData,\n            children: \"Noch keine Daten geladen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Empfohlene Behandlungsorte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Schl\\xE4gt den besten Behandlungsort vor, basierend auf:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Entfernung\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"ICD-Spezialisierung\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Konnektivit\\xE4t der Kooperation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"KI-basiertes Ranking:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 16\n            }, this), \" z.B. \\u201ETop 3 am n\\xE4chsten + beste ICD-\\xDCbereinstimmung\\u201C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.noData,\n            children: \"Noch keine Empfehlungen verf\\xFCgbar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 475,\n    columnNumber: 9\n  }, this);\n};\n_s(Analystics, \"iUfAwPY4psGGzpxR1Mqfs9k5HTM=\", false, function () {\n  return [useLocation];\n});\n_c = Analystics;\nexport default Analystics;\n\n//   return (\n\n//   );\n// });\nvar _c;\n$RefreshReg$(_c, \"Analystics\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","LINE_COLORS","styles","scrollWrapper","width","position","right","top","bottom","height","display","flexDirection","gap","padding","fontSize","fontWeight","boxSizing","scrollSection","percentage","overflow","scrollSectionContent","flex","overflowY","backgroundColor","border","borderRadius","boxShadow","title","marginBottom","list","listStyleType","margin","listItem","borderBottom","bold","noData","fontStyle","color","colorDot","marginRight","calculatingText","getRoadDistance","startLat","startLon","endLat","endLon","console","warn","url","response","fetch","data","json","routes","length","distance","toFixed","error","Analystics","_s","allLocations","distances","setDistances","uniqueICDInfo","icd_name","icd_fallzahl","userLocation","find","loc","clinic_name","fetchDistances","latitude","longitude","newDistances","provider","providerType","mvz_name","asv_name","niedergelassene_name","providerName","providerAddress","clinic_address","mvz_address","asv_address","niedergelassene_address","providerLat","clinic_latitude","mvz_latitude","asv_latitude","niedergelassene_latitude","providerLon","clinic_longitude","mvz_longitude","asv_longitude","niedergelassene_longitude","roadDistance","providerKey","filteredLocations","filter","renderICDInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","style","renderProviderList","map","index","providerCity","clinic_city","mvz_city","asv_city","niedergelassene_city","clinic_number_of_beds","cooperation","clinic_chefarzt","mockICDData","icd","count","renderSelectedLocationInfo","ResponsiveContainer","BarChart","XAxis","dataKey","YAxis","Tooltip","Bar","fill","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/Analystics.js"],"sourcesContent":["// // export default Analytics;\r\n// import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\n// import { useLocation } from \"./LocationContext\";\r\n// import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\n// const LINE_COLORS = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\n// const styles = {\r\n//   scrollWrapper: {\r\n//     width: \"35%\",\r\n//     position: \"absolute\",\r\n//     right: \"10px\",\r\n//     top: \"130px\",\r\n//     bottom: \"5px\",\r\n//     height: \"100%\",\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     gap: \"10px\",\r\n//     padding: \"10px\",\r\n//     fontSize: \"12px\",\r\n//     fontWeight: \"600\",\r\n//     boxSizing: \"border-box\"\r\n//   },\r\n\r\n//   scrollSection: (percentage) => ({\r\n//     height: `${percentage}%`,\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     overflow: \"hidden\"\r\n//   }),\r\n\r\n//   scrollSectionContent: {\r\n//     flex: 1,\r\n//     overflowY: \"auto\",\r\n//     backgroundColor: \"#F0F1F1\",\r\n//     border: \"2px solid #b3e5fc\",\r\n//     padding: \"10px\",\r\n//     borderRadius: \"8px\",\r\n//     boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\r\n//   },\r\n\r\n//   title: {\r\n//     fontSize: \"16px\",\r\n//     marginBottom: \"4px\",\r\n//     fontWeight: \"600\",\r\n//     padding: \"2px 6px\",\r\n//     borderRadius: \"2px\"\r\n//   },\r\n\r\n//   list: {\r\n//     listStyleType: \"none\",\r\n//     padding: 0,\r\n//     margin: 0\r\n//   },\r\n\r\n//   listItem: {\r\n//     marginBottom: \"8px\",\r\n//     padding: \"8px\",\r\n//     borderBottom: \"1px solid #ddd\"\r\n//   },\r\n\r\n//   bold: { fontWeight: \"600\" },\r\n\r\n//   noData: {\r\n//     fontStyle: \"italic\",\r\n//     color: \"#999\"\r\n//   },\r\n\r\n//   colorDot: {\r\n//     display: \"inline-block\",\r\n//     width: \"12px\",\r\n//     height: \"12px\",\r\n//     borderRadius: \"50%\",\r\n//     marginRight: \"5px\"\r\n//   },\r\n\r\n//   calculatingText: {\r\n//     color: \"#666\",\r\n//     fontStyle: \"italic\"\r\n//   }\r\n// };\r\n\r\n// // Haversine Formula to calculate distances\r\n// const haversineDistance = (lat1, lon1, lat2, lon2) => {\r\n//     const toRad = (value) => (value * Math.PI) / 180;\r\n  \r\n//     const R = 6371; // Radius of Earth in kilometers\r\n//     const dLat = toRad(lat2 - lat1);\r\n//     const dLon = toRad(lon2 - lon1);\r\n  \r\n//     const a =\r\n//       Math.sin(dLat / 2) ** 2 +\r\n//       Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\r\n  \r\n//     const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n//     return (R * c).toFixed(2);\r\n//   };\r\n// const Analytics = React.memo(() => {\r\n//   const { allLocations, selectedLocation } = useLocation();\r\n//   const [distances, setDistances] = useState({});\r\n  \r\n//   const originLocation = useMemo(() => {\r\n//     return allLocations.find(loc =>\r\n//       loc.clinic_name === \"Your Location\" || loc.clinic_name === \"Zentrum (Umkreis)\"\r\n//     );\r\n//   }, [allLocations]);\r\n\r\n//   const getProviderKey = (type, name, address) => `${type}-${(name || '').trim()}-${(address || '').trim()}`;\r\n\r\n//   const getProviderDetails = (provider) => {\r\n//     const type = provider.clinic_name ? \"clinic\" :\r\n//       provider.mvz_name ? \"mvz\" :\r\n//       provider.asv_name ? \"asv\" :\r\n//       provider.niedergelassene_name ? \"niedergelassene\" :\r\n//       provider.neurologe_name ? \"neurologe\" :\r\n//       provider.onkologe_name ? \"onkologe\" : null;\r\n\r\n//     const name = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name || provider.neurologe_name || provider.onkologe_name;\r\n//     const address = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || provider.neurologe_address || provider.onkologe_address;\r\n//     const city = provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.neurologe_city || provider.onkologe_city;\r\n\r\n//     const lat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude || provider.neurologe_latitude || provider.onkologe_latitude;\r\n//     const lon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude || provider.neurologe_longitude || provider.onkologe_longitude;\r\n\r\n//     return { type, name, address, city, lat, lon };\r\n//   };\r\n\r\n//   const filteredLocations = useMemo(() => allLocations.filter(p => p.clinic_name !== \"Your Location\" && p.clinic_name !== \"Zentrum (Umkreis)\"), [allLocations]);\r\n\r\n\r\n//   const renderSelectedLocationInfo = () => {\r\n//     const details = selectedLocation ? getProviderDetails(selectedLocation) : null;\r\n//     if (!details) return <p style={styles.noData}>Keine Einrichtung ausgewählt.</p>;\r\n//     const key = getProviderKey(details.type, details.name, details.address);\r\n//     return (\r\n//       <>\r\n//         <p><strong>Name:</strong> {details.name}</p>\r\n//         <p><strong>Adresse:</strong> {details.address}</p>\r\n//         <p><strong>Stadt:</strong> {details.city}</p>\r\n//         <p><strong>Beste Route:</strong> {distances[key] ? `${distances[key]} km` : \"Berechne...\"}</p>\r\n//       </>\r\n//     );\r\n//   };\r\n\r\n//   const renderProviderList = () => (\r\n//     filteredLocations.length === 0 ? <p style={styles.noData}>Keine Daten verfügbar.</p> : (\r\n//       <ul style={styles.list}>\r\n//         {filteredLocations.map((provider, index) => {\r\n//           const { type, name, address, city } = getProviderDetails(provider);\r\n//           const key = getProviderKey(type, name, address);\r\n//           return (\r\n//             <li key={index} style={styles.listItem}>\r\n//               <span style={{ ...styles.colorDot, backgroundColor: LINE_COLORS[index % LINE_COLORS.length] }} />\r\n//               <strong>{name}</strong><br />\r\n//               {address && <>Adresse: {address}<br /></>}\r\n//               {city && <>Stadt: {city}<br /></>}\r\n//               Beste Route: <span style={styles.bold}>{distances[key] || \"Berechne...\"} km</span>\r\n//             </li>\r\n//           );\r\n//         })}\r\n//       </ul>\r\n//     )\r\n//   );\r\n\r\n//   const mockICDData = [\r\n//     { icd: \"D27\", count: 120 },\r\n//     { icd: \"C50\", count: 85 },\r\n//     { icd: \"G40\", count: 42 },\r\n//     { icd: \"I10\", count: 60 },\r\n//     { icd: \"C34\", count: 30 }\r\n//   ];\r\n\r\n//   return (\r\n//     <div style={styles.scrollWrapper}>\r\n//       <div style={styles.scrollSection(20)}>\r\n//         <h3 style={styles.title}>Informationen zur ausgewählten Einrichtung</h3>\r\n//         <div style={styles.scrollSectionContent}>{renderSelectedLocationInfo()}</div>\r\n//       </div>\r\n\r\n//       <div style={styles.scrollSection(30)}>\r\n//         <h3 style={styles.title}>Leistungserbringer Informationen</h3>\r\n//         <div style={styles.scrollSectionContent}>{renderProviderList()}</div>\r\n//       </div>\r\n\r\n//       <div style={styles.scrollSection(45)}>\r\n//         <h3 style={styles.title}>Analytics Dashboard</h3>\r\n//         <div style={styles.scrollSectionContent}>\r\n//           <div style={{ marginBottom: \"20px\" }}>\r\n//             <h4>Verteilung der ICD-Fälle</h4>\r\n//             <p>Zeigt an, wie viele Fälle (Fallzahlen) mit jedem ICD-Code verbunden sind.</p>\r\n//             <p>Darstellung als Balkendiagramm nach ICD-Code.</p>\r\n//             <ResponsiveContainer width=\"100%\" height={200}>\r\n//               <BarChart data={mockICDData}>\r\n//                 <XAxis dataKey=\"icd\" />\r\n//                 <YAxis />\r\n//                 <Tooltip />\r\n//                 <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n//               </BarChart>\r\n//             </ResponsiveContainer>\r\n//           </div>\r\n//           <hr />\r\n//           <div style={{ margin: \"20px 0\" }}>\r\n//             <h4>Erreichbarkeit</h4>\r\n//             <p>Berechnet die beste Route (Straßenentfernung) zwischen dem Standort des Nutzers und jedem Anbieter.</p>\r\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\r\n//           </div>\r\n//           <hr />\r\n//           <div style={{ margin: \"20px 0\" }}>\r\n//             <h4>Spezialisierungsgrad</h4>\r\n//             <p>Ermittelt Zentren mit einer hohen Anzahl von Fällen in einem bestimmten ICD.</p>\r\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\r\n//           </div>\r\n//           <hr />\r\n//           <div style={{ margin: \"20px 0\" }}>\r\n//             <h4>Kooperationsnetzwerke</h4>\r\n//             <p>Visualisiert Kooperationen zwischen Kliniken, MVZs und ASVs.</p>\r\n//             <p>Basierend auf KOOPERIERT_MIT-Beziehungen.</p>\r\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\r\n//           </div>\r\n//           <hr />\r\n//           <div style={{ marginTop: \"20px\" }}>\r\n//             <h4>Empfohlene Behandlungsorte</h4>\r\n//             <p>Schlägt den besten Behandlungsort vor, basierend auf:</p>\r\n//             <ul>\r\n//               <li>Entfernung</li>\r\n//               <li>ICD-Spezialisierung</li>\r\n//               <li>Konnektivität der Kooperation</li>\r\n//             </ul>\r\n//             <p><strong>KI-basiertes Ranking:</strong> z.B. „Top 3 am nächsten + beste ICD-Übereinstimmung“</p>\r\n//             <p style={styles.noData}>Noch keine Empfehlungen verfügbar.</p>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// });\r\n\r\n// export default Analytics;\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useLocation } from \"./LocationContext\";\r\n\r\nconst LINE_COLORS = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\nconst styles = {\r\n  scrollWrapper: {\r\n    width: \"35%\",\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n    top: \"130px\",\r\n    bottom: \"5px\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"10px\",\r\n    padding: \"10px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"600\",\r\n    boxSizing: \"border-box\"\r\n  },\r\n\r\n  scrollSection: (percentage) => ({\r\n    height: `${percentage}%`,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    overflow: \"hidden\"\r\n  }),\r\n\r\n  scrollSectionContent: {\r\n    flex: 1,\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#F0F1F1\",\r\n    border: \"2px solid #b3e5fc\",\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n    boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\r\n  },\r\n\r\n  title: {\r\n    fontSize: \"16px\",\r\n    marginBottom: \"4px\",\r\n    fontWeight: \"600\",\r\n    padding: \"2px 6px\",\r\n    borderRadius: \"2px\"\r\n  },\r\n\r\n  list: {\r\n    listStyleType: \"none\",\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n\r\n  listItem: {\r\n    marginBottom: \"8px\",\r\n    padding: \"8px\",\r\n    borderBottom: \"1px solid #ddd\"\r\n  },\r\n\r\n  bold: { fontWeight: \"600\" },\r\n\r\n  noData: {\r\n    fontStyle: \"italic\",\r\n    color: \"#999\"\r\n  },\r\n\r\n  colorDot: {\r\n    display: \"inline-block\",\r\n    width: \"12px\",\r\n    height: \"12px\",\r\n    borderRadius: \"50%\",\r\n    marginRight: \"5px\"\r\n  },\r\n\r\n  calculatingText: {\r\n    color: \"#666\",\r\n    fontStyle: \"italic\"\r\n  }\r\n};\r\n\r\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\r\n    if (!startLat || !startLon || !endLat || !endLon) {\r\n        console.warn(\"🚨 Missing coordinates for distance calculation!\", { startLat, startLon, endLat, endLon });\r\n        return \"N/A\";\r\n    }\r\n\r\n    const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        if (data.routes && data.routes.length > 0) {\r\n            return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\r\n        } else {\r\n            console.warn(\"⚠️ No valid route found for coordinates:\", { startLat, startLon, endLat, endLon });\r\n            return \"N/A\";\r\n        }\r\n    } catch (error) {\r\n        console.error(\"❌ Error fetching road distance:\", error);\r\n        return \"N/A\";\r\n    }\r\n};\r\n\r\nconst Analystics = () => {\r\n    const { allLocations } = useLocation();\r\n    const [distances, setDistances] = useState({});\r\n\r\n    // ✅ Extract Unique ICD Information (Only Once)\r\n    const uniqueICDInfo = useMemo(() => {\r\n        return allLocations.length > 0\r\n            ? { \r\n                icd_name: allLocations[0].icd_name || \"N/A\",\r\n                icd_fallzahl: allLocations[0].icd_fallzahl || \"N/A\"\r\n            } \r\n            : null;\r\n    }, [allLocations]);\r\n\r\n    // ✅ Find User's Location\r\n    const userLocation = useMemo(() => \r\n        allLocations.find(loc => loc.clinic_name === \"Your Location\"), \r\n        [allLocations]\r\n    );\r\n\r\n    // ✅ Fetch Road Distances for ALL PROVIDERS\r\n    useEffect(() => {\r\n        const fetchDistances = async () => {\r\n            if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\r\n                console.warn(\"⚠️ No valid user location found!\");\r\n                return;\r\n            }\r\n\r\n            const newDistances = {};\r\n\r\n            for (const provider of allLocations) {\r\n                if (provider.clinic_name === \"Your Location\") continue;\r\n\r\n                const providerType = provider.clinic_name \r\n                    ? \"clinic\"\r\n                    : provider.mvz_name \r\n                    ? \"mvz\"\r\n                    : provider.asv_name \r\n                    ? \"asv\"\r\n                    : provider.niedergelassene_name \r\n                    ? \"niedergelassene\"\r\n                    : null;\r\n\r\n                const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\r\n                const providerAddress = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address;\r\n\r\n                if (!providerType || !providerName) continue;\r\n\r\n                const providerLat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude;\r\n                const providerLon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude;\r\n\r\n                if (!providerLat || !providerLon) {\r\n                    console.warn(`⚠️ Skipping provider with missing coordinates: ${providerName}`);\r\n                    continue;\r\n                }\r\n\r\n                const roadDistance = await getRoadDistance(\r\n                    userLocation.latitude, userLocation.longitude, \r\n                    providerLat, providerLon\r\n                );\r\n\r\n                const providerKey = `${providerType}-${providerName}-${providerAddress || ''}`;\r\n                newDistances[providerKey] = roadDistance;\r\n            }\r\n\r\n            setDistances(newDistances);\r\n        };\r\n\r\n        fetchDistances();\r\n    }, [userLocation, allLocations]);\r\n\r\n    const filteredLocations = useMemo(() => \r\n        allLocations.filter(loc => loc.clinic_name !== \"Your Location\"), \r\n        [allLocations]\r\n    );\r\n\r\n    const renderICDInfo = () => (\r\n        uniqueICDInfo ? (\r\n            <>\r\n                <p><strong>Kooperation mit:</strong> {uniqueICDInfo.icd_name}</p>\r\n                <p><strong>Fallzahl:</strong> {uniqueICDInfo.icd_fallzahl}</p>\r\n            </>\r\n        ) : <p style={styles.noData}>Keine Kooperationsinformationen verfügbar.</p>\r\n    );\r\n\r\n    const renderProviderList = () => (\r\n        filteredLocations.length === 0 ? (\r\n            <p style={styles.noData}>Keine Leistungserbringer verfügbar.</p>\r\n        ) : (\r\n            <ul style={styles.list}>\r\n                {filteredLocations.map((provider, index) => {\r\n                    const providerType = provider.clinic_name \r\n                        ? \"clinic\"\r\n                        : provider.mvz_name \r\n                        ? \"mvz\"\r\n                        : provider.asv_name \r\n                        ? \"asv\"\r\n                        : provider.niedergelassene_name \r\n                        ? \"niedergelassene\"\r\n                        : null;\r\n\r\n                    const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\r\n                    const providerAddress = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address;\r\n                    const providerCity = provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city;\r\n\r\n                    if (!providerType || !providerName) return null;\r\n\r\n                    const providerKey = `${providerType}-${providerName}-${providerAddress || ''}`;\r\n\r\n                    return (\r\n                        <li key={index} style={styles.listItem}>\r\n                            <span style={{ ...styles.colorDot, backgroundColor: LINE_COLORS[index % LINE_COLORS.length] }} />\r\n                            <strong>{providerName}</strong><br />\r\n                            {providerCity && <>Stadt: {providerCity}<br /></>}\r\n                            {providerAddress && <>Adresse: {providerAddress}<br /></>}\r\n                            {provider.clinic_number_of_beds && <>Anzahl von Betten: {provider.clinic_number_of_beds}<br /></>}\r\n                            {provider.cooperation && <>Kooperation: {provider.cooperation}<br /></>}\r\n                            {provider.clinic_chefarzt && <>Chefarzt: {provider.clinic_chefarzt}<br /></>}\r\n                            Beste Route: <span style={styles.bold}>{distances[providerKey] || \"Berechne...\"} km</span>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        )\r\n    );\r\n    const mockICDData = [\r\n        { icd: \"D27\", count: 120 },\r\n        { icd: \"C50\", count: 85 },\r\n        { icd: \"G40\", count: 42 },\r\n        { icd: \"I10\", count: 60 },\r\n        { icd: \"C34\", count: 30 }\r\n      ];\r\n    return (\r\n        <div style={styles.scrollWrapper}>\r\n      <div style={styles.scrollSection(20)}>\r\n        <h3 style={styles.title}>Informationen zur ausgewählten Einrichtung</h3>\r\n        <div style={styles.scrollSectionContent}>{renderSelectedLocationInfo()}</div>\r\n      </div>\r\n      <div style={styles.scrollSection(30)}>\r\n        <h3 style={styles.title}>Leistungserbringer Informationen</h3>\r\n        <div style={styles.scrollSectionContent}>{renderProviderList()}</div>\r\n      </div>\r\n      <div style={styles.scrollSection(45)}>\r\n        <h3 style={styles.title}>Analytics Dashboard</h3>\r\n        <div style={styles.scrollSectionContent}>\r\n          <div style={{ marginBottom: \"20px\" }}>\r\n            <h4>Verteilung der ICD-Fälle</h4>\r\n            <p>Zeigt an, wie viele Fälle (Fallzahlen) mit jedem ICD-Code verbunden sind.</p>\r\n            <p>Darstellung als Balkendiagramm nach ICD-Code.</p>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <BarChart data={mockICDData}>\r\n                <XAxis dataKey=\"icd\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n          <hr />\r\n          <div style={{ margin: \"20px 0\" }}>\r\n            <h4>Erreichbarkeit</h4>\r\n            <p>Berechnet die beste Route (Straßenentfernung) zwischen dem Standort des Nutzers und jedem Anbieter.</p>\r\n            <p style={styles.noData}>Noch keine Daten geladen.</p>\r\n          </div>\r\n          <hr />\r\n          <div style={{ margin: \"20px 0\" }}>\r\n            <h4>Spezialisierungsgrad</h4>\r\n            <p>Ermittelt Zentren mit einer hohen Anzahl von Fällen in einem bestimmten ICD.</p>\r\n            <p style={styles.noData}>Noch keine Daten geladen.</p>\r\n          </div>\r\n          <hr />\r\n          <div style={{ margin: \"20px 0\" }}>\r\n            <h4>Kooperationsnetzwerke</h4>\r\n            <p>Visualisiert Kooperationen zwischen Kliniken, MVZs und ASVs.</p>\r\n            <p>Basierend auf KOOPERIERT_MIT-Beziehungen.</p>\r\n            <p style={styles.noData}>Noch keine Daten geladen.</p>\r\n          </div>\r\n          <hr />\r\n          <div style={{ marginTop: \"20px\" }}>\r\n            <h4>Empfohlene Behandlungsorte</h4>\r\n            <p>Schlägt den besten Behandlungsort vor, basierend auf:</p>\r\n            <ul>\r\n              <li>Entfernung</li>\r\n              <li>ICD-Spezialisierung</li>\r\n              <li>Konnektivität der Kooperation</li>\r\n            </ul>\r\n            <p><strong>KI-basiertes Ranking:</strong> z.B. „Top 3 am nächsten + beste ICD-Übereinstimmung“</p>\r\n            <p style={styles.noData}>Noch keine Empfehlungen verfügbar.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Analystics;\r\n\r\n\r\n\r\n\r\n  \r\n\r\n//   return (\r\n    \r\n\r\n      \r\n\r\n      \r\n//   );\r\n// });"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}