{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\Analystics.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useLocation } from \"./LocationContext\";\n// //import axios from \"axios\";\n\n// // Function to get road distance from OSRM API\n// const getRoadDistance = async (startLat, startLon, endLat, endLon) => {\n//     const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\n\n//     try {\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         if (data.routes && data.routes.length > 0) {\n//             return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\n//         } else {\n//             return \"N/A\";\n//         }\n//     } catch (error) {\n//         console.error(\"❌ Error fetching road distance:\", error);\n//         return \"N/A\";\n//     }\n// };\n\n// const Analystics = () => {\n//     const { allLocations } = useLocation();\n//     const [distances, setDistances] = useState({});\n//     const [clinicData, setClinicData] = useState([]);\n\n//     // Find the user's location (if available)\n//     const userLocation = allLocations.find(loc => loc.clinic_name === \"Your Location\");\n\n//     // Fetch road distances between the user's location and all clinics\n//     useEffect(() => {\n//         const fetchDistances = async () => {\n//             if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\n//                 console.warn(\"⚠️ No valid user location found!\");\n//                 return;\n//             }\n\n//             const newDistances = {};\n//             for (const clinic of allLocations) {\n//                 if (clinic.clinic_name === \"Your Location\") continue; // Skip user location\n\n//                 const roadDistance = await getRoadDistance(\n//                     userLocation.latitude, userLocation.longitude, // User's location\n//                     clinic.latitude, clinic.longitude // Clinic's location\n//                 );\n\n//                 newDistances[clinic.clinic_name] = roadDistance;\n//             }\n\n//             setDistances(newDistances);\n//         };\n\n//         fetchDistances();\n//     }, [userLocation, allLocations]);\n\n//     return (\n//         <>\n//             {/* Informations Box */}\n//             <div style={styles.informationsContainer}>\n//                 <h3 style={styles.title}>Informations</h3>\n//                 <p>This section provides general insights based on selected locations.</p>\n//             </div>\n\n//             {/* Analystics Box */}\n//             <div style={styles.analysticContainer}>\n//                 <h3 style={styles.title}>Analystic Data</h3>\n//                 {allLocations.length > 0 ? (\n//                     <ul style={styles.list}>\n//                         {allLocations.map((clinic, index) => {\n//                             if (clinic.clinic_name === \"Your Location\") return null; // Skip user location\n\n//                             return (\n//                                 <li key={index} style={styles.listItem}>\n//                                     <strong>Clinic:</strong> {clinic.clinic_name} ({clinic.clinic_identity || \"N/A\"})<br />\n//                                     <strong>City:</strong> {clinic.city || \"N/A\"} <br />\n//                                     <strong>Number of Beds:</strong> {clinic.number_of_beds || \"N/A\"} <br />\n//                                     <strong>ICD Name:</strong> {clinic.icd_name || \"N/A\"} <br />\n//                                     <strong>ICD Fallzahl:</strong> {clinic.icd_fallzahl || \"N/A\"} <br />\n//                                     <strong>Road Distance:</strong> <span style={styles.bold}>{distances[clinic.clinic_name] || \"Calculating...\"} km</span>\n//                                 </li>\n//                             );\n//                         })}\n//                     </ul>\n//                 ) : (\n//                     <p style={styles.noData}>No data available.</p>\n//                 )}\n//             </div>\n//         </>\n//     );\n// };\n\n// // CSS-in-JS styles\n// const styles = {\n//     informationsContainer: {\n//         width: \"35%\",\n//         fontWeight: \"600\",\n//         position: \"absolute\",\n//         right: 0,\n//         top: \"100px\", // Position above Analystics\n//         padding: \"20px\",\n//         backgroundColor: \"#e3f2fd\",\n//         boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\n//         borderRadius: \"8px\",\n//         marginBottom: \"20px\",\n//     },\n//     analysticContainer: {\n//         width: \"35%\",\n//         fontWeight: \"600\",\n//         position: \"absolute\",\n//         right: 0,\n//         top: \"220px\", // Positioned right below Informations\n//         padding: \"20px\",\n//         backgroundColor: \"#f9f9f9\",\n//         boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\n//         borderRadius: \"8px\",\n//     },\n//     title: {\n//         fontSize: \"20px\",\n//         marginBottom: \"10px\"\n//     },\n//     list: {\n//         listStyleType: \"none\",\n//         padding: 0\n//     },\n//     listItem: {\n//         marginBottom: \"10px\",\n//         padding: \"10px\",\n//         borderBottom: \"1px solid #ddd\"\n//     },\n//     bold: {\n//         fontWeight: \"600\"\n//     },\n//     noData: {\n//         fontStyle: \"italic\",\n//         color: \"#999\"\n//     }\n// };\n\n// export default Analystics;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"./LocationContext\";\n\n// Predefined colors (same as map)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\n\n// Function to get road distance from OSRM API\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\n  const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.routes && data.routes.length > 0) {\n      return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\n    } else {\n      return \"N/A\";\n    }\n  } catch (error) {\n    console.error(\"❌ Error fetching road distance:\", error);\n    return \"N/A\";\n  }\n};\nconst Analystics = () => {\n  _s();\n  const {\n    allLocations\n  } = useLocation();\n  const [distances, setDistances] = useState({});\n\n  // Find user location (if available)\n  const userLocation = allLocations.find(loc => loc.clinic_name === \"Your Location\");\n\n  // Fetch road distances\n  useEffect(() => {\n    const fetchDistances = async () => {\n      if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\n        console.warn(\"⚠️ No valid user location found!\");\n        return;\n      }\n      const newDistances = {};\n      for (const [index, clinic] of allLocations.entries()) {\n        if (clinic.clinic_name === \"Your Location\") continue; // Skip user location\n\n        const roadDistance = await getRoadDistance(userLocation.latitude, userLocation.longitude, clinic.latitude, clinic.longitude);\n        newDistances[clinic.clinic_name] = roadDistance;\n      }\n      setDistances(newDistances);\n    };\n    fetchDistances();\n  }, [userLocation, allLocations]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.informationsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Informations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This section provides general insights based on selected locations.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.analysticContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Analystic Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), allLocations.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.list,\n        children: allLocations.map((clinic, index) => {\n          if (clinic.clinic_name === \"Your Location\") return null; // Skip user location\n\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: styles.listItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: lineColors[index % lineColors.length],\n                fontSize: \"18px\",\n                marginRight: \"10px\"\n              },\n              children: \"\\u25CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Clinic:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 41\n              }, this), \" \", clinic.clinic_name, \" (\", clinic.clinic_identity || \"N/A\", \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 122\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this), \" \", clinic.city || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 87\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Number of Beds:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 41\n              }, this), \" \", clinic.number_of_beds || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 107\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ICD Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 41\n              }, this), \" \", clinic.icd_name || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 95\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ICD Fallzahl:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 41\n              }, this), \" \", clinic.icd_fallzahl || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 103\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Road Distance:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 41\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: styles.bold,\n                children: [distances[clinic.clinic_name] || \"Calculating...\", \" km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 73\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.noData,\n        children: \"No data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n// CSS-in-JS styles\n_s(Analystics, \"LnnOKaSQI01tsLJ9WEFGZVouI2A=\", false, function () {\n  return [useLocation];\n});\n_c = Analystics;\nconst styles = {\n  informationsContainer: {\n    width: \"35%\",\n    fontWeight: \"600\",\n    position: \"absolute\",\n    right: 0,\n    top: \"100px\",\n    padding: \"20px\",\n    backgroundColor: \"#e3f2fd\",\n    boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\n    borderRadius: \"8px\",\n    marginBottom: \"20px\"\n  },\n  analysticContainer: {\n    width: \"35%\",\n    fontWeight: \"600\",\n    position: \"absolute\",\n    right: 0,\n    top: \"220px\",\n    padding: \"20px\",\n    backgroundColor: \"#f9f9f9\",\n    boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\n    borderRadius: \"8px\"\n  },\n  title: {\n    fontSize: \"16px\",\n    // Smaller title font\n    marginBottom: \"10px\"\n  },\n  list: {\n    listStyleType: \"none\",\n    padding: 0\n  },\n  listItem: {\n    marginBottom: \"10px\",\n    padding: \"8px\",\n    borderBottom: \"1px solid #ddd\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    // Align text properly\n    fontSize: \"12px\" // Smaller text for better fit\n  },\n  bold: {\n    fontWeight: \"600\"\n  },\n  noData: {\n    fontStyle: \"italic\",\n    color: \"#999\",\n    fontSize: \"12px\"\n  }\n};\nexport default Analystics;\nvar _c;\n$RefreshReg$(_c, \"Analystics\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","lineColors","getRoadDistance","startLat","startLon","endLat","endLon","url","response","fetch","data","json","routes","length","distance","toFixed","error","console","Analystics","_s","allLocations","distances","setDistances","userLocation","find","loc","clinic_name","fetchDistances","latitude","longitude","warn","newDistances","index","clinic","entries","roadDistance","children","style","styles","informationsContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","analysticContainer","list","map","listItem","color","fontSize","marginRight","clinic_identity","city","number_of_beds","icd_name","icd_fallzahl","bold","noData","_c","width","fontWeight","position","right","top","padding","backgroundColor","boxShadow","borderRadius","marginBottom","listStyleType","borderBottom","display","alignItems","fontStyle","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/Analystics.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useLocation } from \"./LocationContext\";\r\n// //import axios from \"axios\";\r\n\r\n// // Function to get road distance from OSRM API\r\n// const getRoadDistance = async (startLat, startLon, endLat, endLon) => {\r\n//     const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\r\n\r\n//     try {\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         if (data.routes && data.routes.length > 0) {\r\n//             return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\r\n//         } else {\r\n//             return \"N/A\";\r\n//         }\r\n//     } catch (error) {\r\n//         console.error(\"❌ Error fetching road distance:\", error);\r\n//         return \"N/A\";\r\n//     }\r\n// };\r\n\r\n// const Analystics = () => {\r\n//     const { allLocations } = useLocation();\r\n//     const [distances, setDistances] = useState({});\r\n//     const [clinicData, setClinicData] = useState([]);\r\n\r\n//     // Find the user's location (if available)\r\n//     const userLocation = allLocations.find(loc => loc.clinic_name === \"Your Location\");\r\n\r\n//     // Fetch road distances between the user's location and all clinics\r\n//     useEffect(() => {\r\n//         const fetchDistances = async () => {\r\n//             if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\r\n//                 console.warn(\"⚠️ No valid user location found!\");\r\n//                 return;\r\n//             }\r\n\r\n//             const newDistances = {};\r\n//             for (const clinic of allLocations) {\r\n//                 if (clinic.clinic_name === \"Your Location\") continue; // Skip user location\r\n\r\n//                 const roadDistance = await getRoadDistance(\r\n//                     userLocation.latitude, userLocation.longitude, // User's location\r\n//                     clinic.latitude, clinic.longitude // Clinic's location\r\n//                 );\r\n\r\n//                 newDistances[clinic.clinic_name] = roadDistance;\r\n//             }\r\n\r\n//             setDistances(newDistances);\r\n//         };\r\n\r\n//         fetchDistances();\r\n//     }, [userLocation, allLocations]);\r\n\r\n//     return (\r\n//         <>\r\n//             {/* Informations Box */}\r\n//             <div style={styles.informationsContainer}>\r\n//                 <h3 style={styles.title}>Informations</h3>\r\n//                 <p>This section provides general insights based on selected locations.</p>\r\n//             </div>\r\n\r\n//             {/* Analystics Box */}\r\n//             <div style={styles.analysticContainer}>\r\n//                 <h3 style={styles.title}>Analystic Data</h3>\r\n//                 {allLocations.length > 0 ? (\r\n//                     <ul style={styles.list}>\r\n//                         {allLocations.map((clinic, index) => {\r\n//                             if (clinic.clinic_name === \"Your Location\") return null; // Skip user location\r\n\r\n//                             return (\r\n//                                 <li key={index} style={styles.listItem}>\r\n//                                     <strong>Clinic:</strong> {clinic.clinic_name} ({clinic.clinic_identity || \"N/A\"})<br />\r\n//                                     <strong>City:</strong> {clinic.city || \"N/A\"} <br />\r\n//                                     <strong>Number of Beds:</strong> {clinic.number_of_beds || \"N/A\"} <br />\r\n//                                     <strong>ICD Name:</strong> {clinic.icd_name || \"N/A\"} <br />\r\n//                                     <strong>ICD Fallzahl:</strong> {clinic.icd_fallzahl || \"N/A\"} <br />\r\n//                                     <strong>Road Distance:</strong> <span style={styles.bold}>{distances[clinic.clinic_name] || \"Calculating...\"} km</span>\r\n//                                 </li>\r\n//                             );\r\n//                         })}\r\n//                     </ul>\r\n//                 ) : (\r\n//                     <p style={styles.noData}>No data available.</p>\r\n//                 )}\r\n//             </div>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// // CSS-in-JS styles\r\n// const styles = {\r\n//     informationsContainer: {\r\n//         width: \"35%\",\r\n//         fontWeight: \"600\",\r\n//         position: \"absolute\",\r\n//         right: 0,\r\n//         top: \"100px\", // Position above Analystics\r\n//         padding: \"20px\",\r\n//         backgroundColor: \"#e3f2fd\",\r\n//         boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\r\n//         borderRadius: \"8px\",\r\n//         marginBottom: \"20px\",\r\n//     },\r\n//     analysticContainer: {\r\n//         width: \"35%\",\r\n//         fontWeight: \"600\",\r\n//         position: \"absolute\",\r\n//         right: 0,\r\n//         top: \"220px\", // Positioned right below Informations\r\n//         padding: \"20px\",\r\n//         backgroundColor: \"#f9f9f9\",\r\n//         boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\r\n//         borderRadius: \"8px\",\r\n//     },\r\n//     title: {\r\n//         fontSize: \"20px\",\r\n//         marginBottom: \"10px\"\r\n//     },\r\n//     list: {\r\n//         listStyleType: \"none\",\r\n//         padding: 0\r\n//     },\r\n//     listItem: {\r\n//         marginBottom: \"10px\",\r\n//         padding: \"10px\",\r\n//         borderBottom: \"1px solid #ddd\"\r\n//     },\r\n//     bold: {\r\n//         fontWeight: \"600\"\r\n//     },\r\n//     noData: {\r\n//         fontStyle: \"italic\",\r\n//         color: \"#999\"\r\n//     }\r\n// };\r\n\r\n// export default Analystics;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"./LocationContext\";\r\n\r\n// Predefined colors (same as map)\r\nconst lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\n// Function to get road distance from OSRM API\r\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\r\n    const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        if (data.routes && data.routes.length > 0) {\r\n            return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\r\n        } else {\r\n            return \"N/A\";\r\n        }\r\n    } catch (error) {\r\n        console.error(\"❌ Error fetching road distance:\", error);\r\n        return \"N/A\";\r\n    }\r\n};\r\n\r\nconst Analystics = () => {\r\n    const { allLocations } = useLocation();\r\n    const [distances, setDistances] = useState({});\r\n\r\n    // Find user location (if available)\r\n    const userLocation = allLocations.find(loc => loc.clinic_name === \"Your Location\");\r\n\r\n    // Fetch road distances\r\n    useEffect(() => {\r\n        const fetchDistances = async () => {\r\n            if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\r\n                console.warn(\"⚠️ No valid user location found!\");\r\n                return;\r\n            }\r\n\r\n            const newDistances = {};\r\n            for (const [index, clinic] of allLocations.entries()) {\r\n                if (clinic.clinic_name === \"Your Location\") continue; // Skip user location\r\n\r\n                const roadDistance = await getRoadDistance(\r\n                    userLocation.latitude, userLocation.longitude, \r\n                    clinic.latitude, clinic.longitude \r\n                );\r\n\r\n                newDistances[clinic.clinic_name] = roadDistance;\r\n            }\r\n\r\n            setDistances(newDistances);\r\n        };\r\n\r\n        fetchDistances();\r\n    }, [userLocation, allLocations]);\r\n\r\n    return (\r\n        <>\r\n            {/* Informations Box */}\r\n            <div style={styles.informationsContainer}>\r\n                <h3 style={styles.title}>Informations</h3>\r\n                <p>This section provides general insights based on selected locations.</p>\r\n            </div>\r\n\r\n            {/* Analystics Box */}\r\n            <div style={styles.analysticContainer}>\r\n                <h3 style={styles.title}>Analystic Data</h3>\r\n                {allLocations.length > 0 ? (\r\n                    <ul style={styles.list}>\r\n                        {allLocations.map((clinic, index) => {\r\n                            if (clinic.clinic_name === \"Your Location\") return null; // Skip user location\r\n\r\n                            return (\r\n                                <li key={index} style={styles.listItem}>\r\n                                    {/* Circle indicator */}\r\n                                    <span \r\n                                        style={{\r\n                                            color: lineColors[index % lineColors.length], \r\n                                            fontSize: \"18px\", \r\n                                            marginRight: \"10px\"\r\n                                        }}>\r\n                                        ●\r\n                                    </span>\r\n\r\n                                    <div>\r\n                                        <strong>Clinic:</strong> {clinic.clinic_name} ({clinic.clinic_identity || \"N/A\"})<br />\r\n                                        <strong>City:</strong> {clinic.city || \"N/A\"} <br />\r\n                                        <strong>Number of Beds:</strong> {clinic.number_of_beds || \"N/A\"} <br />\r\n                                        <strong>ICD Name:</strong> {clinic.icd_name || \"N/A\"} <br />\r\n                                        <strong>ICD Fallzahl:</strong> {clinic.icd_fallzahl || \"N/A\"} <br />\r\n                                        <strong>Road Distance:</strong> <span style={styles.bold}>{distances[clinic.clinic_name] || \"Calculating...\"} km</span>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                ) : (\r\n                    <p style={styles.noData}>No data available.</p>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n// CSS-in-JS styles\r\nconst styles = {\r\n    informationsContainer: {\r\n        width: \"35%\",\r\n        fontWeight: \"600\",\r\n        position: \"absolute\",\r\n        right: 0,\r\n        top: \"100px\",\r\n        padding: \"20px\",\r\n        backgroundColor: \"#e3f2fd\",\r\n        boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: \"8px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    analysticContainer: {\r\n        width: \"35%\",\r\n        fontWeight: \"600\",\r\n        position: \"absolute\",\r\n        right: 0,\r\n        top: \"220px\",\r\n        padding: \"20px\",\r\n        backgroundColor: \"#f9f9f9\",\r\n        boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: \"8px\",\r\n    },\r\n    title: {\r\n        fontSize: \"16px\",  // Smaller title font\r\n        marginBottom: \"10px\"\r\n    },\r\n    list: {\r\n        listStyleType: \"none\",\r\n        padding: 0\r\n    },\r\n    listItem: {\r\n        marginBottom: \"10px\",\r\n        padding: \"8px\",\r\n        borderBottom: \"1px solid #ddd\",\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\", // Align text properly\r\n        fontSize: \"12px\", // Smaller text for better fit\r\n    },\r\n    bold: {\r\n        fontWeight: \"600\"\r\n    },\r\n    noData: {\r\n        fontStyle: \"italic\",\r\n        color: \"#999\",\r\n        fontSize: \"12px\"\r\n    }\r\n};\r\n\r\nexport default Analystics;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;;AAEjF;AACA,MAAMC,eAAe,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,KAAK;EAClE,MAAMC,GAAG,GAAG,oDAAoDH,QAAQ,IAAID,QAAQ,IAAIG,MAAM,IAAID,MAAM,iBAAiB;EAEzH,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,MAAM,IAAIF,IAAI,CAACE,MAAM,CAACC,M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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}