{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\Analystics.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useMemo } from \"react\";\n// import { useLocation } from \"./LocationContext\";\n\n// // üéØ Predefined colors for providers\n// const lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\n\n// // üöÄ Function to get road distance from OSRM API\n// const getRoadDistance = async (startLat, startLon, endLat, endLon) => {\n//     if (!startLat || !startLon || !endLat || !endLon) {\n//         console.warn(\"üö® Missing coordinates for distance calculation!\", { startLat, startLon, endLat, endLon });\n//         return \"N/A\";\n//     }\n\n//     const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\n\n//     try {\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         if (data.routes && data.routes.length > 0) {\n//             return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\n//         } else {\n//             console.warn(\"‚ö†Ô∏è No valid route found for coordinates:\", { startLat, startLon, endLat, endLon });\n//             return \"N/A\";\n//         }\n//     } catch (error) {\n//         console.error(\"‚ùå Error fetching road distance:\", error);\n//         return \"N/A\";\n//     }\n// };\n\n// const Analystics = () => {\n//     const { allLocations } = useLocation();\n//     const [distances, setDistances] = useState({});\n\n//     // // ‚úÖ Extract Unique ICD Information (Only Once)\n//     // const uniqueICDInfo = useMemo(() => {\n//     //     return allLocations.length > 0\n//     //         ? { \n\n//     //             icd_name: allLocations[0].icd_name || \"N/A\",\n//     //             icd_fallzahl: allLocations[0].icd_fallzahl || \"N/A\"\n//     //         } \n//     //         : null;\n//     // }, [allLocations]);\n\n//     // ‚úÖ Find User's Location\n//     const userLocation = useMemo(() => \n//         allLocations.find(loc => loc.clinic_name === \"Your Location\"), \n//         [allLocations]\n//     );\n\n//     // ‚úÖ Fetch Road Distances for ALL PROVIDERS\n//     useEffect(() => {\n//         const fetchDistances = async () => {\n//             if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\n//                 console.warn(\"‚ö†Ô∏è No valid user location found!\");\n//                 return;\n//             }\n\n//             const newDistances = {};\n\n//             for (const provider of allLocations) {\n//                 if (provider.clinic_name === \"Your Location\") continue; // Skip user location\n\n//                 // üîπ Identify the provider type dynamically\n//                 const providerType = provider.clinic_name \n//                     ? \"clinic\"\n//                     : provider.mvz_name \n//                     ? \"mvz\"\n//                     : provider.asv_name \n//                     ? \"asv\"\n//                     : provider.niedergelassene_name \n//                     ? \"niedergelassene\"\n//                     : null;\n\n//                 const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\n\n//                 if (!providerType || !providerName) continue;\n\n//                 const providerLat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude;\n//                 const providerLon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude;\n\n//                 if (!providerLat || !providerLon) {\n//                     console.warn(`‚ö†Ô∏è Skipping provider with missing coordinates: ${providerName}`);\n//                     continue;\n//                 }\n\n//                 // üîπ Fetch the road distance\n//                 const roadDistance = await getRoadDistance(\n//                     userLocation.latitude, userLocation.longitude, \n//                     providerLat, providerLon\n//                 );\n\n//                 // üîπ Store distance dynamically\n//                 newDistances[`${providerType}-${providerName}`] = roadDistance;\n//             }\n\n//             setDistances(newDistances);\n//         };\n\n//         fetchDistances();\n//     }, [userLocation, allLocations]);\n\n//     return (\n//         <>\n//             {/* üìå ICD Information Section\n//             {uniqueICDInfo && (\n//                 <div style={styles.informationsContainer}>\n//                     <h3 style={styles.title}>Informationen zur Kooperationen</h3>\n//                     <p><strong>Kooperation mit :</strong> {uniqueICDInfo.icd_name}</p>\n//                     <p><strong>Fallzahl:</strong> {uniqueICDInfo.icd_fallzahl}</p>\n//                 </div>\n//             )} */}\n//             <div style={styles.informationsContainer} >\n//             <h3 style={styles.title}>Informationen zur Kooperationen</h3>\n//             </div>\n//             {/* üìå Leistungserbringer (Providers) Information */}\n//             <div style={styles.analysticContainer}>\n//                 <h3 style={styles.title}>Leistungserbringer Informationen</h3>\n//                 {allLocations.length > 0 ? (\n//                     <ul style={styles.list}>\n//                         {allLocations.map((provider, index) => {\n//                             if (provider.clinic_name === \"Your Location\") return null; // Skip user location\n\n//                             // üîπ Dynamically determine provider type and name\n//                             const providerType = provider.clinic_name \n//                                 ? \"clinic\"\n//                                 : provider.mvz_name \n//                                 ? \"mvz\"\n//                                 : provider.asv_name \n//                                 ? \"asv\"\n//                                 : provider.niedergelassene_name \n//                                 ? \"niedergelassene\"\n//                                 : null;\n\n//                             const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\n\n//                             if (!providerType || !providerName) return null;\n\n//                             return (\n//                                 <li key={index} style={styles.listItem}>\n//                                     {/* üîµ Colored Circle Indicator */}\n//                                     <span \n//                                         style={{\n//                                             color: lineColors[index % lineColors.length], \n//                                             fontSize: \"14px\",  \n//                                             marginRight: \"5px\",\n//                                             display: \"inline-block\",\n//                                             width: \"12px\",\n//                                             height: \"12px\",\n//                                             borderRadius: \"50%\",\n//                                             backgroundColor: lineColors[index % lineColors.length],\n//                                         }}>\n//                                     </span>\n//                                     <strong>{providerName}</strong> <br />\n//                                     <strong>Stadt:</strong> {provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || \"N/A\"} <br />\n//                                     <strong>Addresse:</strong> {provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || \"N/A\"} <br />\n//                                     <strong>Anzahl von Betten:</strong> {provider.clinic_number_of_beds || \"N/A\"} <br />\n//                                     <strong>Kooperation:</strong> {provider.cooperation || \"N/A\"} <br />\n//                                     <strong>Chefarzt:</strong> {provider.clinic_chefarzt || \"N/A\"} <br />\n//                                     <strong>Beste Route:</strong> \n//                                     <span style={styles.bold}>\n//                                         {distances[`${providerType}-${providerName}`] || \"Calculating...\"} km\n//                                     </span>\n//                                 </li>\n//                             );\n//                         })}\n//                     </ul>\n//                 ) : (\n//                     <p style={styles.noData}>No data available.</p>\n//                 )}\n//             </div>\n//         </>\n//     );\n// };\n// // üé® CSS Styles\n// const styles = {\n//     informationsContainer: {\n//         width: \"35%\",\n//         fontWeight: \"600\",\n//         position: \"absolute\",\n//         border: \"2px solid #b3e5fc\",\n//         right: \"10px\",\n//         top: \"130px\",\n//         bottom : \"650px\",\n//         padding: \"15px\",\n//         backgroundColor: \"#e1ecf0\",\n//         boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\n//         borderRadius: \"8px\",\n//         marginBottom: \"15px\",\n//         fontSize: \"12px\",\n//     },\n//     analysticContainer: {\n//         width: \"35%\",\n//         fontWeight: \"600\",\n//         border: \"2px solid #b3e5fc\",\n//         position: \"absolute\",\n//         right: \"10px\",\n//         top: \"300px\",\n//         padding: \"15px\",\n//         backgroundColor: \"#e1ecf0\",\n//         boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\n//         borderRadius: \"8px\",\n//         fontSize: \"12px\",\n//     },\n//     title: {\n//         fontSize: \"14px\",\n//         marginBottom: \"8px\"\n//     },\n//     list: {\n//         listStyleType: \"none\",\n//         padding: 0,\n//         margin: 0\n//     },\n//     listItem: {\n//         marginBottom: \"8px\", // Reduce spacing between each item\n//         padding: \"8px\",\n//         borderBottom: \"1px solid #ddd\"\n//     },\n//     bold: {\n//         fontWeight: \"600\"\n//     },\n//     noData: {\n//         fontStyle: \"italic\",\n//         color: \"#999\"\n//     }\n// };\n\n// export default Analystics;\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useLocation } from \"./LocationContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\n  if (!startLat || !startLon || !endLat || !endLon) return \"N/A\";\n  const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\n  try {\n    var _data$routes;\n    const response = await fetch(url);\n    const data = await response.json();\n    if (((_data$routes = data.routes) === null || _data$routes === void 0 ? void 0 : _data$routes.length) > 0) {\n      return (data.routes[0].distance / 1000).toFixed(2);\n    } else {\n      return \"N/A\";\n    }\n  } catch {\n    return \"N/A\";\n  }\n};\nconst Analystics = () => {\n  _s();\n  const {\n    allLocations,\n    selectedLocation,\n    setSelectedLocation\n  } = useLocation();\n  const [distances, setDistances] = useState({});\n  const userLocation = useMemo(() => allLocations.find(loc => loc.clinic_name === \"Your Location\"), [allLocations]);\n  useEffect(() => {\n    const fetchDistances = async () => {\n      if (!(userLocation !== null && userLocation !== void 0 && userLocation.latitude) || !(userLocation !== null && userLocation !== void 0 && userLocation.longitude)) return;\n      const newDistances = {};\n      for (const provider of allLocations) {\n        if (provider.clinic_name === \"Your Location\") continue;\n        const providerType = provider.clinic_name ? \"clinic\" : provider.mvz_name ? \"mvz\" : provider.asv_name ? \"asv\" : provider.niedergelassene_name ? \"niedergelassene\" : null;\n        const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\n        const lat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude;\n        const lon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude;\n        if (!providerType || !providerName || !lat || !lon) continue;\n        const roadDistance = await getRoadDistance(userLocation.latitude, userLocation.longitude, lat, lon);\n        newDistances[`${providerType}-${providerName}`] = roadDistance;\n      }\n      setDistances(newDistances);\n    };\n    fetchDistances();\n  }, [userLocation, allLocations]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.informationsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Informationen zur Kooperationen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.scrollableBox,\n        children: selectedLocation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 32\n            }, this), \" \", selectedLocation.clinic_name || selectedLocation.mvz_name || selectedLocation.neurologe_name || selectedLocation.onkologe_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Adresse:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 32\n            }, this), \" \", selectedLocation.clinic_address || selectedLocation.mvz_address || selectedLocation.neurologe_address || selectedLocation.onkologe_address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Stadt:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 32\n            }, this), \" \", selectedLocation.clinic_city || selectedLocation.mvz_city || selectedLocation.neurologe_city || selectedLocation.onkologe_city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fallzahl:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 32\n            }, this), \" \", selectedLocation.icd_fallzahl || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Bitte w\\xE4hlen Sie einen Anbieter aus.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.analysticContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Leistungserbringer Informationen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.scrollableBox,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: styles.list,\n          children: allLocations.map((provider, index) => {\n            if (provider.clinic_name === \"Your Location\") return null;\n            const providerType = provider.clinic_name ? \"clinic\" : provider.mvz_name ? \"mvz\" : provider.asv_name ? \"asv\" : provider.niedergelassene_name ? \"niedergelassene\" : null;\n            const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => setSelectedLocation(provider),\n              style: {\n                ...styles.listItem,\n                cursor: \"pointer\",\n                backgroundColor: selectedLocation === provider ? \"#d0ecff\" : \"transparent\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  backgroundColor: lineColors[index % lineColors.length],\n                  display: \"inline-block\",\n                  width: \"12px\",\n                  height: \"12px\",\n                  borderRadius: \"50%\",\n                  marginRight: \"5px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: providerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 68\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Stadt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 37\n              }, this), \" \", provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 168\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Addresse:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 37\n              }, this), \" \", provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 183\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Anzahl von Betten:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 37\n              }, this), \" \", provider.clinic_number_of_beds || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 115\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Kooperation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 37\n              }, this), \" \", provider.cooperation || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 99\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Chefarzt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 37\n              }, this), \" \", provider.clinic_chefarzt || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 100\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Beste Route:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 37\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: styles.bold,\n                children: distances[`${providerType}-${providerName}`] || \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 67\n              }, this), \" km\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Analystics, \"1ecRoOY1i47Wzgjp/GW7llceOIc=\", false, function () {\n  return [useLocation];\n});\n_c = Analystics;\nconst styles = {\n  informationsContainer: {\n    width: \"35%\",\n    position: \"absolute\",\n    top: \"130px\",\n    right: \"10px\",\n    backgroundColor: \"#e1ecf0\",\n    border: \"2px solid #b3e5fc\",\n    borderRadius: \"8px\",\n    padding: \"15px\",\n    fontSize: \"12px\",\n    maxHeight: \"140px\",\n    overflow: \"hidden\",\n    boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\"\n  },\n  analysticContainer: {\n    width: \"35%\",\n    position: \"absolute\",\n    top: \"280px\",\n    right: \"10px\",\n    backgroundColor: \"#e1ecf0\",\n    border: \"2px solid #b3e5fc\",\n    borderRadius: \"8px\",\n    padding: \"15px\",\n    fontSize: \"12px\",\n    maxHeight: \"calc(100vh - 300px)\",\n    boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\"\n  },\n  scrollableBox: {\n    overflowY: \"auto\",\n    maxHeight: \"100%\"\n  },\n  title: {\n    fontSize: \"14px\",\n    marginBottom: \"8px\"\n  },\n  list: {\n    listStyleType: \"none\",\n    padding: 0,\n    margin: 0\n  },\n  listItem: {\n    marginBottom: \"8px\",\n    padding: \"8px\",\n    borderBottom: \"1px solid #ddd\"\n  },\n  bold: {\n    fontWeight: \"600\"\n  },\n  noData: {\n    fontStyle: \"italic\",\n    color: \"#999\"\n  }\n};\nexport default Analystics;\nvar _c;\n$RefreshReg$(_c, \"Analystics\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","lineColors","getRoadDistance","startLat","startLon","endLat","endLon","url","_data$routes","response","fetch","data","json","routes","length","distance","toFixed","Analystics","_s","allLocations","selectedLocation","setSelectedLocation","distances","setDistances","userLocation","find","loc","clinic_name","fetchDistances","latitude","longitude","newDistances","provider","providerType","mvz_name","asv_name","niedergelassene_name","providerName","lat","clinic_latitude","mvz_latitude","asv_latitude","niedergelassene_latitude","lon","clinic_longitude","mvz_longitude","asv_longitude","niedergelassene_longitude","roadDistance","children","style","styles","informationsContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","scrollableBox","neurologe_name","onkologe_name","clinic_address","mvz_address","neurologe_address","onkologe_address","clinic_city","mvz_city","neurologe_city","onkologe_city","icd_fallzahl","analysticContainer","list","map","index","onClick","listItem","cursor","backgroundColor","display","width","height","borderRadius","marginRight","asv_city","niedergelassene_city","asv_address","niedergelassene_address","clinic_number_of_beds","cooperation","clinic_chefarzt","bold","_c","position","top","right","border","padding","fontSize","maxHeight","overflow","boxShadow","overflowY","marginBottom","listStyleType","margin","borderBottom","fontWeight","noData","fontStyle","color","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/Analystics.js"],"sourcesContent":["// import React, { useState, useEffect, useMemo } from \"react\";\r\n// import { useLocation } from \"./LocationContext\";\r\n\r\n// // üéØ Predefined colors for providers\r\n// const lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\n// // üöÄ Function to get road distance from OSRM API\r\n// const getRoadDistance = async (startLat, startLon, endLat, endLon) => {\r\n//     if (!startLat || !startLon || !endLat || !endLon) {\r\n//         console.warn(\"üö® Missing coordinates for distance calculation!\", { startLat, startLon, endLat, endLon });\r\n//         return \"N/A\";\r\n//     }\r\n\r\n//     const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\r\n\r\n//     try {\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         if (data.routes && data.routes.length > 0) {\r\n//             return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\r\n//         } else {\r\n//             console.warn(\"‚ö†Ô∏è No valid route found for coordinates:\", { startLat, startLon, endLat, endLon });\r\n//             return \"N/A\";\r\n//         }\r\n//     } catch (error) {\r\n//         console.error(\"‚ùå Error fetching road distance:\", error);\r\n//         return \"N/A\";\r\n//     }\r\n// };\r\n\r\n// const Analystics = () => {\r\n//     const { allLocations } = useLocation();\r\n//     const [distances, setDistances] = useState({});\r\n\r\n//     // // ‚úÖ Extract Unique ICD Information (Only Once)\r\n//     // const uniqueICDInfo = useMemo(() => {\r\n//     //     return allLocations.length > 0\r\n//     //         ? { \r\n\r\n//     //             icd_name: allLocations[0].icd_name || \"N/A\",\r\n//     //             icd_fallzahl: allLocations[0].icd_fallzahl || \"N/A\"\r\n//     //         } \r\n//     //         : null;\r\n//     // }, [allLocations]);\r\n\r\n//     // ‚úÖ Find User's Location\r\n//     const userLocation = useMemo(() => \r\n//         allLocations.find(loc => loc.clinic_name === \"Your Location\"), \r\n//         [allLocations]\r\n//     );\r\n\r\n//     // ‚úÖ Fetch Road Distances for ALL PROVIDERS\r\n//     useEffect(() => {\r\n//         const fetchDistances = async () => {\r\n//             if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\r\n//                 console.warn(\"‚ö†Ô∏è No valid user location found!\");\r\n//                 return;\r\n//             }\r\n\r\n//             const newDistances = {};\r\n\r\n//             for (const provider of allLocations) {\r\n//                 if (provider.clinic_name === \"Your Location\") continue; // Skip user location\r\n\r\n//                 // üîπ Identify the provider type dynamically\r\n//                 const providerType = provider.clinic_name \r\n//                     ? \"clinic\"\r\n//                     : provider.mvz_name \r\n//                     ? \"mvz\"\r\n//                     : provider.asv_name \r\n//                     ? \"asv\"\r\n//                     : provider.niedergelassene_name \r\n//                     ? \"niedergelassene\"\r\n//                     : null;\r\n\r\n//                 const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\r\n\r\n//                 if (!providerType || !providerName) continue;\r\n\r\n//                 const providerLat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude;\r\n//                 const providerLon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude;\r\n\r\n//                 if (!providerLat || !providerLon) {\r\n//                     console.warn(`‚ö†Ô∏è Skipping provider with missing coordinates: ${providerName}`);\r\n//                     continue;\r\n//                 }\r\n\r\n//                 // üîπ Fetch the road distance\r\n//                 const roadDistance = await getRoadDistance(\r\n//                     userLocation.latitude, userLocation.longitude, \r\n//                     providerLat, providerLon\r\n//                 );\r\n\r\n//                 // üîπ Store distance dynamically\r\n//                 newDistances[`${providerType}-${providerName}`] = roadDistance;\r\n//             }\r\n\r\n//             setDistances(newDistances);\r\n//         };\r\n\r\n//         fetchDistances();\r\n//     }, [userLocation, allLocations]);\r\n\r\n//     return (\r\n//         <>\r\n//             {/* üìå ICD Information Section\r\n//             {uniqueICDInfo && (\r\n//                 <div style={styles.informationsContainer}>\r\n//                     <h3 style={styles.title}>Informationen zur Kooperationen</h3>\r\n//                     <p><strong>Kooperation mit :</strong> {uniqueICDInfo.icd_name}</p>\r\n//                     <p><strong>Fallzahl:</strong> {uniqueICDInfo.icd_fallzahl}</p>\r\n//                 </div>\r\n//             )} */}\r\n//             <div style={styles.informationsContainer} >\r\n//             <h3 style={styles.title}>Informationen zur Kooperationen</h3>\r\n//             </div>\r\n//             {/* üìå Leistungserbringer (Providers) Information */}\r\n//             <div style={styles.analysticContainer}>\r\n//                 <h3 style={styles.title}>Leistungserbringer Informationen</h3>\r\n//                 {allLocations.length > 0 ? (\r\n//                     <ul style={styles.list}>\r\n//                         {allLocations.map((provider, index) => {\r\n//                             if (provider.clinic_name === \"Your Location\") return null; // Skip user location\r\n\r\n//                             // üîπ Dynamically determine provider type and name\r\n//                             const providerType = provider.clinic_name \r\n//                                 ? \"clinic\"\r\n//                                 : provider.mvz_name \r\n//                                 ? \"mvz\"\r\n//                                 : provider.asv_name \r\n//                                 ? \"asv\"\r\n//                                 : provider.niedergelassene_name \r\n//                                 ? \"niedergelassene\"\r\n//                                 : null;\r\n\r\n//                             const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\r\n\r\n//                             if (!providerType || !providerName) return null;\r\n\r\n//                             return (\r\n//                                 <li key={index} style={styles.listItem}>\r\n//                                     {/* üîµ Colored Circle Indicator */}\r\n//                                     <span \r\n//                                         style={{\r\n//                                             color: lineColors[index % lineColors.length], \r\n//                                             fontSize: \"14px\",  \r\n//                                             marginRight: \"5px\",\r\n//                                             display: \"inline-block\",\r\n//                                             width: \"12px\",\r\n//                                             height: \"12px\",\r\n//                                             borderRadius: \"50%\",\r\n//                                             backgroundColor: lineColors[index % lineColors.length],\r\n//                                         }}>\r\n//                                     </span>\r\n//                                     <strong>{providerName}</strong> <br />\r\n//                                     <strong>Stadt:</strong> {provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || \"N/A\"} <br />\r\n//                                     <strong>Addresse:</strong> {provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || \"N/A\"} <br />\r\n//                                     <strong>Anzahl von Betten:</strong> {provider.clinic_number_of_beds || \"N/A\"} <br />\r\n//                                     <strong>Kooperation:</strong> {provider.cooperation || \"N/A\"} <br />\r\n//                                     <strong>Chefarzt:</strong> {provider.clinic_chefarzt || \"N/A\"} <br />\r\n//                                     <strong>Beste Route:</strong> \r\n//                                     <span style={styles.bold}>\r\n//                                         {distances[`${providerType}-${providerName}`] || \"Calculating...\"} km\r\n//                                     </span>\r\n//                                 </li>\r\n//                             );\r\n//                         })}\r\n//                     </ul>\r\n//                 ) : (\r\n//                     <p style={styles.noData}>No data available.</p>\r\n//                 )}\r\n//             </div>\r\n//         </>\r\n//     );\r\n// };\r\n// // üé® CSS Styles\r\n// const styles = {\r\n//     informationsContainer: {\r\n//         width: \"35%\",\r\n//         fontWeight: \"600\",\r\n//         position: \"absolute\",\r\n//         border: \"2px solid #b3e5fc\",\r\n//         right: \"10px\",\r\n//         top: \"130px\",\r\n//         bottom : \"650px\",\r\n//         padding: \"15px\",\r\n//         backgroundColor: \"#e1ecf0\",\r\n//         boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\r\n//         borderRadius: \"8px\",\r\n//         marginBottom: \"15px\",\r\n//         fontSize: \"12px\",\r\n//     },\r\n//     analysticContainer: {\r\n//         width: \"35%\",\r\n//         fontWeight: \"600\",\r\n//         border: \"2px solid #b3e5fc\",\r\n//         position: \"absolute\",\r\n//         right: \"10px\",\r\n//         top: \"300px\",\r\n//         padding: \"15px\",\r\n//         backgroundColor: \"#e1ecf0\",\r\n//         boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\r\n//         borderRadius: \"8px\",\r\n//         fontSize: \"12px\",\r\n//     },\r\n//     title: {\r\n//         fontSize: \"14px\",\r\n//         marginBottom: \"8px\"\r\n//     },\r\n//     list: {\r\n//         listStyleType: \"none\",\r\n//         padding: 0,\r\n//         margin: 0\r\n//     },\r\n//     listItem: {\r\n//         marginBottom: \"8px\", // Reduce spacing between each item\r\n//         padding: \"8px\",\r\n//         borderBottom: \"1px solid #ddd\"\r\n//     },\r\n//     bold: {\r\n//         fontWeight: \"600\"\r\n//     },\r\n//     noData: {\r\n//         fontStyle: \"italic\",\r\n//         color: \"#999\"\r\n//     }\r\n// };\r\n\r\n\r\n// export default Analystics;\r\n\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useLocation } from \"./LocationContext\";\r\n\r\nconst lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\r\n    if (!startLat || !startLon || !endLat || !endLon) return \"N/A\";\r\n\r\n    const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        if (data.routes?.length > 0) {\r\n            return (data.routes[0].distance / 1000).toFixed(2);\r\n        } else {\r\n            return \"N/A\";\r\n        }\r\n    } catch {\r\n        return \"N/A\";\r\n    }\r\n};\r\n\r\nconst Analystics = () => {\r\n    const { allLocations, selectedLocation, setSelectedLocation } = useLocation();\r\n    const [distances, setDistances] = useState({});\r\n\r\n    const userLocation = useMemo(() =>\r\n        allLocations.find(loc => loc.clinic_name === \"Your Location\"), [allLocations]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const fetchDistances = async () => {\r\n            if (!userLocation?.latitude || !userLocation?.longitude) return;\r\n\r\n            const newDistances = {};\r\n\r\n            for (const provider of allLocations) {\r\n                if (provider.clinic_name === \"Your Location\") continue;\r\n\r\n                const providerType = provider.clinic_name\r\n                    ? \"clinic\"\r\n                    : provider.mvz_name\r\n                        ? \"mvz\"\r\n                        : provider.asv_name\r\n                            ? \"asv\"\r\n                            : provider.niedergelassene_name\r\n                                ? \"niedergelassene\"\r\n                                : null;\r\n\r\n                const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\r\n                const lat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude;\r\n                const lon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude;\r\n\r\n                if (!providerType || !providerName || !lat || !lon) continue;\r\n\r\n                const roadDistance = await getRoadDistance(userLocation.latitude, userLocation.longitude, lat, lon);\r\n                newDistances[`${providerType}-${providerName}`] = roadDistance;\r\n            }\r\n\r\n            setDistances(newDistances);\r\n        };\r\n\r\n        fetchDistances();\r\n    }, [userLocation, allLocations]);\r\n\r\n    return (\r\n        <>\r\n            {/* üìå Selected Provider Details */}\r\n            <div style={styles.informationsContainer}>\r\n                <h3 style={styles.title}>Informationen zur Kooperationen</h3>\r\n                <div style={styles.scrollableBox}>\r\n                    {selectedLocation ? (\r\n                        <>\r\n                            <p><strong>Name:</strong> {selectedLocation.clinic_name || selectedLocation.mvz_name || selectedLocation.neurologe_name || selectedLocation.onkologe_name}</p>\r\n                            <p><strong>Adresse:</strong> {selectedLocation.clinic_address || selectedLocation.mvz_address || selectedLocation.neurologe_address || selectedLocation.onkologe_address}</p>\r\n                            <p><strong>Stadt:</strong> {selectedLocation.clinic_city || selectedLocation.mvz_city || selectedLocation.neurologe_city || selectedLocation.onkologe_city}</p>\r\n                            <p><strong>Fallzahl:</strong> {selectedLocation.icd_fallzahl || \"N/A\"}</p>\r\n                        </>\r\n                    ) : (\r\n                        <p>Bitte w√§hlen Sie einen Anbieter aus.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* üìå Providers List */}\r\n            <div style={styles.analysticContainer}>\r\n                <h3 style={styles.title}>Leistungserbringer Informationen</h3>\r\n                <div style={styles.scrollableBox}>\r\n                    <ul style={styles.list}>\r\n                        {allLocations.map((provider, index) => {\r\n                            if (provider.clinic_name === \"Your Location\") return null;\r\n\r\n                            const providerType = provider.clinic_name\r\n                                ? \"clinic\"\r\n                                : provider.mvz_name\r\n                                    ? \"mvz\"\r\n                                    : provider.asv_name\r\n                                        ? \"asv\"\r\n                                        : provider.niedergelassene_name\r\n                                            ? \"niedergelassene\"\r\n                                            : null;\r\n\r\n                            const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\r\n\r\n                            return (\r\n                                <li\r\n                                    key={index}\r\n                                    onClick={() => setSelectedLocation(provider)}\r\n                                    style={{\r\n                                        ...styles.listItem,\r\n                                        cursor: \"pointer\",\r\n                                        backgroundColor:\r\n                                            selectedLocation === provider ? \"#d0ecff\" : \"transparent\"\r\n                                    }}\r\n                                >\r\n                                    <span style={{\r\n                                        backgroundColor: lineColors[index % lineColors.length],\r\n                                        display: \"inline-block\",\r\n                                        width: \"12px\",\r\n                                        height: \"12px\",\r\n                                        borderRadius: \"50%\",\r\n                                        marginRight: \"5px\"\r\n                                    }}></span>\r\n                                    <strong>{providerName}</strong><br />\r\n                                    <strong>Stadt:</strong> {provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || \"N/A\"} <br />\r\n                                    <strong>Addresse:</strong> {provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || \"N/A\"} <br />\r\n                                    <strong>Anzahl von Betten:</strong> {provider.clinic_number_of_beds || \"N/A\"} <br />\r\n                                    <strong>Kooperation:</strong> {provider.cooperation || \"N/A\"} <br />\r\n                                    <strong>Chefarzt:</strong> {provider.clinic_chefarzt || \"N/A\"} <br />\r\n                                    <strong>Beste Route:</strong> <span style={styles.bold}>{distances[`${providerType}-${providerName}`] || \"...\"}</span> km\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    informationsContainer: {\r\n        width: \"35%\",\r\n        position: \"absolute\",\r\n        top: \"130px\",\r\n        right: \"10px\",\r\n        backgroundColor: \"#e1ecf0\",\r\n        border: \"2px solid #b3e5fc\",\r\n        borderRadius: \"8px\",\r\n        padding: \"15px\",\r\n        fontSize: \"12px\",\r\n        maxHeight: \"140px\",\r\n        overflow: \"hidden\",\r\n        boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\r\n    },\r\n    analysticContainer: {\r\n        width: \"35%\",\r\n        position: \"absolute\",\r\n        top: \"280px\",\r\n        right: \"10px\",\r\n        backgroundColor: \"#e1ecf0\",\r\n        border: \"2px solid #b3e5fc\",\r\n        borderRadius: \"8px\",\r\n        padding: \"15px\",\r\n        fontSize: \"12px\",\r\n        maxHeight: \"calc(100vh - 300px)\",\r\n        boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\r\n    },\r\n    scrollableBox: {\r\n        overflowY: \"auto\",\r\n        maxHeight: \"100%\",\r\n    },\r\n    title: {\r\n        fontSize: \"14px\",\r\n        marginBottom: \"8px\",\r\n    },\r\n    list: {\r\n        listStyleType: \"none\",\r\n        padding: 0,\r\n        margin: 0,\r\n    },\r\n    listItem: {\r\n        marginBottom: \"8px\",\r\n        padding: \"8px\",\r\n        borderBottom: \"1px solid #ddd\",\r\n    },\r\n    bold: {\r\n        fontWeight: \"600\",\r\n    },\r\n    noData: {\r\n        fontStyle: \"italic\",\r\n        color: \"#999\",\r\n    },\r\n};\r\n\r\nexport default Analystics;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,UAAU,GA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}