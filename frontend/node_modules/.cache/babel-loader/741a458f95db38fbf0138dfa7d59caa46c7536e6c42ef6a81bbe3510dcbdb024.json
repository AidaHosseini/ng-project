{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\Analystics.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useMemo } from \"react\";\n// import { useLocation } from \"./LocationContext\";\n\n// // üéØ Predefined colors for providers\n// const lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\n\n// // üöÄ Function to get road distance from OSRM API\n// const getRoadDistance = async (startLat, startLon, endLat, endLon) => {\n//     if (!startLat || !startLon || !endLat || !endLon) {\n//         console.warn(\"üö® Missing coordinates for distance calculation!\", { startLat, startLon, endLat, endLon });\n//         return \"N/A\";\n//     }\n\n//     const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\n\n//     try {\n//         const response = await fetch(url);\n//         const data = await response.json();\n//         if (data.routes && data.routes.length > 0) {\n//             return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\n//         } else {\n//             console.warn(\"‚ö†Ô∏è No valid route found for coordinates:\", { startLat, startLon, endLat, endLon });\n//             return \"N/A\";\n//         }\n//     } catch (error) {\n//         console.error(\"‚ùå Error fetching road distance:\", error);\n//         return \"N/A\";\n//     }\n// };\n\n// const Analystics = () => {\n//     // const { allLocations } = useLocation();\n//     const [distances, setDistances] = useState({});\n//     const { allLocations, selectedLocation } = useLocation();\n\n//     // // ‚úÖ Extract Unique ICD Information (Only Once)\n//     // const uniqueICDInfo = useMemo(() => {\n//     //     return allLocations.length > 0\n//     //         ? { \n\n//     //             icd_name: allLocations[0].icd_name || \"N/A\",\n//     //             icd_fallzahl: allLocations[0].icd_fallzahl || \"N/A\"\n//     //         } \n//     //         : null;\n//     // }, [allLocations]);\n\n//     // ‚úÖ Find User's Location\n//     const userLocation = useMemo(() => \n//         allLocations.find(loc => loc.clinic_name === \"Your Location\"), \n//         [allLocations]\n//     );\n\n//     // ‚úÖ Fetch Road Distances for ALL PROVIDERS\n//     useEffect(() => {\n//         const fetchDistances = async () => {\n//             if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\n//                 console.warn(\"‚ö†Ô∏è No valid user location found!\");\n//                 return;\n//             }\n\n//             const newDistances = {};\n\n//             for (const provider of allLocations) {\n//                 if (provider.clinic_name === \"Your Location\") continue; // Skip user location\n\n//                 // üîπ Identify the provider type dynamically\n//                 const providerType = provider.clinic_name \n//                     ? \"clinic\"\n//                     : provider.mvz_name \n//                     ? \"mvz\"\n//                     : provider.asv_name \n//                     ? \"asv\"\n//                     : provider.niedergelassene_name \n//                     ? \"niedergelassene\"\n//                     : provider.neurologe_name\n//                     ? \"neurologe\"\n//                     : provider.onkologe_name\n//                     ? \"onkologe\"\n//                     : null;\n\n//                 const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name || provider.neurologe_name || provider.onkologe_name;\n\n//                 if (!providerType || !providerName) continue;\n\n//                 const providerLat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude || provider.neurologe_latitude || provider.onkologe_latitude;\n//                 const providerLon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude || provider.neurologe_longitude || provider.onkologe_longitude;\n\n//                 if (!providerLat || !providerLon) {\n//                     console.warn(`‚ö†Ô∏è Skipping provider with missing coordinates: ${providerName}`);\n//                     continue;\n//                 }\n\n//                 // üîπ Fetch the road distance\n//                 const roadDistance = await getRoadDistance(\n//                     userLocation.latitude, userLocation.longitude, \n//                     providerLat, providerLon\n//                 );\n\n//                 // üîπ Store distance dynamically\n//                 newDistances[`${providerType}-${providerName}`] = roadDistance;\n//             }\n\n//             setDistances(newDistances);\n//         };\n\n//         fetchDistances();\n//     }, [userLocation, allLocations]);\n//     const selectedProviderType = selectedLocation?.clinic_name\n//         ? \"clinic\"\n//         : selectedLocation?.mvz_name\n//         ? \"mvz\"\n//         : selectedLocation?.asv_name\n//         ? \"asv\"\n//         : selectedLocation?.niedergelassene_name\n//         ? \"niedergelassene\"\n//         : selectedLocation?.neurologe_name\n//         ? \"neurologe\"\n//         : selectedLocation?.onkologe_name\n//         ? \"onkologe\"\n//         : null;\n\n//     const selectedProviderName = selectedLocation?.clinic_name || \n//                                 selectedLocation?.mvz_name || \n//                                 selectedLocation?.asv_name || \n//                                 selectedLocation?.niedergelassene_name || \n//                                 selectedLocation?.neurologe_name || \n//                                 selectedLocation?.onkologe_name;\n\n//     return (\n//        <>\n//         <div style={styles.informationsContainer}>\n//             <h3 style={styles.title}>Informationen zur ausgew√§hlten Einrichtung</h3>\n\n//             {selectedLocation ? (\n//                 <>\n//                 {selectedLocation.clinic_name || selectedLocation.mvz_name || selectedLocation.neurologe_name || selectedLocation.onkologe_name ? (\n//                     <p><strong>Name:</strong> {selectedLocation.clinic_name || selectedLocation.mvz_name || selectedLocation.neurologe_name || selectedLocation.onkologe_name}</p>\n//                 ) : null}\n\n//                 {selectedLocation.clinic_address || selectedLocation.mvz_address || selectedLocation.neurologe_address || selectedLocation.onkologe_address ? (\n//                     <p><strong>Adresse:</strong> {selectedLocation.clinic_address || selectedLocation.mvz_address || selectedLocation.neurologe_address || selectedLocation.onkologe_address}</p>\n//                 ) : null}\n\n//                 {selectedLocation.clinic_city || selectedLocation.mvz_city || selectedLocation.neurologe_city || selectedLocation.onkologe_city ? (\n//                     <p><strong>Stadt:</strong> {selectedLocation.clinic_city || selectedLocation.mvz_city || selectedLocation.neurologe_city || selectedLocation.onkologe_city}</p>\n//                 ) : null}\n\n//                 {selectedLocation.clinic_cooperation || selectedLocation.mvz_cooperation || selectedLocation.asv_cooperation || selectedLocation.neurologe_cooperation || selectedLocation.onkologe_cooperation ? (\n//                     <p><strong>Kooperation:</strong> {selectedLocation.clinic_cooperation || selectedLocation.mvz_cooperation || selectedLocation.asv_cooperation || selectedLocation.neurologe_cooperation || selectedLocation.onkologe_cooperation}</p>\n//                 ) : null}\n\n//                 <p><strong>Beste Route:</strong> <span style={styles.bold}>\n//                     {distances[`${selectedProviderType}-${selectedProviderName}`] || \"Berechne...\"} km\n//                 </span></p>\n//             </>\n//             ) : (\n//                 <p style={{ fontStyle: \"italic\", color: \"#666\" }}>\n//                     Keine Einrichtung ausgew√§hlt.\n//                 </p>\n//             )}\n//         </div>\n\n//             {/* üìå Leistungserbringer (Providers) Information */}\n//             <div style={styles.analysticContainer}>\n//                 <h3 style={styles.title}>Leistungserbringer Informationen</h3>\n//                 {allLocations.length > 0 ? (\n//                     <ul style={styles.list}>\n//                         {allLocations.map((provider, index) => {\n//                             if (provider.clinic_name === \"Your Location\") return null; // Skip user location\n\n//                             // üîπ Dynamically determine provider type and name\n//                             const providerType = provider.clinic_name \n//                                 ? \"clinic\"\n//                                 : provider.mvz_name \n//                                 ? \"mvz\"\n//                                 : provider.asv_name \n//                                 ? \"asv\"\n//                                 : provider.niedergelassene_name \n//                                 ? \"niedergelassene\"\n//                                 : provider.neurologe_name\n//                                 ? \"neurologe\"\n//                                 : provider.onkologe_name\n//                                 ? \"onkologe\"\n//                                 : null;\n\n//                             // const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\n//                             // üîπ Determine provider name\n//                             const providerName =\n//                                 provider.clinic_name ||\n//                                 provider.mvz_name ||\n//                                 provider.asv_name ||\n//                                 provider.niedergelassene_name ||\n//                                 provider.neurologe_name ||\n//                                 provider.onkologe_name;\n\n//                             if (!providerType || !providerName) return null;\n\n//                             return (\n//                                 <li key={index} style={styles.listItem}>\n//                                     {/* üîµ Colored Circle Indicator */}\n//                                     <span \n//                                         style={{\n//                                             color: lineColors[index % lineColors.length], \n//                                             fontSize: \"14px\",  \n//                                             marginRight: \"5px\",\n//                                             display: \"inline-block\",\n//                                             width: \"12px\",\n//                                             height: \"12px\",\n//                                             borderRadius: \"50%\",\n//                                             backgroundColor: lineColors[index % lineColors.length],\n//                                         }}>\n//                                     </span>\n\n//                                     <strong>{providerName}</strong> <br />\n\n//                                     {(provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.onkologe_city || provider.neurologe_city ) && (\n//                                         <><strong>Stadt:</strong> {provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.onkologe_city || provider.neurologe_city} <br /></>\n//                                     )}\n\n//                                     {(provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || provider.onkologe_address|| provider.neurologe_address) && (\n//                                         <><strong>Adresse:</strong> {provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || provider.onkologe_address|| provider.neurologe_address} <br /></>\n//                                     )}\n\n//                                     {provider.clinic_number_of_beds && (\n//                                         <><strong>Anzahl von Betten:</strong> {provider.clinic_number_of_beds} <br /></>\n//                                     )}\n\n//                                     {(provider.clinic_cooperation || provider.mvz_cooperation || provider.asv_cooperation || provider.neurologe_cooperation || provider.onkologe_cooperation ) && (\n//                                         <><strong>Kooperation:</strong> {provider.clinic_cooperation || provider.mvz_cooperation || provider.asv_cooperation || provider.neurologe_cooperation || provider.onkologe_cooperation } <br /></>\n//                                     )}\n\n//                                     {provider.clinic_chefarzt && (\n//                                         <><strong>Chefarzt:</strong> {provider.clinic_chefarzt} <br /></>\n//                                     )}\n\n//                                     <strong>Beste Route:</strong> \n//                                     <span style={styles.bold}>\n//                                         {distances[`${providerType}-${providerName}`] || \"Berechne...\"} km\n//                                     </span>\n//                                 </li>\n//                             );\n//                         })}\n//                     </ul>\n//                 ) : (\n//                     <p style={styles.noData}>Keine Daten verf√ºgbar.</p>\n//                 )}\n//             </div>\n//         </>\n//     );\n// };\n// // üé® CSS Styles\n// const styles = {\n//     informationsContainer: {\n//         width: \"35%\",\n//         fontWeight: \"600\",\n//         position: \"absolute\",\n//         border: \"2px solid #b3e5fc\",\n//         right: \"10px\",\n//         top: \"130px\",\n//         bottom : \"510px\",\n//         padding: \"15px\",\n//         backgroundColor: \"#e1ecf0\",\n//         boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\n//         borderRadius: \"8px\",\n//         marginBottom: \"15px\",\n//         fontSize: \"12px\",\n//     },\n//     analysticContainer: {\n//         width: \"35%\",\n//         fontWeight: \"600\",\n//         border: \"2px solid #b3e5fc\",\n//         position: \"absolute\",\n//         right: \"10px\",\n//         top: \"350px\",\n//         height: \"635px\",\n//         padding: \"15px\",\n//         backgroundColor: \"#e1ecf0\",\n//         boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\n//         borderRadius: \"8px\",\n//         fontSize: \"12px\",\n//     },\n//     title: {\n//         fontSize: \"18px\",\n//         marginBottom: \"8px\",\n//         fontWeight: \"600\" \n//     },\n//     list: {\n//         listStyleType: \"none\",\n//         padding: 0,\n//         margin: 0\n//     },\n//     listItem: {\n//         marginBottom: \"8px\", // Reduce spacing between each item\n//         padding: \"8px\",\n//         borderBottom: \"1px solid #ddd\"\n//     },\n//     bold: {\n//         fontWeight: \"600\"\n//     },\n//     noData: {\n//         fontStyle: \"italic\",\n//         color: \"#999\"\n//     }\n// };\n\n// export default Analystics;\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useLocation } from \"./LocationContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\n\n// üõ†Ô∏è Generate consistent keys for storing/retrieving distances\nconst getProviderKey = (type, name, address) => {\n  const safeName = (name || \"\").trim();\n  const safeAddress = (address || \"\").trim();\n  return `${type}-${safeName}-${safeAddress}`;\n};\n\n// üöó Fetch road distance using OSRM API\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\n  if (!startLat || !startLon || !endLat || !endLon) return \"N/A\";\n  const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\n  try {\n    var _data$routes;\n    const response = await fetch(url);\n    const data = await response.json();\n    if (((_data$routes = data.routes) === null || _data$routes === void 0 ? void 0 : _data$routes.length) > 0) {\n      return (data.routes[0].distance / 1000).toFixed(2); // meters ‚Üí km\n    } else {\n      console.warn(\"No route found\", {\n        startLat,\n        startLon,\n        endLat,\n        endLon\n      });\n      return \"N/A\";\n    }\n  } catch (err) {\n    console.error(\"Distance fetch error:\", err);\n    return \"N/A\";\n  }\n};\nconst Analystics = () => {\n  _s();\n  const [distances, setDistances] = useState({});\n  const {\n    allLocations,\n    selectedLocation\n  } = useLocation();\n\n  // ‚úÖ Detect origin location (user or city center)\n  const originLocation = useMemo(() => {\n    return allLocations.find(loc => loc.clinic_name === \"Your Location\" || loc.clinic_name === \"Zentrum (Umkreis)\");\n  }, [allLocations]);\n\n  // üöÄ Calculate distances once locations are ready\n  useEffect(() => {\n    const fetchDistances = async () => {\n      if (!(originLocation !== null && originLocation !== void 0 && originLocation.latitude) || !(originLocation !== null && originLocation !== void 0 && originLocation.longitude)) {\n        console.warn(\"üö´ Origin location missing!\");\n        return;\n      }\n      const newDistances = {};\n      for (const provider of allLocations) {\n        if (provider.clinic_name === \"Your Location\" || provider.clinic_name === \"Zentrum (Umkreis)\") continue;\n        const providerType = provider.clinic_name ? \"clinic\" : provider.mvz_name ? \"mvz\" : provider.asv_name ? \"asv\" : provider.niedergelassene_name ? \"niedergelassene\" : provider.neurologe_name ? \"neurologe\" : provider.onkologe_name ? \"onkologe\" : null;\n        const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name || provider.neurologe_name || provider.onkologe_name;\n        const providerAddress = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || provider.neurologe_address || provider.onkologe_address;\n        const lat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude || provider.neurologe_latitude || provider.onkologe_latitude;\n        const lon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude || provider.neurologe_longitude || provider.onkologe_longitude;\n        if (!providerType || !providerName || !lat || !lon) continue;\n        const key = getProviderKey(providerType, providerName, providerAddress);\n        const distance = await getRoadDistance(originLocation.latitude, originLocation.longitude, lat, lon);\n        newDistances[key] = distance;\n      }\n      setDistances(newDistances);\n    };\n    fetchDistances();\n  }, [originLocation, allLocations]);\n\n  // üîç Determine selected item key\n  const selectedProviderType = selectedLocation !== null && selectedLocation !== void 0 && selectedLocation.clinic_name ? \"clinic\" : selectedLocation !== null && selectedLocation !== void 0 && selectedLocation.mvz_name ? \"mvz\" : selectedLocation !== null && selectedLocation !== void 0 && selectedLocation.asv_name ? \"asv\" : selectedLocation !== null && selectedLocation !== void 0 && selectedLocation.niedergelassene_name ? \"niedergelassene\" : selectedLocation !== null && selectedLocation !== void 0 && selectedLocation.neurologe_name ? \"neurologe\" : selectedLocation !== null && selectedLocation !== void 0 && selectedLocation.onkologe_name ? \"onkologe\" : null;\n  const selectedProviderName = (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.clinic_name) || (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.mvz_name) || (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.asv_name) || (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.niedergelassene_name) || (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.neurologe_name) || (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.onkologe_name);\n  const selectedAddress = (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.clinic_address) || (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.mvz_address) || (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.asv_address) || (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.niedergelassene_address) || (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.neurologe_address) || (selectedLocation === null || selectedLocation === void 0 ? void 0 : selectedLocation.onkologe_address);\n  const selectedDistanceKey = getProviderKey(selectedProviderType, selectedProviderName, selectedAddress);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.informationsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Informationen zur ausgew\\xE4hlten Einrichtung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }, this), selectedLocation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [selectedProviderName && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 32\n          }, this), \" \", selectedProviderName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 29\n        }, this), selectedAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Adresse:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 32\n          }, this), \" \", selectedAddress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 29\n        }, this), (selectedLocation.clinic_city || selectedLocation.mvz_city || selectedLocation.asv_city || selectedLocation.niedergelassene_city || selectedLocation.neurologe_city || selectedLocation.onkologe_city) && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Stadt:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 32\n          }, this), \" \", selectedLocation.clinic_city || selectedLocation.mvz_city || selectedLocation.asv_city || selectedLocation.niedergelassene_city || selectedLocation.neurologe_city || selectedLocation.onkologe_city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Beste Route:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 28\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.bold,\n            children: [distances[selectedDistanceKey] || \"Berechne...\", \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontStyle: \"italic\",\n          color: \"#666\"\n        },\n        children: \"Keine Einrichtung ausgew\\xE4hlt.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.analysticContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Leistungserbringer Informationen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 17\n      }, this), allLocations.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.list,\n        children: allLocations.map((provider, index) => {\n          if (provider.clinic_name === \"Your Location\" || provider.clinic_name === \"Zentrum (Umkreis)\") return null;\n          const type = provider.clinic_name ? \"clinic\" : provider.mvz_name ? \"mvz\" : provider.asv_name ? \"asv\" : provider.niedergelassene_name ? \"niedergelassene\" : provider.neurologe_name ? \"neurologe\" : provider.onkologe_name ? \"onkologe\" : null;\n          const name = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name || provider.neurologe_name || provider.onkologe_name;\n          const address = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || provider.neurologe_address || provider.onkologe_address;\n          const key = getProviderKey(type, name, address);\n          if (!type || !name) return null;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: styles.listItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: lineColors[index % lineColors.length],\n                display: \"inline-block\",\n                width: \"12px\",\n                height: \"12px\",\n                borderRadius: \"50%\",\n                marginRight: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 60\n            }, this), address && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Adresse:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 51\n              }, this), \" \", address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 86\n              }, this)]\n            }, void 0, true), (provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.neurologe_city || provider.onkologe_city) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Stadt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 43\n              }, this), \" \", provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.neurologe_city || provider.onkologe_city, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 217\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Beste Route:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 37\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.bold,\n              children: [distances[key] || \"Berechne...\", \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.noData,\n        children: \"Keine Daten verf\\xFCgbar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Analystics, \"a2flSQrDgmet83XUPSt2byeyDmw=\", false, function () {\n  return [useLocation];\n});\n_c = Analystics;\nconst styles = {\n  informationsContainer: {\n    width: \"35%\",\n    fontWeight: \"600\",\n    position: \"absolute\",\n    border: \"2px solid #b3e5fc\",\n    right: \"10px\",\n    top: \"130px\",\n    bottom: \"510px\",\n    padding: \"15px\",\n    backgroundColor: \"#e1ecf0\",\n    borderRadius: \"8px\",\n    fontSize: \"12px\"\n  },\n  analysticContainer: {\n    width: \"35%\",\n    fontWeight: \"600\",\n    position: \"absolute\",\n    border: \"2px solid #b3e5fc\",\n    right: \"10px\",\n    top: \"350px\",\n    height: \"635px\",\n    padding: \"15px\",\n    backgroundColor: \"#e1ecf0\",\n    borderRadius: \"8px\",\n    fontSize: \"12px\"\n  },\n  title: {\n    fontSize: \"18px\",\n    marginBottom: \"8px\",\n    fontWeight: \"600\"\n  },\n  list: {\n    listStyleType: \"none\",\n    padding: 0,\n    margin: 0\n  },\n  listItem: {\n    marginBottom: \"8px\",\n    padding: \"8px\",\n    borderBottom: \"1px solid #ddd\"\n  },\n  bold: {\n    fontWeight: \"600\"\n  },\n  noData: {\n    fontStyle: \"italic\",\n    color: \"#999\"\n  }\n};\nexport default Analystics;\nvar _c;\n$RefreshReg$(_c, \"Analystics\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","lineColors","getProviderKey","type","name","address","safeName","trim","safeAddress","getRoadDistance","startLat","startLon","endLat","endLon","url","_data$routes","response","fetch","data","json","routes","length","distance","toFixed","console","warn","err","error","Analystics","_s","distances","setDistances","allLocations","selectedLocation","originLocation","find","loc","clinic_name","fetchDistances","latitude","longitude","newDistances","provider","providerType","mvz_name","asv_name","niedergelassene_name","neurologe_name","onkologe_name","providerName","providerAddress","clinic_address","mvz_address","asv_address","niedergelassene_address","neurologe_address","onkologe_address","lat","clinic_latitude","mvz_latitude","asv_latitude","niedergelassene_latitude","neurologe_latitude","onkologe_latitude","lon","clinic_longitude","mvz_longitude","asv_longitude","niedergelassene_longitude","neurologe_longitude","onkologe_longitude","key","selectedProviderType","selectedProviderName","selectedAddress","selectedDistanceKey","children","style","styles","informationsContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","clinic_city","mvz_city","asv_city","niedergelassene_city","neurologe_city","onkologe_city","bold","fontStyle","color","analysticContainer","list","map","index","listItem","backgroundColor","display","width","height","borderRadius","marginRight","noData","_c","fontWeight","position","border","right","top","bottom","padding","fontSize","marginBottom","listStyleType","margin","borderBottom","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/Analystics.js"],"sourcesContent":["// import React, { useState, useEffect, useMemo } from \"react\";\r\n// import { useLocation } from \"./LocationContext\";\r\n\r\n// // üéØ Predefined colors for providers\r\n// const lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\n// // üöÄ Function to get road distance from OSRM API\r\n// const getRoadDistance = async (startLat, startLon, endLat, endLon) => {\r\n//     if (!startLat || !startLon || !endLat || !endLon) {\r\n//         console.warn(\"üö® Missing coordinates for distance calculation!\", { startLat, startLon, endLat, endLon });\r\n//         return \"N/A\";\r\n//     }\r\n\r\n//     const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\r\n\r\n//     try {\r\n//         const response = await fetch(url);\r\n//         const data = await response.json();\r\n//         if (data.routes && data.routes.length > 0) {\r\n//             return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\r\n//         } else {\r\n//             console.warn(\"‚ö†Ô∏è No valid route found for coordinates:\", { startLat, startLon, endLat, endLon });\r\n//             return \"N/A\";\r\n//         }\r\n//     } catch (error) {\r\n//         console.error(\"‚ùå Error fetching road distance:\", error);\r\n//         return \"N/A\";\r\n//     }\r\n// };\r\n\r\n// const Analystics = () => {\r\n//     // const { allLocations } = useLocation();\r\n//     const [distances, setDistances] = useState({});\r\n//     const { allLocations, selectedLocation } = useLocation();\r\n\r\n//     // // ‚úÖ Extract Unique ICD Information (Only Once)\r\n//     // const uniqueICDInfo = useMemo(() => {\r\n//     //     return allLocations.length > 0\r\n//     //         ? { \r\n\r\n//     //             icd_name: allLocations[0].icd_name || \"N/A\",\r\n//     //             icd_fallzahl: allLocations[0].icd_fallzahl || \"N/A\"\r\n//     //         } \r\n//     //         : null;\r\n//     // }, [allLocations]);\r\n\r\n//     // ‚úÖ Find User's Location\r\n//     const userLocation = useMemo(() => \r\n//         allLocations.find(loc => loc.clinic_name === \"Your Location\"), \r\n//         [allLocations]\r\n//     );\r\n\r\n//     // ‚úÖ Fetch Road Distances for ALL PROVIDERS\r\n//     useEffect(() => {\r\n//         const fetchDistances = async () => {\r\n//             if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\r\n//                 console.warn(\"‚ö†Ô∏è No valid user location found!\");\r\n//                 return;\r\n//             }\r\n\r\n//             const newDistances = {};\r\n\r\n//             for (const provider of allLocations) {\r\n//                 if (provider.clinic_name === \"Your Location\") continue; // Skip user location\r\n\r\n//                 // üîπ Identify the provider type dynamically\r\n//                 const providerType = provider.clinic_name \r\n//                     ? \"clinic\"\r\n//                     : provider.mvz_name \r\n//                     ? \"mvz\"\r\n//                     : provider.asv_name \r\n//                     ? \"asv\"\r\n//                     : provider.niedergelassene_name \r\n//                     ? \"niedergelassene\"\r\n//                     : provider.neurologe_name\r\n//                     ? \"neurologe\"\r\n//                     : provider.onkologe_name\r\n//                     ? \"onkologe\"\r\n//                     : null;\r\n\r\n//                 const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name || provider.neurologe_name || provider.onkologe_name;\r\n\r\n//                 if (!providerType || !providerName) continue;\r\n\r\n//                 const providerLat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude || provider.neurologe_latitude || provider.onkologe_latitude;\r\n//                 const providerLon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude || provider.neurologe_longitude || provider.onkologe_longitude;\r\n\r\n//                 if (!providerLat || !providerLon) {\r\n//                     console.warn(`‚ö†Ô∏è Skipping provider with missing coordinates: ${providerName}`);\r\n//                     continue;\r\n//                 }\r\n\r\n//                 // üîπ Fetch the road distance\r\n//                 const roadDistance = await getRoadDistance(\r\n//                     userLocation.latitude, userLocation.longitude, \r\n//                     providerLat, providerLon\r\n//                 );\r\n\r\n//                 // üîπ Store distance dynamically\r\n//                 newDistances[`${providerType}-${providerName}`] = roadDistance;\r\n//             }\r\n\r\n//             setDistances(newDistances);\r\n//         };\r\n\r\n//         fetchDistances();\r\n//     }, [userLocation, allLocations]);\r\n//     const selectedProviderType = selectedLocation?.clinic_name\r\n//         ? \"clinic\"\r\n//         : selectedLocation?.mvz_name\r\n//         ? \"mvz\"\r\n//         : selectedLocation?.asv_name\r\n//         ? \"asv\"\r\n//         : selectedLocation?.niedergelassene_name\r\n//         ? \"niedergelassene\"\r\n//         : selectedLocation?.neurologe_name\r\n//         ? \"neurologe\"\r\n//         : selectedLocation?.onkologe_name\r\n//         ? \"onkologe\"\r\n//         : null;\r\n\r\n//     const selectedProviderName = selectedLocation?.clinic_name || \r\n//                                 selectedLocation?.mvz_name || \r\n//                                 selectedLocation?.asv_name || \r\n//                                 selectedLocation?.niedergelassene_name || \r\n//                                 selectedLocation?.neurologe_name || \r\n//                                 selectedLocation?.onkologe_name;\r\n\r\n//     return (\r\n//        <>\r\n//         <div style={styles.informationsContainer}>\r\n//             <h3 style={styles.title}>Informationen zur ausgew√§hlten Einrichtung</h3>\r\n                \r\n//             {selectedLocation ? (\r\n//                 <>\r\n//                 {selectedLocation.clinic_name || selectedLocation.mvz_name || selectedLocation.neurologe_name || selectedLocation.onkologe_name ? (\r\n//                     <p><strong>Name:</strong> {selectedLocation.clinic_name || selectedLocation.mvz_name || selectedLocation.neurologe_name || selectedLocation.onkologe_name}</p>\r\n//                 ) : null}\r\n            \r\n//                 {selectedLocation.clinic_address || selectedLocation.mvz_address || selectedLocation.neurologe_address || selectedLocation.onkologe_address ? (\r\n//                     <p><strong>Adresse:</strong> {selectedLocation.clinic_address || selectedLocation.mvz_address || selectedLocation.neurologe_address || selectedLocation.onkologe_address}</p>\r\n//                 ) : null}\r\n            \r\n//                 {selectedLocation.clinic_city || selectedLocation.mvz_city || selectedLocation.neurologe_city || selectedLocation.onkologe_city ? (\r\n//                     <p><strong>Stadt:</strong> {selectedLocation.clinic_city || selectedLocation.mvz_city || selectedLocation.neurologe_city || selectedLocation.onkologe_city}</p>\r\n//                 ) : null}\r\n            \r\n//                 {selectedLocation.clinic_cooperation || selectedLocation.mvz_cooperation || selectedLocation.asv_cooperation || selectedLocation.neurologe_cooperation || selectedLocation.onkologe_cooperation ? (\r\n//                     <p><strong>Kooperation:</strong> {selectedLocation.clinic_cooperation || selectedLocation.mvz_cooperation || selectedLocation.asv_cooperation || selectedLocation.neurologe_cooperation || selectedLocation.onkologe_cooperation}</p>\r\n//                 ) : null}\r\n            \r\n//                 <p><strong>Beste Route:</strong> <span style={styles.bold}>\r\n//                     {distances[`${selectedProviderType}-${selectedProviderName}`] || \"Berechne...\"} km\r\n//                 </span></p>\r\n//             </>\r\n//             ) : (\r\n//                 <p style={{ fontStyle: \"italic\", color: \"#666\" }}>\r\n//                     Keine Einrichtung ausgew√§hlt.\r\n//                 </p>\r\n//             )}\r\n//         </div>\r\n\r\n//             {/* üìå Leistungserbringer (Providers) Information */}\r\n//             <div style={styles.analysticContainer}>\r\n//                 <h3 style={styles.title}>Leistungserbringer Informationen</h3>\r\n//                 {allLocations.length > 0 ? (\r\n//                     <ul style={styles.list}>\r\n//                         {allLocations.map((provider, index) => {\r\n//                             if (provider.clinic_name === \"Your Location\") return null; // Skip user location\r\n\r\n//                             // üîπ Dynamically determine provider type and name\r\n//                             const providerType = provider.clinic_name \r\n//                                 ? \"clinic\"\r\n//                                 : provider.mvz_name \r\n//                                 ? \"mvz\"\r\n//                                 : provider.asv_name \r\n//                                 ? \"asv\"\r\n//                                 : provider.niedergelassene_name \r\n//                                 ? \"niedergelassene\"\r\n//                                 : provider.neurologe_name\r\n//                                 ? \"neurologe\"\r\n//                                 : provider.onkologe_name\r\n//                                 ? \"onkologe\"\r\n//                                 : null;\r\n\r\n//                             // const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\r\n//                             // üîπ Determine provider name\r\n//                             const providerName =\r\n//                                 provider.clinic_name ||\r\n//                                 provider.mvz_name ||\r\n//                                 provider.asv_name ||\r\n//                                 provider.niedergelassene_name ||\r\n//                                 provider.neurologe_name ||\r\n//                                 provider.onkologe_name;\r\n\r\n//                             if (!providerType || !providerName) return null;\r\n\r\n//                             return (\r\n//                                 <li key={index} style={styles.listItem}>\r\n//                                     {/* üîµ Colored Circle Indicator */}\r\n//                                     <span \r\n//                                         style={{\r\n//                                             color: lineColors[index % lineColors.length], \r\n//                                             fontSize: \"14px\",  \r\n//                                             marginRight: \"5px\",\r\n//                                             display: \"inline-block\",\r\n//                                             width: \"12px\",\r\n//                                             height: \"12px\",\r\n//                                             borderRadius: \"50%\",\r\n//                                             backgroundColor: lineColors[index % lineColors.length],\r\n//                                         }}>\r\n//                                     </span>\r\n\r\n//                                     <strong>{providerName}</strong> <br />\r\n\r\n//                                     {(provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.onkologe_city || provider.neurologe_city ) && (\r\n//                                         <><strong>Stadt:</strong> {provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.onkologe_city || provider.neurologe_city} <br /></>\r\n//                                     )}\r\n\r\n//                                     {(provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || provider.onkologe_address|| provider.neurologe_address) && (\r\n//                                         <><strong>Adresse:</strong> {provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || provider.onkologe_address|| provider.neurologe_address} <br /></>\r\n//                                     )}\r\n\r\n//                                     {provider.clinic_number_of_beds && (\r\n//                                         <><strong>Anzahl von Betten:</strong> {provider.clinic_number_of_beds} <br /></>\r\n//                                     )}\r\n\r\n//                                     {(provider.clinic_cooperation || provider.mvz_cooperation || provider.asv_cooperation || provider.neurologe_cooperation || provider.onkologe_cooperation ) && (\r\n//                                         <><strong>Kooperation:</strong> {provider.clinic_cooperation || provider.mvz_cooperation || provider.asv_cooperation || provider.neurologe_cooperation || provider.onkologe_cooperation } <br /></>\r\n//                                     )}\r\n\r\n//                                     {provider.clinic_chefarzt && (\r\n//                                         <><strong>Chefarzt:</strong> {provider.clinic_chefarzt} <br /></>\r\n//                                     )}\r\n\r\n//                                     <strong>Beste Route:</strong> \r\n//                                     <span style={styles.bold}>\r\n//                                         {distances[`${providerType}-${providerName}`] || \"Berechne...\"} km\r\n//                                     </span>\r\n//                                 </li>\r\n//                             );\r\n//                         })}\r\n//                     </ul>\r\n//                 ) : (\r\n//                     <p style={styles.noData}>Keine Daten verf√ºgbar.</p>\r\n//                 )}\r\n//             </div>\r\n//         </>\r\n//     );\r\n// };\r\n// // üé® CSS Styles\r\n// const styles = {\r\n//     informationsContainer: {\r\n//         width: \"35%\",\r\n//         fontWeight: \"600\",\r\n//         position: \"absolute\",\r\n//         border: \"2px solid #b3e5fc\",\r\n//         right: \"10px\",\r\n//         top: \"130px\",\r\n//         bottom : \"510px\",\r\n//         padding: \"15px\",\r\n//         backgroundColor: \"#e1ecf0\",\r\n//         boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\r\n//         borderRadius: \"8px\",\r\n//         marginBottom: \"15px\",\r\n//         fontSize: \"12px\",\r\n//     },\r\n//     analysticContainer: {\r\n//         width: \"35%\",\r\n//         fontWeight: \"600\",\r\n//         border: \"2px solid #b3e5fc\",\r\n//         position: \"absolute\",\r\n//         right: \"10px\",\r\n//         top: \"350px\",\r\n//         height: \"635px\",\r\n//         padding: \"15px\",\r\n//         backgroundColor: \"#e1ecf0\",\r\n//         boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\r\n//         borderRadius: \"8px\",\r\n//         fontSize: \"12px\",\r\n//     },\r\n//     title: {\r\n//         fontSize: \"18px\",\r\n//         marginBottom: \"8px\",\r\n//         fontWeight: \"600\" \r\n//     },\r\n//     list: {\r\n//         listStyleType: \"none\",\r\n//         padding: 0,\r\n//         margin: 0\r\n//     },\r\n//     listItem: {\r\n//         marginBottom: \"8px\", // Reduce spacing between each item\r\n//         padding: \"8px\",\r\n//         borderBottom: \"1px solid #ddd\"\r\n//     },\r\n//     bold: {\r\n//         fontWeight: \"600\"\r\n//     },\r\n//     noData: {\r\n//         fontStyle: \"italic\",\r\n//         color: \"#999\"\r\n//     }\r\n// };\r\n\r\n\r\n// export default Analystics;\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useLocation } from \"./LocationContext\";\r\n\r\nconst lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\n// üõ†Ô∏è Generate consistent keys for storing/retrieving distances\r\nconst getProviderKey = (type, name, address) => {\r\n    const safeName = (name || \"\").trim();\r\n    const safeAddress = (address || \"\").trim();\r\n    return `${type}-${safeName}-${safeAddress}`;\r\n};\r\n\r\n\r\n\r\n// üöó Fetch road distance using OSRM API\r\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\r\n    if (!startLat || !startLon || !endLat || !endLon) return \"N/A\";\r\n\r\n    const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        if (data.routes?.length > 0) {\r\n            return (data.routes[0].distance / 1000).toFixed(2); // meters ‚Üí km\r\n        } else {\r\n            console.warn(\"No route found\", { startLat, startLon, endLat, endLon });\r\n            return \"N/A\";\r\n        }\r\n    } catch (err) {\r\n        console.error(\"Distance fetch error:\", err);\r\n        return \"N/A\";\r\n    }\r\n};\r\n\r\nconst Analystics = () => {\r\n    const [distances, setDistances] = useState({});\r\n    const { allLocations, selectedLocation } = useLocation();\r\n\r\n    // ‚úÖ Detect origin location (user or city center)\r\n    const originLocation = useMemo(() => {\r\n        return allLocations.find(loc =>\r\n            loc.clinic_name === \"Your Location\" || loc.clinic_name === \"Zentrum (Umkreis)\"\r\n        );\r\n    }, [allLocations]);\r\n    \r\n\r\n    // üöÄ Calculate distances once locations are ready\r\n    useEffect(() => {\r\n        const fetchDistances = async () => {\r\n            if (!originLocation?.latitude || !originLocation?.longitude) {\r\n                console.warn(\"üö´ Origin location missing!\");\r\n                return;\r\n            }\r\n\r\n            const newDistances = {};\r\n\r\n            for (const provider of allLocations) {\r\n                if (\r\n                    provider.clinic_name === \"Your Location\" ||\r\n                    provider.clinic_name === \"Zentrum (Umkreis)\"\r\n                ) continue;\r\n\r\n                const providerType = provider.clinic_name\r\n                    ? \"clinic\"\r\n                    : provider.mvz_name\r\n                    ? \"mvz\"\r\n                    : provider.asv_name\r\n                    ? \"asv\"\r\n                    : provider.niedergelassene_name\r\n                    ? \"niedergelassene\"\r\n                    : provider.neurologe_name\r\n                    ? \"neurologe\"\r\n                    : provider.onkologe_name\r\n                    ? \"onkologe\"\r\n                    : null;\r\n\r\n                const providerName =\r\n                    provider.clinic_name ||\r\n                    provider.mvz_name ||\r\n                    provider.asv_name ||\r\n                    provider.niedergelassene_name ||\r\n                    provider.neurologe_name ||\r\n                    provider.onkologe_name;\r\n\r\n                const providerAddress =\r\n                    provider.clinic_address ||\r\n                    provider.mvz_address ||\r\n                    provider.asv_address ||\r\n                    provider.niedergelassene_address ||\r\n                    provider.neurologe_address ||\r\n                    provider.onkologe_address;\r\n\r\n                const lat =\r\n                    provider.clinic_latitude ||\r\n                    provider.mvz_latitude ||\r\n                    provider.asv_latitude ||\r\n                    provider.niedergelassene_latitude ||\r\n                    provider.neurologe_latitude ||\r\n                    provider.onkologe_latitude;\r\n\r\n                const lon =\r\n                    provider.clinic_longitude ||\r\n                    provider.mvz_longitude ||\r\n                    provider.asv_longitude ||\r\n                    provider.niedergelassene_longitude ||\r\n                    provider.neurologe_longitude ||\r\n                    provider.onkologe_longitude;\r\n\r\n                if (!providerType || !providerName || !lat || !lon) continue;\r\n\r\n                const key = getProviderKey(providerType, providerName, providerAddress);\r\n                const distance = await getRoadDistance(\r\n                    originLocation.latitude,\r\n                    originLocation.longitude,\r\n                    lat,\r\n                    lon\r\n                );\r\n                newDistances[key] = distance;\r\n            }\r\n\r\n            setDistances(newDistances);\r\n        };\r\n\r\n        fetchDistances();\r\n    }, [originLocation, allLocations]);\r\n\r\n    // üîç Determine selected item key\r\n    const selectedProviderType = selectedLocation?.clinic_name\r\n        ? \"clinic\"\r\n        : selectedLocation?.mvz_name\r\n        ? \"mvz\"\r\n        : selectedLocation?.asv_name\r\n        ? \"asv\"\r\n        : selectedLocation?.niedergelassene_name\r\n        ? \"niedergelassene\"\r\n        : selectedLocation?.neurologe_name\r\n        ? \"neurologe\"\r\n        : selectedLocation?.onkologe_name\r\n        ? \"onkologe\"\r\n        : null;\r\n\r\n    const selectedProviderName =\r\n        selectedLocation?.clinic_name ||\r\n        selectedLocation?.mvz_name ||\r\n        selectedLocation?.asv_name ||\r\n        selectedLocation?.niedergelassene_name ||\r\n        selectedLocation?.neurologe_name ||\r\n        selectedLocation?.onkologe_name;\r\n\r\n    const selectedAddress =\r\n        selectedLocation?.clinic_address ||\r\n        selectedLocation?.mvz_address ||\r\n        selectedLocation?.asv_address ||\r\n        selectedLocation?.niedergelassene_address ||\r\n        selectedLocation?.neurologe_address ||\r\n        selectedLocation?.onkologe_address;\r\n\r\n    const selectedDistanceKey = getProviderKey(\r\n        selectedProviderType,\r\n        selectedProviderName,\r\n        selectedAddress\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div style={styles.informationsContainer}>\r\n                <h3 style={styles.title}>Informationen zur ausgew√§hlten Einrichtung</h3>\r\n\r\n                {selectedLocation ? (\r\n                    <>\r\n                        {selectedProviderName && (\r\n                            <p><strong>Name:</strong> {selectedProviderName}</p>\r\n                        )}\r\n                        {selectedAddress && (\r\n                            <p><strong>Adresse:</strong> {selectedAddress}</p>\r\n                        )}\r\n                        {(selectedLocation.clinic_city ||\r\n                            selectedLocation.mvz_city ||\r\n                            selectedLocation.asv_city ||\r\n                            selectedLocation.niedergelassene_city ||\r\n                            selectedLocation.neurologe_city ||\r\n                            selectedLocation.onkologe_city) && (\r\n                            <p><strong>Stadt:</strong> {selectedLocation.clinic_city ||\r\n                                selectedLocation.mvz_city ||\r\n                                selectedLocation.asv_city ||\r\n                                selectedLocation.niedergelassene_city ||\r\n                                selectedLocation.neurologe_city ||\r\n                                selectedLocation.onkologe_city}</p>\r\n                        )}\r\n                        <p><strong>Beste Route:</strong>{\" \"}\r\n                            <span style={styles.bold}>\r\n                                {distances[selectedDistanceKey] || \"Berechne...\"} km\r\n                            </span></p>\r\n                    </>\r\n                ) : (\r\n                    <p style={{ fontStyle: \"italic\", color: \"#666\" }}>\r\n                        Keine Einrichtung ausgew√§hlt.\r\n                    </p>\r\n                )}\r\n            </div>\r\n\r\n            <div style={styles.analysticContainer}>\r\n                <h3 style={styles.title}>Leistungserbringer Informationen</h3>\r\n                {allLocations.length > 0 ? (\r\n                    <ul style={styles.list}>\r\n                        {allLocations.map((provider, index) => {\r\n                            if (\r\n                                provider.clinic_name === \"Your Location\" ||\r\n                                provider.clinic_name === \"Zentrum (Umkreis)\"\r\n                            ) return null;\r\n\r\n                            const type = provider.clinic_name\r\n                                ? \"clinic\"\r\n                                : provider.mvz_name\r\n                                ? \"mvz\"\r\n                                : provider.asv_name\r\n                                ? \"asv\"\r\n                                : provider.niedergelassene_name\r\n                                ? \"niedergelassene\"\r\n                                : provider.neurologe_name\r\n                                ? \"neurologe\"\r\n                                : provider.onkologe_name\r\n                                ? \"onkologe\"\r\n                                : null;\r\n\r\n                            const name =\r\n                                provider.clinic_name ||\r\n                                provider.mvz_name ||\r\n                                provider.asv_name ||\r\n                                provider.niedergelassene_name ||\r\n                                provider.neurologe_name ||\r\n                                provider.onkologe_name;\r\n\r\n                            const address =\r\n                                provider.clinic_address ||\r\n                                provider.mvz_address ||\r\n                                provider.asv_address ||\r\n                                provider.niedergelassene_address ||\r\n                                provider.neurologe_address ||\r\n                                provider.onkologe_address;\r\n\r\n                            const key = getProviderKey(type, name, address);\r\n\r\n                            if (!type || !name) return null;\r\n\r\n                            return (\r\n                                <li key={index} style={styles.listItem}>\r\n                                    <span\r\n                                        style={{\r\n                                            backgroundColor: lineColors[index % lineColors.length],\r\n                                            display: \"inline-block\",\r\n                                            width: \"12px\",\r\n                                            height: \"12px\",\r\n                                            borderRadius: \"50%\",\r\n                                            marginRight: \"5px\"\r\n                                        }}\r\n                                    />\r\n                                    <strong>{name}</strong><br />\r\n                                    {address && <><strong>Adresse:</strong> {address}<br /></>}\r\n                                    {(provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.neurologe_city || provider.onkologe_city) && (\r\n                                        <><strong>Stadt:</strong> {provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.neurologe_city || provider.onkologe_city}<br /></>\r\n                                    )}\r\n                                    <strong>Beste Route:</strong>{\" \"}\r\n                                    <span style={styles.bold}>\r\n                                        {distances[key] || \"Berechne...\"} km\r\n                                    </span>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                ) : (\r\n                    <p style={styles.noData}>Keine Daten verf√ºgbar.</p>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    informationsContainer: {\r\n        width: \"35%\",\r\n        fontWeight: \"600\",\r\n        position: \"absolute\",\r\n        border: \"2px solid #b3e5fc\",\r\n        right: \"10px\",\r\n        top: \"130px\",\r\n        bottom: \"510px\",\r\n        padding: \"15px\",\r\n        backgroundColor: \"#e1ecf0\",\r\n        borderRadius: \"8px\",\r\n        fontSize: \"12px\"\r\n    },\r\n    analysticContainer: {\r\n        width: \"35%\",\r\n        fontWeight: \"600\",\r\n        position: \"absolute\",\r\n        border: \"2px solid #b3e5fc\",\r\n        right: \"10px\",\r\n        top: \"350px\",\r\n        height: \"635px\",\r\n        padding: \"15px\",\r\n        backgroundColor: \"#e1ecf0\",\r\n        borderRadius: \"8px\",\r\n        fontSize: \"12px\"\r\n    },\r\n    title: {\r\n        fontSize: \"18px\",\r\n        marginBottom: \"8px\",\r\n        fontWeight: \"600\"\r\n    },\r\n    list: {\r\n        listStyleType: \"none\",\r\n        padding: 0,\r\n        margin: 0\r\n    },\r\n    listItem: {\r\n        marginBottom: \"8px\",\r\n        padding: \"8px\",\r\n        borderBottom: \"1px solid #ddd\"\r\n    },\r\n    bold: {\r\n        fontWeight: \"600\"\r\n    },\r\n    noData: {\r\n        fontStyle: \"italic\",\r\n        color: \"#999\"\r\n    }\r\n};\r\n\r\nexport default Analystics;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}