{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport SearchForm from \"./SearchForm\";\nimport L from \"leaflet\";\n\n// Auto-zoom component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutoZoom = ({\n  locations\n}) => {\n  _s();\n  const map = useMap(); // Access the map instance\n\n  useEffect(() => {\n    if (locations.length > 0) {\n      const bounds = L.latLngBounds(locations.map(loc => [loc.latitude, loc.longitude]));\n      map.fitBounds(bounds, {\n        padding: [50, 50]\n      }); // Adjust padding for better view\n    }\n  }, [locations, map]);\n  return null; // This component only handles map logic\n};\n_s(AutoZoom, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = AutoZoom;\nconst Map = () => {\n  _s2();\n  const [latitude, setlatitude] = useState(0);\n  const [longitude, setlongitude] = useState(0);\n  const [graphData, setGraphData] = useState([]);\n  console.log(graphData[0]);\n  // setlatitude(graphData[0].latitude);\n  // setlongitude(graphData[0].longitude);\n  useEffect(() => {\n    if (graphData.length > 0) {\n      graphData.forEach((data, index) => {\n        console.log(`Position ${index + 1}: Latitude ${data.latitude}, Longitude ${data.longitude}`);\n        setlatitude(data.latitude);\n        setlongitude(data.longitude);\n      });\n    }\n  }, [graphData]); // Runs when graphData updates\n\n  const position = [latitude, longitude];\n  console.log(position);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Healthcare Data Visualization with GraphXR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      setGraphData: setGraphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [50.851, 8.015],\n      zoom: 8,\n      scrollWheelZoom: false,\n      style: {\n        height: 900\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AutoZoom, {\n        locations: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), graphData.map((data, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [data.latitude, data.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: data.clinic_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 60\n          }, this), \"City: \", data.city, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 43\n          }, this), \"Lat: \", data.latitude, \", Lng: \", data.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), \",\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s2(Map, \"UUby3HwNOZrX7QiCZXyIWp359wk=\");\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"AutoZoom\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","useMap","Marker","Popup","SearchForm","L","jsxDEV","_jsxDEV","AutoZoom","locations","_s","map","length","bounds","latLngBounds","loc","latitude","longitude","fitBounds","padding","_c","Map","_s2","setlatitude","setlongitude","graphData","setGraphData","console","log","forEach","data","index","position","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","scrollWheelZoom","style","height","attribution","url","clinic_name","city","_c2","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer, useMap, Marker, Popup } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport SearchForm from \"./SearchForm\";\r\nimport L from \"leaflet\";\r\n\r\n// Auto-zoom component\r\nconst AutoZoom = ({ locations }) => {\r\n    const map = useMap(); // Access the map instance\r\n\r\n    useEffect(() => {\r\n        if (locations.length > 0) {\r\n            const bounds = L.latLngBounds(locations.map(loc => [loc.latitude, loc.longitude]));\r\n            map.fitBounds(bounds, { padding: [50, 50] }); // Adjust padding for better view\r\n        }\r\n    }, [locations, map]);\r\n\r\n    return null; // This component only handles map logic\r\n};\r\nconst Map = () => {\r\n\r\n    const [latitude, setlatitude] = useState(0);\r\n    const [longitude, setlongitude] = useState(0);\r\n    const [graphData, setGraphData] = useState([]);\r\n    console.log(graphData[0]);\r\n    // setlatitude(graphData[0].latitude);\r\n    // setlongitude(graphData[0].longitude);\r\n    useEffect(() => {\r\n        if (graphData.length > 0) {\r\n            graphData.forEach((data, index) => {\r\n                console.log(`Position ${index + 1}: Latitude ${data.latitude}, Longitude ${data.longitude}`);\r\n                setlatitude(data.latitude);\r\n                setlongitude(data.longitude);\r\n            });\r\n            \r\n        }\r\n    }, [graphData]);  // Runs when graphData updates\r\n    \r\n    const position = [latitude, longitude];\r\n    console.log(position);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Healthcare Data Visualization with GraphXR</h1>\r\n      <SearchForm setGraphData={setGraphData} />\r\n      <MapContainer center={[50.851, 8.015]} zoom={8} scrollWheelZoom={false} style={{height: 900}}>\r\n    <TileLayer\r\n      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n    />\r\n    {/* Auto-Zoom Feature */}\r\n    <AutoZoom locations={graphData} />\r\n    {/* <Marker position={position} >\r\n      <Popup>\r\n        A pretty CSS3 popup. <br /> Easily customizable.\r\n      </Popup>\r\n    </Marker> */}\r\n    {graphData.map((data, index) => (\r\n                <Marker key={index} position={[data.latitude, data.longitude]}>\r\n                    <Popup>\r\n                        <strong>{data.clinic_name}</strong><br />\r\n                        City: {data.city} <br />\r\n                        Lat: {data.latitude}, Lng: {data.longitude}\r\n                    </Popup>\r\n                </Marker>\r\n            ))}\r\n  </MapContainer>,\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}