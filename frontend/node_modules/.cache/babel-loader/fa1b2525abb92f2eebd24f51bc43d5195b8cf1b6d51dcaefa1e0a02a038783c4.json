{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { MapContainer, TileLayer, useMap, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport SearchForm from \"./SearchForm\";\nimport L from \"leaflet\";\nimport { useLocation } from \"./LocationContext\";\nimport Button from '@mui/material/Button';\n\n// 🎯 Predefined colors for clinics, MVZ, ASV\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\n\n// 🟢 Custom icons for different provider types\nconst userIcon = L.icon({\n  iconUrl: \"https://cdn-icons-png.flaticon.com/512/684/684908.png\",\n  // Unique user icon\n  iconSize: [35, 35],\n  iconAnchor: [17, 35]\n});\n\n// 🏥 Create a circular icon for clinics/MVZ/etc.\nconst getColoredClinicIcon = color => {\n  return L.divIcon({\n    className: \"custom-clinic-marker\",\n    html: `<div style=\"\n            width: 30px; height: 30px; \n            background-color: ${color}; \n            border-radius: 50%; \n            border: 1px solid black;\n            display: flex; justify-content: center; align-items: center;\">\n        </div>`,\n    iconSize: [20, 20],\n    iconAnchor: [15, 20]\n  });\n};\n// ✅ AutoZoom adjusts the map bounds to show all valid points\nconst AutoZoom = ({\n  locations\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    // 🛑 Filter out locations with missing latitude/longitude\n    console.log(\"hii&&&\", locations);\n    const validLocations = locations.filter(loc => loc.latitude && loc.longitude || loc.clinic_latitude && loc.clinic_longitude || loc.mvz_latitude && loc.mvz_longitude || loc.asv_latitude && loc.asv_longitude ||\n    // Fixed: loc.asv.longitude → loc.asv_longitude\n    loc.niedergelassene_latitude && loc.niedergelassene_longitude || loc.neurologe_latitude && loc.neurologe_longitude || loc.onkologe_latitude && loc.onkologe_longitude);\n    console.log(\"hii&&&\", validLocations.length);\n    if (validLocations.length > 0) {\n      const bounds = L.latLngBounds(validLocations.map(loc => [loc.latitude || loc.clinic_latitude || loc.mvz_latitude || loc.asv_latitude || loc.niedergelassene_latitude || loc.neurologe_latitude || loc.onkologe_latitude, loc.longitude || loc.clinic_longitude || loc.mvz_longitude || loc.asv_longitude || loc.niedergelassene_longitude || loc.neurologe_longitude || loc.onkologe_longitude]));\n      map.fitBounds(bounds, {\n        padding: [50, 50]\n      }); // Ensure all points are visible\n    } else {\n      console.warn(\"⚠️ No valid locations found for AutoZoom!\");\n    }\n  }, [locations, map]);\n  return null; // No UI component, only logic\n};\n_s(AutoZoom, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = AutoZoom;\nconst Map = () => {\n  _s2();\n  const [graphData, setGraphData] = useState([]); // Holds clinic/MVZ/etc. data\n  const [userLocation, setUserLocation] = useState(null); // User's position\n  const [locationChoice, setLocationChoice] = useState(\"\"); // Selected location method\n  const [manualAddress, setManualAddress] = useState(\"\"); // For manual input\n  // const [selectedLocation, setSelectedLocation] = useState(null); // 🆕 Selected clicked location\n  // const { setAllLocations } = useLocation();                      // Context function\n  const {\n    setAllLocations,\n    selectedLocation,\n    setSelectedLocation\n  } = useLocation(); // 🆕 Destructure selectedLocation & setSelectedLocation\n\n  // 🚀 Get user's current location\n  const fetchMyLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        if (lat && lon) {\n          setUserLocation({\n            latitude: lat,\n            longitude: lon\n          });\n          console.log(\"✅ User location set:\", lat, lon);\n        } else {\n          console.warn(\"⚠️ Invalid user location received.\");\n        }\n      }, error => {\n        console.error(\"❌ Error getting user location:\", error);\n      });\n    }\n  };\n  // 📍 Handle click on marker → save clicked location\n  const handleMarkerClick = location => {\n    setSelectedLocation(location); // 🆕 Sets the selected location on click\n  };\n\n  // 🎯 Handle location selection\n  const handleLocationChoice = choice => {\n    setLocationChoice(choice);\n    setUserLocation(null);\n    setManualAddress(\"\");\n    if (choice === \"my-location\") {\n      fetchMyLocation();\n    }\n  };\n\n  // 🎯 Convert address to latitude & longitude using OpenStreetMap's Nominatim API\n  const handleManualAddressSearch = async () => {\n    if (!manualAddress.trim()) {\n      alert(\"Please enter a valid address.\");\n      return;\n    }\n    try {\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(manualAddress)}`);\n      const data = await response.json();\n      if (data.length > 0 && data[0].lat && data[0].lon) {\n        setUserLocation({\n          latitude: parseFloat(data[0].lat),\n          longitude: parseFloat(data[0].lon)\n        });\n      } else {\n        alert(\"Address not found. Please enter a more precise location.\");\n        console.warn(\"❌ No valid latitude/longitude found in API response.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching geolocation:\", error);\n      alert(\"Failed to fetch location. Try again later.\");\n    }\n  };\n\n  // ✅ UseMemo to prevent unnecessary re-renders\n  const allLocations = useMemo(() => {\n    const locations = [...graphData];\n    if (userLocation) {\n      locations.push({\n        clinic_name: \"Your Location\",\n        provider_type: \"User\",\n        ...userLocation\n      });\n    }\n    return locations;\n  }, [graphData, userLocation]);\n\n  // ✅ Update locations when changed\n  useEffect(() => {\n    setAllLocations(allLocations);\n  }, [allLocations, setAllLocations]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#f0ffff\",\n      // Light blue background\n      border: \"1px solid #b3e5fc\",\n      borderRadius: \"10px\",\n      padding: \"10px\",\n      marginBottom: \"15px\",\n      boxShadow: \"0px 2px 10px rgba(0,0,0,0.1)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"W\\xE4hlen Sie Ihren Standort:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"10px\",\n        marginBottom: \"10px\",\n        paddingLeft: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => handleLocationChoice(\"my-location\"),\n        children: \"Meinen Standort verwenden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => handleLocationChoice(\"manual\"),\n        children: \"Standort manuell eingeben\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), locationChoice === \"manual\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: \"10px\",\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Geben Sie Ihre Adresse ein\",\n        value: manualAddress,\n        onChange: e => setManualAddress(e.target.value),\n        style: {\n          padding: \"8px\",\n          width: \"250px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"5px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleManualAddressSearch,\n        style: {\n          padding: \"8px 12px\",\n          borderRadius: \"5px\",\n          backgroundColor: \"#007BFF\",\n          /* Primary blue */\n          color: \"white\",\n          border: \"none\",\n          cursor: \"pointer\",\n          fontSize: \"14px\",\n          fontWeight: \"bold\",\n          transition: \"background-color 0.3s\",\n          boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.2)\"\n        },\n        onMouseOver: e => e.target.style.backgroundColor = \"#0056b3\" /* Hover effect */,\n        onMouseOut: e => e.target.style.backgroundColor = \"#007BFF\",\n        children: \"Search Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      setGraphData: setGraphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"59%\",\n        height: \"500px\",\n        border: \"1px solid #b3e5fc\",\n        borderRadius: \"10px\",\n        padding: \"10px\",\n        margin: \"10px 0\",\n        // Ensure no auto-centering\n        boxShadow: \"0px 4px 10px rgba(0,0,0,0.15)\",\n        backgroundColor: \"white\",\n        // White background for contrast\n        display: \"flex\",\n        // Ensures content aligns properly\n        alignItems: \"center\",\n        // Aligns map within box\n        justifyContent: \"center\" // Aligns the map box to the left\n      },\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [50.851, 8.015],\n        zoom: 8,\n        scrollWheelZoom: false,\n        style: {\n          height: \"100%\",\n          width: \"100%\",\n          borderRadius: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }, this), allLocations.length > 0 ? /*#__PURE__*/_jsxDEV(AutoZoom, {\n          locations: allLocations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: \"18px\",\n            color: \"red\",\n            marginTop: \"20px\"\n          },\n          children: \"\\u274C No locations found. Try a different search.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [userLocation.latitude, userLocation.longitude],\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), graphData.map((data, index) => {\n          const color = lineColors[index % lineColors.length]; // Match line & marker color\n          // Extract valid lat/lng values from multiple possible sources\n          const latitude = data.clinic_latitude || data.mvz_latitude || data.neurologe_latitude || data.onkologe_latitude;\n          const longitude = data.clinic_longitude || data.mvz_longitude || data.neurologe_longitude || data.onkologe_longitude;\n          // 🛑 Skip if latitude or longitude is missing\n          if (!latitude || !longitude) {\n            console.warn(`⚠️ Skipping invalid location: ${data.clinic_name || data.mvz_name || data.neurologe_name || data.onkologe_name}`);\n            return null;\n          }\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [latitude, longitude],\n            icon: getColoredClinicIcon(color),\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: data.clinic_name || data.mvz_name || data.neurologe_name || data.onkologe_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 130\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this), \" \", data.clinic_city || data.mvz_city || data.neurologe_city || data.onkologe_city, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 137\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this), \" \", data.clinic_address || data.mvz_address || data.neurologe_address || data.onkologe_address || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 161\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Beds:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), \" \", data.clinic_number_of_beds || \"N/A\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this);\n        }), userLocation && graphData.map((data, index) => {\n          const color = lineColors[index % lineColors.length]; // Match line color\n\n          // Extract lat/lng for the target location\n          const latitude = data.clinic_latitude || data.mvz_latitude || data.neurologe_latitude || data.onkologe_latitude;\n          const longitude = data.clinic_longitude || data.mvz_longitude || data.neurologe_longitude || data.onkologe_longitude;\n\n          // 🛑 Skip if lat/lng is missing\n          if (!latitude || !longitude) return null;\n          return /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: [[userLocation.latitude, userLocation.longitude], [latitude, longitude]],\n            color: color,\n            weight: 2\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), selectedLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"15px\",\n        backgroundColor: \"#fff\",\n        padding: \"10px\",\n        borderRadius: \"8px\",\n        border: \"1px solid #ccc\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Ausgew\\xE4hlte Einrichtung:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 24\n        }, this), \" \", selectedLocation.clinic_name || selectedLocation.mvz_name || selectedLocation.neurologe_name || selectedLocation.onkologe_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Adresse:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 24\n        }, this), \" \", selectedLocation.clinic_address || selectedLocation.mvz_address || selectedLocation.neurologe_address || selectedLocation.onkologe_address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Stadt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 24\n        }, this), \" \", selectedLocation.clinic_city || selectedLocation.mvz_city || selectedLocation.neurologe_city || selectedLocation.onkologe_city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s2(Map, \"ldPG56thr84O3jwSVmH2MIaI4FE=\", false, function () {\n  return [useLocation];\n});\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"AutoZoom\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","MapContainer","TileLayer","useMap","Marker","Popup","Polyline","SearchForm","L","useLocation","Button","jsxDEV","_jsxDEV","lineColors","userIcon","icon","iconUrl","iconSize","iconAnchor","getColoredClinicIcon","color","divIcon","className","html","AutoZoom","locations","_s","map","console","log","validLocations","filter","loc","latitude","longitude","clinic_latitude","clinic_longitude","mvz_latitude","mvz_longitude","asv_latitude","asv_longitude","niedergelassene_latitude","niedergelassene_longitude","neurologe_latitude","neurologe_longitude","onkologe_latitude","onkologe_longitude","length","bounds","latLngBounds","fitBounds","padding","warn","_c","Map","_s2","graphData","setGraphData","userLocation","setUserLocation","locationChoice","setLocationChoice","manualAddress","setManualAddress","setAllLocations","selectedLocation","setSelectedLocation","fetchMyLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","lon","error","handleMarkerClick","location","handleLocationChoice","choice","handleManualAddressSearch","trim","alert","response","fetch","encodeURIComponent","data","json","parseFloat","allLocations","push","clinic_name","provider_type","style","backgroundColor","border","borderRadius","marginBottom","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","paddingLeft","variant","onClick","type","placeholder","value","onChange","e","target","width","marginRight","cursor","fontSize","fontWeight","transition","onMouseOver","onMouseOut","height","margin","alignItems","justifyContent","center","zoom","scrollWheelZoom","attribution","url","textAlign","marginTop","index","mvz_name","neurologe_name","onkologe_name","clinic_city","mvz_city","neurologe_city","onkologe_city","clinic_address","mvz_address","neurologe_address","onkologe_address","clinic_number_of_beds","positions","weight","_c2","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/map.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { MapContainer, TileLayer, useMap, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport SearchForm from \"./SearchForm\";\r\nimport L from \"leaflet\";\r\nimport { useLocation } from \"./LocationContext\";\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n\r\n\r\n// 🎯 Predefined colors for clinics, MVZ, ASV\r\nconst lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\n// 🟢 Custom icons for different provider types\r\nconst userIcon = L.icon({\r\n    iconUrl: \"https://cdn-icons-png.flaticon.com/512/684/684908.png\", // Unique user icon\r\n    iconSize: [35, 35],\r\n    iconAnchor: [17, 35]\r\n});\r\n\r\n// 🏥 Create a circular icon for clinics/MVZ/etc.\r\nconst getColoredClinicIcon = (color) => {\r\n    return L.divIcon({\r\n        className: \"custom-clinic-marker\",\r\n        html: `<div style=\"\r\n            width: 30px; height: 30px; \r\n            background-color: ${color}; \r\n            border-radius: 50%; \r\n            border: 1px solid black;\r\n            display: flex; justify-content: center; align-items: center;\">\r\n        </div>`,\r\n        iconSize: [20, 20],\r\n        iconAnchor: [15, 20]\r\n    });\r\n};\r\n// ✅ AutoZoom adjusts the map bounds to show all valid points\r\nconst AutoZoom = ({ locations }) => {\r\n    const map = useMap();\r\n    \r\n    useEffect(() => {\r\n        // 🛑 Filter out locations with missing latitude/longitude\r\n        console.log(\"hii&&&\",locations);\r\n        const validLocations = locations.filter(loc => \r\n            (loc.latitude && loc.longitude) ||\r\n            (loc.clinic_latitude && loc.clinic_longitude) ||\r\n            (loc.mvz_latitude && loc.mvz_longitude) ||\r\n            (loc.asv_latitude && loc.asv_longitude) ||  // Fixed: loc.asv.longitude → loc.asv_longitude\r\n            (loc.niedergelassene_latitude && loc.niedergelassene_longitude) ||\r\n            (loc.neurologe_latitude && loc.neurologe_longitude) ||\r\n            (loc.onkologe_latitude && loc.onkologe_longitude)\r\n        );\r\n        \r\n\r\n        console.log(\"hii&&&\",validLocations.length);\r\n        if (validLocations.length > 0) {\r\n            const bounds = L.latLngBounds(validLocations.map(loc => [\r\n                loc.latitude || \r\n                loc.clinic_latitude || \r\n                loc.mvz_latitude || \r\n                loc.asv_latitude || \r\n                loc.niedergelassene_latitude || \r\n                loc.neurologe_latitude || \r\n                loc.onkologe_latitude, \r\n\r\n                loc.longitude || \r\n                loc.clinic_longitude || \r\n                loc.mvz_longitude || \r\n                loc.asv_longitude || \r\n                loc.niedergelassene_longitude || \r\n                loc.neurologe_longitude || \r\n                loc.onkologe_longitude\r\n            ]));\r\n            map.fitBounds(bounds, { padding: [50, 50] }); // Ensure all points are visible\r\n        } else {\r\n            console.warn(\"⚠️ No valid locations found for AutoZoom!\");\r\n        }\r\n    }, [locations, map]);\r\n\r\n    return null; // No UI component, only logic\r\n};\r\n\r\nconst Map = () => {\r\n    const [graphData, setGraphData] = useState([]);                 // Holds clinic/MVZ/etc. data\r\n    const [userLocation, setUserLocation] = useState(null);         // User's position\r\n    const [locationChoice, setLocationChoice] = useState(\"\");       // Selected location method\r\n    const [manualAddress, setManualAddress] = useState(\"\");         // For manual input\r\n    // const [selectedLocation, setSelectedLocation] = useState(null); // 🆕 Selected clicked location\r\n    // const { setAllLocations } = useLocation();                      // Context function\r\n    const { setAllLocations, selectedLocation, setSelectedLocation } = useLocation(); // 🆕 Destructure selectedLocation & setSelectedLocation\r\n\r\n    // 🚀 Get user's current location\r\n    const fetchMyLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const lat = position.coords.latitude;\r\n                    const lon = position.coords.longitude;\r\n    \r\n                    if (lat && lon) {\r\n                        setUserLocation({\r\n                            latitude: lat,\r\n                            longitude: lon\r\n                        });\r\n                        console.log(\"✅ User location set:\", lat, lon);\r\n                    } else {\r\n                        console.warn(\"⚠️ Invalid user location received.\");\r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.error(\"❌ Error getting user location:\", error);\r\n                }\r\n            );\r\n        }\r\n    };\r\n    // 📍 Handle click on marker → save clicked location\r\n    const handleMarkerClick = (location) => {\r\n        setSelectedLocation(location); // 🆕 Sets the selected location on click\r\n    };\r\n\r\n    // 🎯 Handle location selection\r\n    const handleLocationChoice = (choice) => {\r\n        setLocationChoice(choice);\r\n        setUserLocation(null);\r\n        setManualAddress(\"\"); \r\n        if (choice === \"my-location\") {\r\n            fetchMyLocation();\r\n        }\r\n    };\r\n\r\n    // 🎯 Convert address to latitude & longitude using OpenStreetMap's Nominatim API\r\n    const handleManualAddressSearch = async () => {\r\n        if (!manualAddress.trim()) {\r\n            alert(\"Please enter a valid address.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(manualAddress)}`);\r\n            const data = await response.json();\r\n            if (data.length > 0 && data[0].lat && data[0].lon) {\r\n                setUserLocation({\r\n                    latitude: parseFloat(data[0].lat),\r\n                    longitude: parseFloat(data[0].lon)\r\n                });\r\n            } else {\r\n                alert(\"Address not found. Please enter a more precise location.\");\r\n                console.warn(\"❌ No valid latitude/longitude found in API response.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching geolocation:\", error);\r\n            alert(\"Failed to fetch location. Try again later.\");\r\n        }\r\n    };\r\n\r\n    // ✅ UseMemo to prevent unnecessary re-renders\r\n    const allLocations = useMemo(() => {\r\n        const locations = [...graphData];\r\n        if (userLocation) {\r\n            locations.push({ clinic_name: \"Your Location\", provider_type: \"User\", ...userLocation });\r\n        }\r\n        return locations;\r\n    }, [graphData, userLocation]);\r\n\r\n    // ✅ Update locations when changed\r\n    useEffect(() => {\r\n        setAllLocations(allLocations);\r\n    }, [allLocations, setAllLocations]);\r\n    \r\n    return (\r\n         \r\n        \r\n        <div style={{\r\n            backgroundColor: \"#f0ffff\", // Light blue background\r\n            border: \"1px solid #b3e5fc\",\r\n            borderRadius: \"10px\",\r\n            padding: \"10px\",\r\n            marginBottom: \"15px\",\r\n            boxShadow: \"0px 2px 10px rgba(0,0,0,0.1)\"\r\n        }}>\r\n        <h3>Wählen Sie Ihren Standort:</h3>\r\n        <div style={{ display: \"flex\", gap: \"10px\", marginBottom: \"10px\", paddingLeft: \"10px\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleLocationChoice(\"my-location\")}>Meinen Standort verwenden</Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleLocationChoice(\"manual\")}>Standort manuell eingeben</Button>\r\n        </div>\r\n\r\n            {locationChoice === \"manual\" && (\r\n                <div style={{ paddingLeft: \"10px\",marginBottom: \"10px\" }}>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Geben Sie Ihre Adresse ein\" \r\n                        value={manualAddress} \r\n                        onChange={(e) => setManualAddress(e.target.value)}\r\n                        style={{ padding: \"8px\", width: \"250px\", border: \"1px solid #ccc\", borderRadius: \"5px\", marginRight: \"10px\" }} \r\n                    />\r\n                    {/* <button onClick={handleManualAddressSearch}>Search Address</button> */}\r\n                            \r\n                    {/* ✅ Styled \"Search Address\" Button */}\r\n                    <button \r\n                        onClick={handleManualAddressSearch} \r\n                        style={{\r\n                            padding: \"8px 12px\",\r\n                            borderRadius: \"5px\",\r\n                            backgroundColor: \"#007BFF\", /* Primary blue */\r\n                            color: \"white\",\r\n                            border: \"none\",\r\n                            cursor: \"pointer\",\r\n                            fontSize: \"14px\",\r\n                            fontWeight: \"bold\",\r\n                            transition: \"background-color 0.3s\",\r\n                            boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.2)\"\r\n                        }}\r\n                        onMouseOver={(e) => e.target.style.backgroundColor = \"#0056b3\"} /* Hover effect */\r\n                        onMouseOut={(e) => e.target.style.backgroundColor = \"#007BFF\"} \r\n                    >\r\n                        Search Address\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            <SearchForm setGraphData={setGraphData} />\r\n            \r\n            <div style={{\r\n                width: \"59%\",\r\n                height: \"500px\",\r\n                border: \"1px solid #b3e5fc\",\r\n                borderRadius: \"10px\",\r\n                padding: \"10px\",\r\n                margin: \"10px 0\", // Ensure no auto-centering\r\n                boxShadow: \"0px 4px 10px rgba(0,0,0,0.15)\",\r\n                backgroundColor: \"white\", // White background for contrast\r\n                display: \"flex\", // Ensures content aligns properly\r\n                alignItems: \"center\", // Aligns map within box\r\n                justifyContent: \"center\" // Aligns the map box to the left\r\n            }}>\r\n            <MapContainer center={[50.851, 8.015]} zoom={8} scrollWheelZoom={false} style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }}>\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n\r\n                {/* AutoZoom Component to adjust map bounds dynamically */}\r\n                \r\n                {/* <AutoZoom locations={allLocations} /> */}\r\n                {allLocations.length > 0 ? (\r\n                    \r\n                    <AutoZoom locations={allLocations} />\r\n                ) : (\r\n                    <div style={{ textAlign: \"center\", fontSize: \"18px\", color: \"red\", marginTop: \"20px\" }}>\r\n                        ❌ No locations found. Try a different search.\r\n                    </div>\r\n                )}\r\n                {/* 🎯 Draw user location marker */}\r\n                {userLocation &&  (\r\n                    <Marker position={[userLocation.latitude, userLocation.longitude]} icon={userIcon}>\r\n                        <Popup><strong>Your Location</strong></Popup>\r\n                    </Marker>\r\n                )}\r\n                \r\n                {/* 🎯 Draw clinic markers */}\r\n                {graphData.map((data, index) => {\r\n                    const color = lineColors[index % lineColors.length]; // Match line & marker color\r\n                    // Extract valid lat/lng values from multiple possible sources\r\n                    const latitude = data.clinic_latitude || data.mvz_latitude || data.neurologe_latitude || data.onkologe_latitude;\r\n                    const longitude = data.clinic_longitude || data.mvz_longitude || data.neurologe_longitude || data.onkologe_longitude;\r\n                    // 🛑 Skip if latitude or longitude is missing\r\n                    if (!latitude || !longitude) {\r\n                        console.warn(`⚠️ Skipping invalid location: ${data.clinic_name || data.mvz_name || data.neurologe_name || data.onkologe_name}`);\r\n                        return null;\r\n                    }\r\n\r\n                    return (\r\n                        <Marker key={index} position={[latitude, longitude]} icon={getColoredClinicIcon(color)}>\r\n                            <Popup>\r\n                                <strong>{data.clinic_name || data.mvz_name || data.neurologe_name || data.onkologe_name}</strong><br />\r\n                                <strong>City:</strong> {data.clinic_city || data.mvz_city || data.neurologe_city || data.onkologe_city} <br />\r\n                                <strong>Address:</strong> {data.clinic_address || data.mvz_address || data.neurologe_address || data.onkologe_address || \"N/A\"} <br />\r\n                                <strong>Beds:</strong> {data.clinic_number_of_beds || \"N/A\"}\r\n                            </Popup>\r\n                        </Marker>\r\n                    );\r\n                })}\r\n                {/* 🎯 Draw lines between user location & clinics */}\r\n                {userLocation && graphData.map((data, index) => {\r\n        const color = lineColors[index % lineColors.length]; // Match line color\r\n\r\n        // Extract lat/lng for the target location\r\n        const latitude = data.clinic_latitude || data.mvz_latitude || data.neurologe_latitude || data.onkologe_latitude;\r\n        const longitude = data.clinic_longitude || data.mvz_longitude || data.neurologe_longitude || data.onkologe_longitude;\r\n\r\n        // 🛑 Skip if lat/lng is missing\r\n        if (!latitude || !longitude) return null;\r\n\r\n        return (\r\n            <Polyline \r\n                key={index} \r\n                positions={[\r\n                    [userLocation.latitude, userLocation.longitude], \r\n                    [latitude, longitude]\r\n                ]} \r\n                color={color} \r\n                weight={2} \r\n            />\r\n        );\r\n    })}\r\n            </MapContainer>\r\n        </div>\r\n        {/* ℹ️ Show selected location info below the map */}\r\n        {selectedLocation && (\r\n                <div style={{ marginTop: \"15px\", backgroundColor: \"#fff\", padding: \"10px\", borderRadius: \"8px\", border: \"1px solid #ccc\" }}>\r\n                    <h4>Ausgewählte Einrichtung:</h4>\r\n                    <p><strong>Name:</strong> {selectedLocation.clinic_name || selectedLocation.mvz_name || selectedLocation.neurologe_name || selectedLocation.onkologe_name}</p>\r\n                    <p><strong>Adresse:</strong> {selectedLocation.clinic_address || selectedLocation.mvz_address || selectedLocation.neurologe_address || selectedLocation.onkologe_address}</p>\r\n                    <p><strong>Stadt:</strong> {selectedLocation.clinic_city || selectedLocation.mvz_city || selectedLocation.neurologe_city || selectedLocation.onkologe_city}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}