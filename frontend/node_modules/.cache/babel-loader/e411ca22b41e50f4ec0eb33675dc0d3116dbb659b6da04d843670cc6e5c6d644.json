{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\SearchForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchForm = ({\n  setGraphData\n}) => {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [icdCode, setIcdCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleSearch = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/search`, {\n        params: {\n          city,\n          icd_code: icdCode\n        }\n      });\n      console.log(\"API Response:\", response.data); // ✅ Debugging\n\n      if (response.data.length === 0) {\n        setError(\"No results found. Try a different city or ICD code.\");\n        setGraphData([]);\n      } else {\n        setGraphData(response.data); // ✅ Send data to GraphXR\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error.response ? error.response.data : error.message);\n      setError(\"Failed to fetch data. Please check the backend.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search in GraphXR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city (e.g., Berlin)\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter ICD Code (e.g., D27)\",\n        value: icdCode,\n        onChange: e => setIcdCode(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Searching...\" : \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchForm, \"yQ3z+rl9GwQEA18m1Hq+Y+sEG0I=\");\n_c = SearchForm;\nexport default SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SearchForm","setGraphData","_s","city","setCity","icdCode","setIcdCode","loading","setLoading","error","setError","handleSearch","e","preventDefault","response","get","params","icd_code","console","log","data","length","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/SearchForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SearchForm = ({ setGraphData }) => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [icdCode, setIcdCode] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await axios.get(`http://127.0.0.1:5000/search`, {\r\n        params: { city, icd_code: icdCode },\r\n      });\r\n\r\n      console.log(\"API Response:\", response.data); // ✅ Debugging\r\n\r\n      if (response.data.length === 0) {\r\n        setError(\"No results found. Try a different city or ICD code.\");\r\n        setGraphData([]);\r\n      } else {\r\n        setGraphData(response.data); // ✅ Send data to GraphXR\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error.response ? error.response.data : error.message);\r\n      setError(\"Failed to fetch data. Please check the backend.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Search in GraphXR</h2>\r\n      <form onSubmit={handleSearch}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter city (e.g., Berlin)\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter ICD Code (e.g., D27)\"\r\n          value={icdCode}\r\n          onChange={(e) => setIcdCode(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Searching...\" : \"Search\"}\r\n        </button>\r\n      </form>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}