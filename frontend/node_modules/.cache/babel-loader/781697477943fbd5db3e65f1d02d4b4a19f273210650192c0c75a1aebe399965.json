{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\SearchForm.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useLocation } from \"./LocationContext\"; // ‚úÖ Add this\n\n// const SearchForm = ({ setGraphData }) => {\n//     // ‚úÖ Import context values at the top of the component\n//     const { allLocations, selectedLocation, setSelectedLocation, userLocation } = useLocation();\n//     // State for search fields\n//     const [city, setCity] = useState(\"\");\n//     const [icdCode, setIcdCode] = useState(\"\");\n//     const [radius, setRadius] = useState(30); // Default 30 km\n\n//     // State for checkboxes (filters)\n//     const [focus, setFocus] = useState({\n//         onkologen: false,\n//         neurologen: false,\n//     });\n//     const [providers, setProviders] = useState({\n//         clinics: false,\n//         mvz: false,\n//         asv: false,\n//         niedergelasseneAertze: false,\n//     });\n//     const [cooperation, setCooperation] = useState(false);\n\n//     // Handle logic to disable Schwerpunkt if ICD is entered\n//     // eslint-disable-next-line no-undef\n//     useEffect(() => {\n//         if (icdCode.trim() !== \"\") {\n//             setFocus({ onkologen: false, neurologen: false });\n//         }\n//     }, [icdCode]);\n\n//     // üü¢ Handle search form submission\n//     const handleSearch = async (e) => {\n//         e.preventDefault();\n//         console.log(\"üîµ Search Button Clicked\");\n\n//         try {\n//             const params = {\n//                 city,\n//                 icd_code: icdCode,\n//                 radius,\n//                 onkologen: focus.onkologen,\n//                 neurologen: focus.neurologen,\n//                 clinic: providers.clinics,\n//                 mvz: providers.mvz,\n//                 asv: providers.asv,\n//                 cooperation,\n//             };\n\n//             if (userLocation) {\n//                 params.lat = userLocation.latitude;\n//                 params.lon = userLocation.longitude;\n//             }\n\n//             const response = await axios.get(\"http://127.0.0.1:5000/search\", { params });\n//             console.log(\"‚úÖ API Response Received:\", response.data);\n\n//             // üõë Filter out invalid locations\n//             const validResults = response.data.filter(loc => (loc.clinic_latitude && loc.clinic_longitude) ||\n//             (loc.mvz_latitude && loc.mvz_longitude) ||\n//             (loc.asv_latitude && loc.asv_longitude) ||  // Fixed: loc.asv.longitude ‚Üí loc.asv_longitude\n//             (loc.niedergelassene_latitude && loc.niedergelassene_longitude) ||\n//             (loc.neurologe_latitude && loc.neurologe_longitude) ||\n//             (loc.onkologe_latitude && loc.onkologe_longitude)\n//         );\n\n//             if (validResults.length > 0) {\n//                 setGraphData(validResults);  // ‚úÖ Only use valid locations\n//             } else {\n//                 console.warn(\"‚ö†Ô∏è No valid locations in API response!\");\n//                 setGraphData([]); // Clear map if no valid results\n//             }\n//         } catch (error) {\n//             console.error(\"‚ùå API Error:\", error);\n//         }\n//     };\n\n//     return (\n//         <div style={styles.container}>\n//             <form onSubmit={handleSearch} style={styles.form}>\n//                 {/* üü¢ FLEX CONTAINER FOR SEARCH FIELDS & GUIDELINE BOX */}\n//                 <div style={styles.searchRow}>\n\n//                     {/* üü¢ SEARCH FIELDS (CITY & ICD CODE) */}\n//                     <div style={styles.inputContainer}>\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"City\"\n//                             value={city}\n//                             onChange={(e) => setCity(e.target.value)}\n//                             style={styles.input}\n//                             // required= {true}\n//                             required={!userLocation} // only require city if no user location\n//                         />\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"ICD Code\"\n//                             value={icdCode}\n//                             onChange={(e) => setIcdCode(e.target.value)}\n//                             style={styles.input}\n//                         />\n//                     </div>\n\n//                     {/* üü¢ GUIDELINE BOX */}\n//                     <div style={styles.guideBox}>\n//                         <strong>Sucheingaben: Diagnosen, Stadt oder eine der folgenden Optionen</strong>\n//                     </div>\n//                 </div>\n\n//                 {/* üü¢ RADIUS INPUT */}\n//                 <div style={styles.radiusContainer}>\n//                     <label>Umkreis  </label>\n//                     <input\n//                         type=\"number\"\n//                         value={radius}\n//                         onChange={(e) => setRadius(e.target.value)}\n//                         style={styles.radiusInput}\n//                     />\n//                     <span>km</span>\n//                 </div>\n\n//                 {/* üü¢ FILTERS (Schwerpunkt, Leistungserbringer & Kooperationen in the same row) */}\n//                 <div style={styles.filterRow}>\n\n//                     {/* üü¢ SCHWERPUNKT FILTER */}\n//                     <div style={styles.filterBox}>\n//                         <h3>Schwerpunkt</h3>\n\n//                         <div>\n//                             <label>\n//                                 <input\n//                                     type=\"checkbox\"\n//                                     checked={focus.onkologen}\n//                                     onChange={() => setFocus({ onkologen: !focus.onkologen, neurologen: false })}\n//                                     disabled={icdCode.trim() !== \"\"}\n//                                 />\n//                                 Onkologie\n//                             </label>\n//                         </div>\n\n//                         {/* Second row (new line) */}\n//                         <div style={{ marginTop: \"5px\" }}>\n//                             <label>\n//                                 <input\n//                                     type=\"checkbox\"\n//                                     checked={focus.neurologen}\n//                                     onChange={() => setFocus({ neurologen: !focus.neurologen, onkologen: false })}\n//                                     disabled={icdCode.trim() !== \"\"}\n//                                 />\n//                                 Neurologie\n//                             </label>\n//                         </div>\n//                     </div>\n\n//                     {/* üü¢ LEISTUNGSERBRINGER FILTER (Same Line) */}\n//                     <div style={styles.filterBox}>\n//                         <h3>Leistungserbringer</h3>\n//                         <div style={{ display: \"flex\", gap: \"10px\" }}>\n//                             <label>\n//                                 <input type=\"checkbox\" checked={providers.clinics} onChange={() => setProviders({ ...providers, clinics: !providers.clinics })} />\n//                                 Kliniken\n//                             </label>\n//                             <label>\n//                                 <input type=\"checkbox\" checked={providers.mvz} onChange={() => setProviders({ ...providers, mvz: !providers.mvz })} />\n//                                 MVZ\n//                             </label>\n//                             <label>\n//                                 <input type=\"checkbox\" checked={providers.asv} onChange={() => setProviders({ ...providers, asv: !providers.asv })} />\n//                                 ASV\n//                             </label>\n//                         </div>\n\n//                         {/* Move Niedergelassene √Ñrzte to a new line */}\n//                         <div style={{ marginTop: \"5px\" }}>\n//                             <label>\n//                                 <input type=\"checkbox\" checked={providers.niedergelasseneAertze} onChange={() => setProviders({ ...providers, niedergelasseneAertze: !providers.niedergelasseneAertze })} />\n//                                 Niedergelassene √Ñrzte\n//                             </label>\n//                         </div>\n//                     </div>\n\n//                     {/* üü¢ KOOPERATIONEN TOGGLE (Same Row) */}\n//                     <div style={styles.filterBox}>\n//                         <h3>Kooperationen</h3>\n//                         <label>\n//                             <input\n//                                 type=\"checkbox\"\n//                                 checked={cooperation}\n//                                 onChange={() => setCooperation(!cooperation)}\n//                             />\n//                             Kooperationen anzeigen\n//                         </label>\n//                     </div>\n\n//                 </div>\n\n//                 {/* üü¢ SEARCH BUTTON */}\n//                 <button type=\"submit\" style={styles.searchButton}>Suche</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// // üü¢ CSS STYLES\n// const styles = {\n//     container: {\n//         padding: \"10px\",\n//         borderRadius: \"8px\",\n//         border: \"2px solid #b3e5fc\",\n//         backgroundColor: \"#f9f9f9\",\n//         width: \"59%\",\n//         height: \"auto\",\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         justifyContent: \"space-between\",\n//         alignItems: \"center\",\n//         boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\",\n//         overflow: \"auto\",\n//         marginBottom: \"5px\",\n//     },\n//     form: {\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         gap: \"10px\",\n//         width: \"100%\",\n//     },\n//     searchRow: {\n//         display: \"flex\",\n//         justifyContent: \"space-between\",\n//         alignItems: \"center\",\n//         width: \"100%\",\n//     },\n//     inputContainer: {\n//         display: \"flex\",\n//         gap: \"10px\",\n//         alignItems: \"center\",\n//         flex: \"2\",\n//     },\n//     input: {\n//         fontSize: \"12px\",\n//         padding: \"5px\",\n//         width: \"100%\",\n//     },\n//     guideBox: {\n//         flex: \"3\",\n//         backgroundColor: \"#e3f2fd\",\n//         justifyContent: \"space-between\",\n//         padding: \"5px\",\n//         borderRadius: \"5px\",\n//         fontSize: \"14px\",\n//         marginleft: \"10px\",\n//         marginwidth: \"10px\",\n//         boxShadow: \"0px 0px 5px rgba(0, 0, 0, 0.1)\",\n//     },\n//     filterRow: {\n//         display: \"flex\",\n//         justifyContent: \"space-between\",\n//         alignItems: \"flex-start\",\n//         gap: \"20px\",\n//         width: \"100%\",\n//     },\n//     filterBox: {\n//         flex: 1,\n//         backgroundColor: \"#fff\",\n//         padding: \"10px\",\n//         borderRadius: \"5px\",\n//         boxShadow: \"0px 0px 5px rgba(0, 0, 0, 0.1)\",\n//         fontSize: \"12px\",\n//         width: \"30%\", // Adjusted for three columns\n//         minWidth: \"250px\", // Set a minimum width to keep them the same\n//         height: \"100px\", // Adjust the height as needed\n//         justifyContent: \"space-between\", // Keeps content aligned\n//     },\n//     searchButton: {\n//         padding: \"10px\",\n//         backgroundColor: \"#007BFF\",\n//         color: \"#fff\",\n//         border: \"none\",\n//         borderRadius: \"5px\",\n//         cursor: \"pointer\",\n//         width: \"10%\",\n//         fontSize: \"14px\",\n//     },\n// };\n\n// export default SearchForm;\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"./LocationContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchForm = ({\n  setGraphData\n}) => {\n  _s();\n  const {\n    userLocation\n  } = useLocation();\n  // Medical search parameters\n  const [icdCode, setIcdCode] = useState(\"\");\n  const [specialty, setSpecialty] = useState({\n    onkologen: false,\n    neurologen: false\n  });\n\n  // Provider types (multiple allowed)\n  const [providers, setProviders] = useState({\n    clinics: false,\n    mvz: false,\n    asv: false,\n    niedergelasseneAertze: false\n  });\n\n  // Location handling\n  const [locationSource, setLocationSource] = useState(\"user\"); // 'user', 'city', 'manual'\n  const [city, setCity] = useState(\"\");\n  const [manualLat, setManualLat] = useState(\"\");\n  const [manualLon, setManualLon] = useState(\"\");\n  const [radius, setRadius] = useState(30);\n\n  // Cooperation filter\n  const [cooperation, setCooperation] = useState(false);\n\n  // Disable specialties when ICD code exists\n  useEffect(() => {\n    if (icdCode.trim() !== \"\") {\n      setSpecialty({\n        onkologen: false,\n        neurologen: false\n      });\n    }\n  }, [icdCode]);\n  const handleSearch = async e => {\n    e.preventDefault();\n\n    // Validate location inputs\n    if (locationSource === \"city\" && !city.trim()) {\n      alert(\"Please enter a city\");\n      return;\n    }\n    if (locationSource === \"manual\" && (!manualLat || !manualLon)) {\n      alert(\"Please enter valid coordinates\");\n      return;\n    }\n    try {\n      const params = {\n        icd_code: icdCode,\n        radius,\n        onkologen: specialty.onkologen,\n        neurologen: specialty.neurologen,\n        clinic: providers.clinics,\n        mvz: providers.mvz,\n        asv: providers.asv,\n        niedergelasseneAertze: providers.niedergelasseneAertze,\n        cooperation\n      };\n\n      // Handle location parameters\n      switch (locationSource) {\n        case \"user\":\n          if (userLocation) {\n            params.lat = userLocation.latitude;\n            params.lon = userLocation.longitude;\n          }\n          break;\n        case \"city\":\n          params.city = city;\n          break;\n        case \"manual\":\n          params.lat = manualLat;\n          params.lon = manualLon;\n          break;\n      }\n      const response = await axios.get(\"http://127.0.0.1:5000/search\", {\n        params\n      });\n\n      // Filter and process results\n      const validResults = response.data.filter(loc => loc.clinic_latitude && loc.clinic_longitude || loc.mvz_latitude && loc.mvz_longitude || loc.asv_latitude && loc.asv_longitude || loc.niedergelassene_latitude && loc.niedergelassene_longitude);\n      setGraphData(validResults.length > 0 ? validResults : []);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setGraphData([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Medical Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.inputRow,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"ICD Code\",\n            value: icdCode,\n            onChange: e => setIcdCode(e.target.value),\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.specialtyGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: specialty.onkologen,\n                onChange: () => setSpecialty({\n                  onkologen: !specialty.onkologen,\n                  neurologen: false\n                }),\n                disabled: !!icdCode.trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 33\n              }, this), \"Oncology\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: specialty.neurologen,\n                onChange: () => setSpecialty({\n                  neurologen: !specialty.neurologen,\n                  onkologen: false\n                }),\n                disabled: !!icdCode.trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 33\n              }, this), \"Neurology\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Location Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.locationSource,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"locationSource\",\n              value: \"user\",\n              checked: locationSource === \"user\",\n              onChange: () => setLocationSource(\"user\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 29\n            }, this), \"Use My Location\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"locationSource\",\n              value: \"city\",\n              checked: locationSource === \"city\",\n              onChange: () => setLocationSource(\"city\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 29\n            }, this), \"Search by City\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"locationSource\",\n              value: \"manual\",\n              checked: locationSource === \"manual\",\n              onChange: () => setLocationSource(\"manual\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 29\n            }, this), \"Enter Coordinates\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }, this), locationSource === \"city\" && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter city name\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          style: styles.input,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 25\n        }, this), locationSource === \"manual\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.coordinateInputs,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Latitude\",\n            value: manualLat,\n            onChange: e => setManualLat(e.target.value),\n            step: \"any\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Longitude\",\n            value: manualLon,\n            onChange: e => setManualLon(e.target.value),\n            step: \"any\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.radiusContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Search Radius (km):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: radius,\n            onChange: e => setRadius(e.target.value),\n            min: \"1\",\n            max: \"100\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.section,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Provider Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.providerGroup,\n          children: Object.entries(providers).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: value,\n              onChange: () => setProviders({\n                ...providers,\n                [key]: !value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 33\n            }, this), {\n              clinics: \"Clinics\",\n              mvz: \"MVZ\",\n              asv: \"ASV\",\n              niedergelasseneAertze: \"Private Practices\"\n            }[key]]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.section,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: cooperation,\n            onChange: () => setCooperation(!cooperation)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 25\n          }, this), \"Show Cooperations\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.searchButton,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 9\n  }, this);\n};\n\n// Updated styles\n_s(SearchForm, \"0U0cQXMJgy1YGeHoQxJBt+2kiy0=\", false, function () {\n  return [useLocation];\n});\n_c = SearchForm;\nconst styles = {\n  container: {\n    padding: \"20px\",\n    borderRadius: \"8px\",\n    backgroundColor: \"#f5f5f5\",\n    width: \"100%\",\n    maxWidth: \"600px\",\n    margin: \"0 auto\"\n  },\n  section: {\n    marginBottom: \"20px\",\n    padding: \"15px\",\n    backgroundColor: \"white\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n  },\n  inputRow: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginBottom: \"10px\"\n  },\n  input: {\n    flex: 1,\n    padding: \"8px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\"\n  },\n  specialtyGroup: {\n    display: \"flex\",\n    gap: \"15px\",\n    alignItems: \"center\"\n  },\n  locationSource: {\n    display: \"flex\",\n    gap: \"15px\",\n    marginBottom: \"10px\"\n  },\n  coordinateInputs: {\n    display: \"flex\",\n    gap: \"10px\",\n    marginBottom: \"10px\"\n  },\n  radiusContainer: {\n    display: \"flex\",\n    gap: \"10px\",\n    alignItems: \"center\"\n  },\n  providerGroup: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\n    gap: \"10px\"\n  },\n  searchButton: {\n    width: \"100%\",\n    padding: \"12px\",\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\"\n  }\n};\nexport default SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","SearchForm","setGraphData","_s","userLocation","icdCode","setIcdCode","specialty","setSpecialty","onkologen","neurologen","providers","setProviders","clinics","mvz","asv","niedergelasseneAertze","locationSource","setLocationSource","city","setCity","manualLat","setManualLat","manualLon","setManualLon","radius","setRadius","cooperation","setCooperation","trim","handleSearch","e","preventDefault","alert","params","icd_code","clinic","lat","latitude","lon","longitude","response","get","validResults","data","filter","loc","clinic_latitude","clinic_longitude","mvz_latitude","mvz_longitude","asv_latitude","asv_longitude","niedergelassene_latitude","niedergelassene_longitude","length","error","console","style","styles","container","children","onSubmit","form","section","fileName","_jsxFileName","lineNumber","columnNumber","inputRow","type","placeholder","value","onChange","target","input","specialtyGroup","checked","disabled","name","required","coordinateInputs","step","radiusContainer","min","max","providerGroup","Object","entries","map","key","searchButton","_c","padding","borderRadius","backgroundColor","width","maxWidth","margin","marginBottom","boxShadow","display","gap","flex","border","alignItems","gridTemplateColumns","color","cursor","fontSize","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/SearchForm.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useLocation } from \"./LocationContext\"; // ‚úÖ Add this\r\n\r\n// const SearchForm = ({ setGraphData }) => {\r\n//     // ‚úÖ Import context values at the top of the component\r\n//     const { allLocations, selectedLocation, setSelectedLocation, userLocation } = useLocation();\r\n//     // State for search fields\r\n//     const [city, setCity] = useState(\"\");\r\n//     const [icdCode, setIcdCode] = useState(\"\");\r\n//     const [radius, setRadius] = useState(30); // Default 30 km\r\n\r\n//     // State for checkboxes (filters)\r\n//     const [focus, setFocus] = useState({\r\n//         onkologen: false,\r\n//         neurologen: false,\r\n//     });\r\n//     const [providers, setProviders] = useState({\r\n//         clinics: false,\r\n//         mvz: false,\r\n//         asv: false,\r\n//         niedergelasseneAertze: false,\r\n//     });\r\n//     const [cooperation, setCooperation] = useState(false);\r\n\r\n//     // Handle logic to disable Schwerpunkt if ICD is entered\r\n//     // eslint-disable-next-line no-undef\r\n//     useEffect(() => {\r\n//         if (icdCode.trim() !== \"\") {\r\n//             setFocus({ onkologen: false, neurologen: false });\r\n//         }\r\n//     }, [icdCode]);\r\n\r\n//     // üü¢ Handle search form submission\r\n//     const handleSearch = async (e) => {\r\n//         e.preventDefault();\r\n//         console.log(\"üîµ Search Button Clicked\");\r\n \r\n//         try {\r\n//             const params = {\r\n//                 city,\r\n//                 icd_code: icdCode,\r\n//                 radius,\r\n//                 onkologen: focus.onkologen,\r\n//                 neurologen: focus.neurologen,\r\n//                 clinic: providers.clinics,\r\n//                 mvz: providers.mvz,\r\n//                 asv: providers.asv,\r\n//                 cooperation,\r\n//             };\r\n\r\n//             if (userLocation) {\r\n//                 params.lat = userLocation.latitude;\r\n//                 params.lon = userLocation.longitude;\r\n//             }\r\n\r\n//             const response = await axios.get(\"http://127.0.0.1:5000/search\", { params });\r\n//             console.log(\"‚úÖ API Response Received:\", response.data);\r\n    \r\n//             // üõë Filter out invalid locations\r\n//             const validResults = response.data.filter(loc => (loc.clinic_latitude && loc.clinic_longitude) ||\r\n//             (loc.mvz_latitude && loc.mvz_longitude) ||\r\n//             (loc.asv_latitude && loc.asv_longitude) ||  // Fixed: loc.asv.longitude ‚Üí loc.asv_longitude\r\n//             (loc.niedergelassene_latitude && loc.niedergelassene_longitude) ||\r\n//             (loc.neurologe_latitude && loc.neurologe_longitude) ||\r\n//             (loc.onkologe_latitude && loc.onkologe_longitude)\r\n//         );\r\n        \r\n//             if (validResults.length > 0) {\r\n//                 setGraphData(validResults);  // ‚úÖ Only use valid locations\r\n//             } else {\r\n//                 console.warn(\"‚ö†Ô∏è No valid locations in API response!\");\r\n//                 setGraphData([]); // Clear map if no valid results\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå API Error:\", error);\r\n//         }\r\n//     };\r\n    \r\n\r\n//     return (\r\n//         <div style={styles.container}>\r\n//             <form onSubmit={handleSearch} style={styles.form}>\r\n//                 {/* üü¢ FLEX CONTAINER FOR SEARCH FIELDS & GUIDELINE BOX */}\r\n//                 <div style={styles.searchRow}>\r\n                    \r\n//                     {/* üü¢ SEARCH FIELDS (CITY & ICD CODE) */}\r\n//                     <div style={styles.inputContainer}>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             placeholder=\"City\"\r\n//                             value={city}\r\n//                             onChange={(e) => setCity(e.target.value)}\r\n//                             style={styles.input}\r\n//                             // required= {true}\r\n//                             required={!userLocation} // only require city if no user location\r\n//                         />\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             placeholder=\"ICD Code\"\r\n//                             value={icdCode}\r\n//                             onChange={(e) => setIcdCode(e.target.value)}\r\n//                             style={styles.input}\r\n//                         />\r\n//                     </div>\r\n                    \r\n//                     {/* üü¢ GUIDELINE BOX */}\r\n//                     <div style={styles.guideBox}>\r\n//                         <strong>Sucheingaben: Diagnosen, Stadt oder eine der folgenden Optionen</strong>\r\n//                     </div>\r\n//                 </div>\r\n\r\n//                 {/* üü¢ RADIUS INPUT */}\r\n//                 <div style={styles.radiusContainer}>\r\n//                     <label>Umkreis  </label>\r\n//                     <input\r\n//                         type=\"number\"\r\n//                         value={radius}\r\n//                         onChange={(e) => setRadius(e.target.value)}\r\n//                         style={styles.radiusInput}\r\n//                     />\r\n//                     <span>km</span>\r\n//                 </div>\r\n\r\n//                 {/* üü¢ FILTERS (Schwerpunkt, Leistungserbringer & Kooperationen in the same row) */}\r\n//                 <div style={styles.filterRow}>\r\n                    \r\n//                     {/* üü¢ SCHWERPUNKT FILTER */}\r\n//                     <div style={styles.filterBox}>\r\n//                         <h3>Schwerpunkt</h3>\r\n                        \r\n//                         <div>\r\n//                             <label>\r\n//                                 <input\r\n//                                     type=\"checkbox\"\r\n//                                     checked={focus.onkologen}\r\n//                                     onChange={() => setFocus({ onkologen: !focus.onkologen, neurologen: false })}\r\n//                                     disabled={icdCode.trim() !== \"\"}\r\n//                                 />\r\n//                                 Onkologie\r\n//                             </label>\r\n//                         </div>\r\n\r\n//                         {/* Second row (new line) */}\r\n//                         <div style={{ marginTop: \"5px\" }}>\r\n//                             <label>\r\n//                                 <input\r\n//                                     type=\"checkbox\"\r\n//                                     checked={focus.neurologen}\r\n//                                     onChange={() => setFocus({ neurologen: !focus.neurologen, onkologen: false })}\r\n//                                     disabled={icdCode.trim() !== \"\"}\r\n//                                 />\r\n//                                 Neurologie\r\n//                             </label>\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     {/* üü¢ LEISTUNGSERBRINGER FILTER (Same Line) */}\r\n//                     <div style={styles.filterBox}>\r\n//                         <h3>Leistungserbringer</h3>\r\n//                         <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n//                             <label>\r\n//                                 <input type=\"checkbox\" checked={providers.clinics} onChange={() => setProviders({ ...providers, clinics: !providers.clinics })} />\r\n//                                 Kliniken\r\n//                             </label>\r\n//                             <label>\r\n//                                 <input type=\"checkbox\" checked={providers.mvz} onChange={() => setProviders({ ...providers, mvz: !providers.mvz })} />\r\n//                                 MVZ\r\n//                             </label>\r\n//                             <label>\r\n//                                 <input type=\"checkbox\" checked={providers.asv} onChange={() => setProviders({ ...providers, asv: !providers.asv })} />\r\n//                                 ASV\r\n//                             </label>\r\n//                         </div>\r\n\r\n//                         {/* Move Niedergelassene √Ñrzte to a new line */}\r\n//                         <div style={{ marginTop: \"5px\" }}>\r\n//                             <label>\r\n//                                 <input type=\"checkbox\" checked={providers.niedergelasseneAertze} onChange={() => setProviders({ ...providers, niedergelasseneAertze: !providers.niedergelasseneAertze })} />\r\n//                                 Niedergelassene √Ñrzte\r\n//                             </label>\r\n//                         </div>\r\n//                     </div>\r\n\r\n\r\n//                     {/* üü¢ KOOPERATIONEN TOGGLE (Same Row) */}\r\n//                     <div style={styles.filterBox}>\r\n//                         <h3>Kooperationen</h3>\r\n//                         <label>\r\n//                             <input\r\n//                                 type=\"checkbox\"\r\n//                                 checked={cooperation}\r\n//                                 onChange={() => setCooperation(!cooperation)}\r\n//                             />\r\n//                             Kooperationen anzeigen\r\n//                         </label>\r\n//                     </div>\r\n\r\n//                 </div>\r\n\r\n//                 {/* üü¢ SEARCH BUTTON */}\r\n//                 <button type=\"submit\" style={styles.searchButton}>Suche</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n\r\n// // üü¢ CSS STYLES\r\n// const styles = {\r\n//     container: {\r\n//         padding: \"10px\",\r\n//         borderRadius: \"8px\",\r\n//         border: \"2px solid #b3e5fc\",\r\n//         backgroundColor: \"#f9f9f9\",\r\n//         width: \"59%\",\r\n//         height: \"auto\",\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"center\",\r\n//         boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.1)\",\r\n//         overflow: \"auto\",\r\n//         marginBottom: \"5px\",\r\n//     },\r\n//     form: {\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         gap: \"10px\",\r\n//         width: \"100%\",\r\n//     },\r\n//     searchRow: {\r\n//         display: \"flex\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"center\",\r\n//         width: \"100%\",\r\n//     },\r\n//     inputContainer: {\r\n//         display: \"flex\",\r\n//         gap: \"10px\",\r\n//         alignItems: \"center\",\r\n//         flex: \"2\",\r\n//     },\r\n//     input: {\r\n//         fontSize: \"12px\",\r\n//         padding: \"5px\",\r\n//         width: \"100%\",\r\n//     },\r\n//     guideBox: {\r\n//         flex: \"3\",\r\n//         backgroundColor: \"#e3f2fd\",\r\n//         justifyContent: \"space-between\",\r\n//         padding: \"5px\",\r\n//         borderRadius: \"5px\",\r\n//         fontSize: \"14px\",\r\n//         marginleft: \"10px\",\r\n//         marginwidth: \"10px\",\r\n//         boxShadow: \"0px 0px 5px rgba(0, 0, 0, 0.1)\",\r\n//     },\r\n//     filterRow: {\r\n//         display: \"flex\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"flex-start\",\r\n//         gap: \"20px\",\r\n//         width: \"100%\",\r\n//     },\r\n//     filterBox: {\r\n//         flex: 1,\r\n//         backgroundColor: \"#fff\",\r\n//         padding: \"10px\",\r\n//         borderRadius: \"5px\",\r\n//         boxShadow: \"0px 0px 5px rgba(0, 0, 0, 0.1)\",\r\n//         fontSize: \"12px\",\r\n//         width: \"30%\", // Adjusted for three columns\r\n//         minWidth: \"250px\", // Set a minimum width to keep them the same\r\n//         height: \"100px\", // Adjust the height as needed\r\n//         justifyContent: \"space-between\", // Keeps content aligned\r\n//     },\r\n//     searchButton: {\r\n//         padding: \"10px\",\r\n//         backgroundColor: \"#007BFF\",\r\n//         color: \"#fff\",\r\n//         border: \"none\",\r\n//         borderRadius: \"5px\",\r\n//         cursor: \"pointer\",\r\n//         width: \"10%\",\r\n//         fontSize: \"14px\",\r\n//     },\r\n// };\r\n\r\n// export default SearchForm;\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"./LocationContext\";\r\n\r\nconst SearchForm = ({ setGraphData }) => {\r\n    const { userLocation } = useLocation();\r\n    // Medical search parameters\r\n    const [icdCode, setIcdCode] = useState(\"\");\r\n    const [specialty, setSpecialty] = useState({\r\n        onkologen: false,\r\n        neurologen: false,\r\n    });\r\n    \r\n    // Provider types (multiple allowed)\r\n    const [providers, setProviders] = useState({\r\n        clinics: false,\r\n        mvz: false,\r\n        asv: false,\r\n        niedergelasseneAertze: false,\r\n    });\r\n    \r\n    // Location handling\r\n    const [locationSource, setLocationSource] = useState(\"user\"); // 'user', 'city', 'manual'\r\n    const [city, setCity] = useState(\"\");\r\n    const [manualLat, setManualLat] = useState(\"\");\r\n    const [manualLon, setManualLon] = useState(\"\");\r\n    const [radius, setRadius] = useState(30);\r\n    \r\n    // Cooperation filter\r\n    const [cooperation, setCooperation] = useState(false);\r\n\r\n    // Disable specialties when ICD code exists\r\n    useEffect(() => {\r\n        if (icdCode.trim() !== \"\") {\r\n            setSpecialty({ onkologen: false, neurologen: false });\r\n        }\r\n    }, [icdCode]);\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Validate location inputs\r\n        if (locationSource === \"city\" && !city.trim()) {\r\n            alert(\"Please enter a city\");\r\n            return;\r\n        }\r\n        \r\n        if (locationSource === \"manual\" && (!manualLat || !manualLon)) {\r\n            alert(\"Please enter valid coordinates\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const params = {\r\n                icd_code: icdCode,\r\n                radius,\r\n                onkologen: specialty.onkologen,\r\n                neurologen: specialty.neurologen,\r\n                clinic: providers.clinics,\r\n                mvz: providers.mvz,\r\n                asv: providers.asv,\r\n                niedergelasseneAertze: providers.niedergelasseneAertze,\r\n                cooperation,\r\n            };\r\n\r\n            // Handle location parameters\r\n            switch (locationSource) {\r\n                case \"user\":\r\n                    if (userLocation) {\r\n                        params.lat = userLocation.latitude;\r\n                        params.lon = userLocation.longitude;\r\n                    }\r\n                    break;\r\n                case \"city\":\r\n                    params.city = city;\r\n                    break;\r\n                case \"manual\":\r\n                    params.lat = manualLat;\r\n                    params.lon = manualLon;\r\n                    break;\r\n            }\r\n\r\n            const response = await axios.get(\"http://127.0.0.1:5000/search\", { params });\r\n            \r\n            // Filter and process results\r\n            const validResults = response.data.filter(loc => (\r\n                (loc.clinic_latitude && loc.clinic_longitude) ||\r\n                (loc.mvz_latitude && loc.mvz_longitude) ||\r\n                (loc.asv_latitude && loc.asv_longitude) ||\r\n                (loc.niedergelassene_latitude && loc.niedergelassene_longitude)\r\n            ));\r\n\r\n            setGraphData(validResults.length > 0 ? validResults : []);\r\n            \r\n        } catch (error) {\r\n            console.error(\"Search error:\", error);\r\n            setGraphData([]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <form onSubmit={handleSearch} style={styles.form}>\r\n                {/* Medical Search Section */}\r\n                <div style={styles.section}>\r\n                    <h3>Medical Search</h3>\r\n                    <div style={styles.inputRow}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"ICD Code\"\r\n                            value={icdCode}\r\n                            onChange={(e) => setIcdCode(e.target.value)}\r\n                            style={styles.input}\r\n                        />\r\n                        <div style={styles.specialtyGroup}>\r\n                            <label>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={specialty.onkologen}\r\n                                    onChange={() => setSpecialty({\r\n                                        onkologen: !specialty.onkologen,\r\n                                        neurologen: false\r\n                                    })}\r\n                                    disabled={!!icdCode.trim()}\r\n                                />\r\n                                Oncology\r\n                            </label>\r\n                            <label>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={specialty.neurologen}\r\n                                    onChange={() => setSpecialty({\r\n                                        neurologen: !specialty.neurologen,\r\n                                        onkologen: false\r\n                                    })}\r\n                                    disabled={!!icdCode.trim()}\r\n                                />\r\n                                Neurology\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Location Section */}\r\n                <div style={styles.section}>\r\n                    <h3>Location Search</h3>\r\n                    <div style={styles.locationSource}>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"locationSource\"\r\n                                value=\"user\"\r\n                                checked={locationSource === \"user\"}\r\n                                onChange={() => setLocationSource(\"user\")}\r\n                            />\r\n                            Use My Location\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"locationSource\"\r\n                                value=\"city\"\r\n                                checked={locationSource === \"city\"}\r\n                                onChange={() => setLocationSource(\"city\")}\r\n                            />\r\n                            Search by City\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"locationSource\"\r\n                                value=\"manual\"\r\n                                checked={locationSource === \"manual\"}\r\n                                onChange={() => setLocationSource(\"manual\")}\r\n                            />\r\n                            Enter Coordinates\r\n                        </label>\r\n                    </div>\r\n\r\n                    {locationSource === \"city\" && (\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter city name\"\r\n                            value={city}\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                            style={styles.input}\r\n                            required\r\n                        />\r\n                    )}\r\n\r\n                    {locationSource === \"manual\" && (\r\n                        <div style={styles.coordinateInputs}>\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Latitude\"\r\n                                value={manualLat}\r\n                                onChange={(e) => setManualLat(e.target.value)}\r\n                                step=\"any\"\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Longitude\"\r\n                                value={manualLon}\r\n                                onChange={(e) => setManualLon(e.target.value)}\r\n                                step=\"any\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                    <div style={styles.radiusContainer}>\r\n                        <label>Search Radius (km):</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={radius}\r\n                            onChange={(e) => setRadius(e.target.value)}\r\n                            min=\"1\"\r\n                            max=\"100\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Provider Types */}\r\n                <div style={styles.section}>\r\n                    <h3>Provider Types</h3>\r\n                    <div style={styles.providerGroup}>\r\n                        {Object.entries(providers).map(([key, value]) => (\r\n                            <label key={key}>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={value}\r\n                                    onChange={() => setProviders({\r\n                                        ...providers,\r\n                                        [key]: !value\r\n                                    })}\r\n                                />\r\n                                {{\r\n                                    clinics: \"Clinics\",\r\n                                    mvz: \"MVZ\",\r\n                                    asv: \"ASV\",\r\n                                    niedergelasseneAertze: \"Private Practices\"\r\n                                }[key]}\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Cooperation Filter */}\r\n                <div style={styles.section}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={cooperation}\r\n                            onChange={() => setCooperation(!cooperation)}\r\n                        />\r\n                        Show Cooperations\r\n                    </label>\r\n                </div>\r\n\r\n                <button type=\"submit\" style={styles.searchButton}>Search</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Updated styles\r\nconst styles = {\r\n    container: {\r\n        padding: \"20px\",\r\n        borderRadius: \"8px\",\r\n        backgroundColor: \"#f5f5f5\",\r\n        width: \"100%\",\r\n        maxWidth: \"600px\",\r\n        margin: \"0 auto\",\r\n    },\r\n    section: {\r\n        marginBottom: \"20px\",\r\n        padding: \"15px\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"8px\",\r\n        boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n    },\r\n    inputRow: {\r\n        display: \"flex\",\r\n        gap: \"10px\",\r\n        marginBottom: \"10px\",\r\n    },\r\n    input: {\r\n        flex: 1,\r\n        padding: \"8px\",\r\n        border: \"1px solid #ddd\",\r\n        borderRadius: \"4px\",\r\n    },\r\n    specialtyGroup: {\r\n        display: \"flex\",\r\n        gap: \"15px\",\r\n        alignItems: \"center\",\r\n    },\r\n    locationSource: {\r\n        display: \"flex\",\r\n        gap: \"15px\",\r\n        marginBottom: \"10px\",\r\n    },\r\n    coordinateInputs: {\r\n        display: \"flex\",\r\n        gap: \"10px\",\r\n        marginBottom: \"10px\",\r\n    },\r\n    radiusContainer: {\r\n        display: \"flex\",\r\n        gap: \"10px\",\r\n        alignItems: \"center\",\r\n    },\r\n    providerGroup: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(auto-fit, minmax(120px, 1fr))\",\r\n        gap: \"10px\",\r\n    },\r\n    searchButton: {\r\n        width: \"100%\",\r\n        padding: \"12px\",\r\n        backgroundColor: \"#007bff\",\r\n        color: \"white\",\r\n        border: \"none\",\r\n        borderRadius: \"4px\",\r\n        cursor: \"pointer\",\r\n        fontSize: \"16px\",\r\n    }\r\n};\r\n\r\nexport default SearchForm;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}