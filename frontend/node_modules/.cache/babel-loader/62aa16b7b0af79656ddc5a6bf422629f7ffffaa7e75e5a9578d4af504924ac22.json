{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\Analytics.js\",\n  _s = $RefreshSig$();\n// // export default Analytics;\n// import React, { useState, useEffect, useMemo, useCallback } from \"react\";\n// import { useLocation } from \"./LocationContext\";\n// import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\n\n// const LINE_COLORS = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\n\n// const styles = {\n//   scrollWrapper: {\n//     width: \"35%\",\n//     position: \"absolute\",\n//     right: \"10px\",\n//     top: \"130px\",\n//     bottom: \"5px\",\n//     height: \"100%\",\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     gap: \"10px\",\n//     padding: \"10px\",\n//     fontSize: \"12px\",\n//     fontWeight: \"600\",\n//     boxSizing: \"border-box\"\n//   },\n\n//   scrollSection: (percentage) => ({\n//     height: `${percentage}%`,\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     overflow: \"hidden\"\n//   }),\n\n//   scrollSectionContent: {\n//     flex: 1,\n//     overflowY: \"auto\",\n//     backgroundColor: \"#F0F1F1\",\n//     border: \"2px solid #b3e5fc\",\n//     padding: \"10px\",\n//     borderRadius: \"8px\",\n//     boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\n//   },\n\n//   title: {\n//     fontSize: \"16px\",\n//     marginBottom: \"4px\",\n//     fontWeight: \"600\",\n//     padding: \"2px 6px\",\n//     borderRadius: \"2px\"\n//   },\n\n//   list: {\n//     listStyleType: \"none\",\n//     padding: 0,\n//     margin: 0\n//   },\n\n//   listItem: {\n//     marginBottom: \"8px\",\n//     padding: \"8px\",\n//     borderBottom: \"1px solid #ddd\"\n//   },\n\n//   bold: { fontWeight: \"600\" },\n\n//   noData: {\n//     fontStyle: \"italic\",\n//     color: \"#999\"\n//   },\n\n//   colorDot: {\n//     display: \"inline-block\",\n//     width: \"12px\",\n//     height: \"12px\",\n//     borderRadius: \"50%\",\n//     marginRight: \"5px\"\n//   },\n\n//   calculatingText: {\n//     color: \"#666\",\n//     fontStyle: \"italic\"\n//   }\n// };\n\n// // Haversine Formula to calculate distances\n// const haversineDistance = (lat1, lon1, lat2, lon2) => {\n//     const toRad = (value) => (value * Math.PI) / 180;\n\n//     const R = 6371; // Radius of Earth in kilometers\n//     const dLat = toRad(lat2 - lat1);\n//     const dLon = toRad(lon2 - lon1);\n\n//     const a =\n//       Math.sin(dLat / 2) ** 2 +\n//       Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n\n//     const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n//     return (R * c).toFixed(2);\n//   };\n// const Analytics = React.memo(() => {\n//   const { allLocations, selectedLocation } = useLocation();\n//   const [distances, setDistances] = useState({});\n\n//   const originLocation = useMemo(() => {\n//     return allLocations.find(loc =>\n//       loc.clinic_name === \"Your Location\" || loc.clinic_name === \"Zentrum (Umkreis)\"\n//     );\n//   }, [allLocations]);\n\n//   const getProviderKey = (type, name, address) => `${type}-${(name || '').trim()}-${(address || '').trim()}`;\n\n//   const getProviderDetails = (provider) => {\n//     const type = provider.clinic_name ? \"clinic\" :\n//       provider.mvz_name ? \"mvz\" :\n//       provider.asv_name ? \"asv\" :\n//       provider.niedergelassene_name ? \"niedergelassene\" :\n//       provider.neurologe_name ? \"neurologe\" :\n//       provider.onkologe_name ? \"onkologe\" : null;\n\n//     const name = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name || provider.neurologe_name || provider.onkologe_name;\n//     const address = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || provider.neurologe_address || provider.onkologe_address;\n//     const city = provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.neurologe_city || provider.onkologe_city;\n\n//     const lat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude || provider.neurologe_latitude || provider.onkologe_latitude;\n//     const lon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude || provider.neurologe_longitude || provider.onkologe_longitude;\n\n//     return { type, name, address, city, lat, lon };\n//   };\n\n//   const filteredLocations = useMemo(() => allLocations.filter(p => p.clinic_name !== \"Your Location\" && p.clinic_name !== \"Zentrum (Umkreis)\"), [allLocations]);\n\n//   const renderSelectedLocationInfo = () => {\n//     const details = selectedLocation ? getProviderDetails(selectedLocation) : null;\n//     if (!details) return <p style={styles.noData}>Keine Einrichtung ausgewählt.</p>;\n//     const key = getProviderKey(details.type, details.name, details.address);\n//     return (\n//       <>\n//         <p><strong>Name:</strong> {details.name}</p>\n//         <p><strong>Adresse:</strong> {details.address}</p>\n//         <p><strong>Stadt:</strong> {details.city}</p>\n//         <p><strong>Beste Route:</strong> {distances[key] ? `${distances[key]} km` : \"Berechne...\"}</p>\n//       </>\n//     );\n//   };\n\n//   const renderProviderList = () => (\n//     filteredLocations.length === 0 ? <p style={styles.noData}>Keine Daten verfügbar.</p> : (\n//       <ul style={styles.list}>\n//         {filteredLocations.map((provider, index) => {\n//           const { type, name, address, city } = getProviderDetails(provider);\n//           const key = getProviderKey(type, name, address);\n//           return (\n//             <li key={index} style={styles.listItem}>\n//               <span style={{ ...styles.colorDot, backgroundColor: LINE_COLORS[index % LINE_COLORS.length] }} />\n//               <strong>{name}</strong><br />\n//               {address && <>Adresse: {address}<br /></>}\n//               {city && <>Stadt: {city}<br /></>}\n//               Beste Route: <span style={styles.bold}>{distances[key] || \"Berechne...\"} km</span>\n//             </li>\n//           );\n//         })}\n//       </ul>\n//     )\n//   );\n\n//   const mockICDData = [\n//     { icd: \"D27\", count: 120 },\n//     { icd: \"C50\", count: 85 },\n//     { icd: \"G40\", count: 42 },\n//     { icd: \"I10\", count: 60 },\n//     { icd: \"C34\", count: 30 }\n//   ];\n\n//   return (\n//     <div style={styles.scrollWrapper}>\n//       <div style={styles.scrollSection(20)}>\n//         <h3 style={styles.title}>Informationen zur ausgewählten Einrichtung</h3>\n//         <div style={styles.scrollSectionContent}>{renderSelectedLocationInfo()}</div>\n//       </div>\n\n//       <div style={styles.scrollSection(30)}>\n//         <h3 style={styles.title}>Leistungserbringer Informationen</h3>\n//         <div style={styles.scrollSectionContent}>{renderProviderList()}</div>\n//       </div>\n\n//       <div style={styles.scrollSection(45)}>\n//         <h3 style={styles.title}>Analytics Dashboard</h3>\n//         <div style={styles.scrollSectionContent}>\n//           <div style={{ marginBottom: \"20px\" }}>\n//             <h4>Verteilung der ICD-Fälle</h4>\n//             <p>Zeigt an, wie viele Fälle (Fallzahlen) mit jedem ICD-Code verbunden sind.</p>\n//             <p>Darstellung als Balkendiagramm nach ICD-Code.</p>\n//             <ResponsiveContainer width=\"100%\" height={200}>\n//               <BarChart data={mockICDData}>\n//                 <XAxis dataKey=\"icd\" />\n//                 <YAxis />\n//                 <Tooltip />\n//                 <Bar dataKey=\"count\" fill=\"#8884d8\" />\n//               </BarChart>\n//             </ResponsiveContainer>\n//           </div>\n//           <hr />\n//           <div style={{ margin: \"20px 0\" }}>\n//             <h4>Erreichbarkeit</h4>\n//             <p>Berechnet die beste Route (Straßenentfernung) zwischen dem Standort des Nutzers und jedem Anbieter.</p>\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\n//           </div>\n//           <hr />\n//           <div style={{ margin: \"20px 0\" }}>\n//             <h4>Spezialisierungsgrad</h4>\n//             <p>Ermittelt Zentren mit einer hohen Anzahl von Fällen in einem bestimmten ICD.</p>\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\n//           </div>\n//           <hr />\n//           <div style={{ margin: \"20px 0\" }}>\n//             <h4>Kooperationsnetzwerke</h4>\n//             <p>Visualisiert Kooperationen zwischen Kliniken, MVZs und ASVs.</p>\n//             <p>Basierend auf KOOPERIERT_MIT-Beziehungen.</p>\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\n//           </div>\n//           <hr />\n//           <div style={{ marginTop: \"20px\" }}>\n//             <h4>Empfohlene Behandlungsorte</h4>\n//             <p>Schlägt den besten Behandlungsort vor, basierend auf:</p>\n//             <ul>\n//               <li>Entfernung</li>\n//               <li>ICD-Spezialisierung</li>\n//               <li>Konnektivität der Kooperation</li>\n//             </ul>\n//             <p><strong>KI-basiertes Ranking:</strong> z.B. „Top 3 am nächsten + beste ICD-Übereinstimmung“</p>\n//             <p style={styles.noData}>Noch keine Empfehlungen verfügbar.</p>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// });\n\n// export default Analytics;\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useLocation } from \"./LocationContext\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LINE_COLORS = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\nconst styles = {\n  scrollWrapper: {\n    width: \"35%\",\n    position: \"absolute\",\n    right: \"10px\",\n    top: \"130px\",\n    bottom: \"5px\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\",\n    padding: \"10px\",\n    fontSize: \"12px\",\n    fontWeight: \"600\",\n    boxSizing: \"border-box\"\n  },\n  scrollSection: percentage => ({\n    height: `${percentage}%`,\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\"\n  }),\n  scrollSectionContent: {\n    flex: 1,\n    overflowY: \"auto\",\n    backgroundColor: \"#F0F1F1\",\n    border: \"2px solid #b3e5fc\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\n  },\n  title: {\n    fontSize: \"16px\",\n    marginBottom: \"4px\",\n    fontWeight: \"600\",\n    padding: \"2px 6px\",\n    borderRadius: \"2px\"\n  },\n  list: {\n    listStyleType: \"none\",\n    padding: 0,\n    margin: 0\n  },\n  listItem: {\n    marginBottom: \"8px\",\n    padding: \"8px\",\n    borderBottom: \"1px solid #ddd\"\n  },\n  bold: {\n    fontWeight: \"600\"\n  },\n  noData: {\n    fontStyle: \"italic\",\n    color: \"#999\"\n  },\n  colorDot: {\n    display: \"inline-block\",\n    width: \"12px\",\n    height: \"12px\",\n    borderRadius: \"50%\",\n    marginRight: \"5px\"\n  },\n  calculatingText: {\n    color: \"#666\",\n    fontStyle: \"italic\"\n  }\n};\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\n  if (!startLat || !startLon || !endLat || !endLon) {\n    console.warn(\"Missing coordinates for distance calculation!\", {\n      startLat,\n      startLon,\n      endLat,\n      endLon\n    });\n    return \"N/A\";\n  }\n  const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.routes && data.routes.length > 0) {\n      return (data.routes[0].distance / 1000).toFixed(2);\n    } else {\n      console.warn(\"No valid route found for coordinates:\", {\n        startLat,\n        startLon,\n        endLat,\n        endLon\n      });\n      return \"N/A\";\n    }\n  } catch (error) {\n    console.error(\"Error fetching road distance:\", error);\n    return \"N/A\";\n  }\n};\nconst Analytics = () => {\n  _s();\n  const {\n    allLocations,\n    selectedLocation\n  } = useLocation();\n  const [distances, setDistances] = useState({});\n\n  // Extract Unique ICD Information\n  const uniqueICDInfo = useMemo(() => {\n    return allLocations.length > 0 ? {\n      icd_name: allLocations[0].icd_name || \"N/A\",\n      icd_fallzahl: allLocations[0].icd_fallzahl || \"N/A\"\n    } : null;\n  }, [allLocations]);\n\n  // Find User's Location\n  const userLocation = useMemo(() => allLocations.find(loc => loc.clinic_name === \"Your Location\"), [allLocations]);\n\n  // Get provider details helper function\n  const getProviderDetails = provider => {\n    const type = provider.clinic_name ? \"clinic\" : provider.mvz_name ? \"mvz\" : provider.asv_name ? \"asv\" : provider.niedergelassene_name ? \"niedergelassene\" : null;\n    const name = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\n    const address = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address;\n    const city = provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city;\n    const lat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude;\n    const lon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude;\n    return {\n      type,\n      name,\n      address,\n      city,\n      lat,\n      lon\n    };\n  };\n\n  // Generate unique key for each provider\n  const getProviderKey = (type, name, address) => `${type}-${(name || '').trim()}-${(address || '').trim()}`;\n\n  // Filter out user location\n  const filteredLocations = useMemo(() => allLocations.filter(loc => loc.clinic_name !== \"Your Location\"), [allLocations]);\n\n  // Fetch distances for all providers\n  useEffect(() => {\n    const fetchDistances = async () => {\n      if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\n        console.warn(\"No valid user location found!\");\n        return;\n      }\n      const newDistances = {};\n      for (const provider of filteredLocations) {\n        const {\n          type,\n          name,\n          address,\n          lat,\n          lon\n        } = getProviderDetails(provider);\n        if (!type || !name || !lat || !lon) {\n          console.warn(`Skipping provider with missing data: ${name}`);\n          continue;\n        }\n        const roadDistance = await getRoadDistance(userLocation.latitude, userLocation.longitude, lat, lon);\n        const providerKey = getProviderKey(type, name, address);\n        newDistances[providerKey] = roadDistance;\n      }\n      setDistances(newDistances);\n    };\n    fetchDistances();\n  }, [userLocation, filteredLocations]);\n\n  // Render selected location info\n  const renderSelectedLocationInfo = () => {\n    if (!selectedLocation) return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.noData,\n      children: \"Keine Einrichtung ausgew\\xE4hlt.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 35\n    }, this);\n    const {\n      type,\n      name,\n      address,\n      city\n    } = getProviderDetails(selectedLocation);\n    const key = getProviderKey(type, name, address);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 12\n        }, this), \" \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Adresse:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 12\n        }, this), \" \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Stadt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 12\n        }, this), \" \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Beste Route:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 12\n        }, this), \" \", distances[key] ? `${distances[key]} km` : \"Berechne...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  // Render ICD info\n  const renderICDInfo = () => uniqueICDInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Kooperation mit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 12\n      }, this), \" \", uniqueICDInfo.icd_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Fallzahl:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 12\n      }, this), \" \", uniqueICDInfo.icd_fallzahl]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    style: styles.noData,\n    children: \"Keine Kooperationsinformationen verf\\xFCgbar.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 439,\n    columnNumber: 9\n  }, this);\n\n  // Render provider list\n  const renderProviderList = () => filteredLocations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n    style: styles.noData,\n    children: \"Keine Leistungserbringer verf\\xFCgbar.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 445,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: styles.list,\n    children: filteredLocations.map((provider, index) => {\n      const {\n        type,\n        name,\n        address,\n        city\n      } = getProviderDetails(provider);\n      if (!type || !name) return null;\n      const providerKey = getProviderKey(type, name, address);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.listItem,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            ...styles.colorDot,\n            backgroundColor: LINE_COLORS[index % LINE_COLORS.length]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 38\n        }, this), city && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Stadt: \", city, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true), address && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Adresse: \", address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true), provider.clinic_number_of_beds && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Anzahl von Betten: \", provider.clinic_number_of_beds, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 103\n          }, this)]\n        }, void 0, true), provider.cooperation && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Kooperation: \", provider.cooperation, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 77\n          }, this)]\n        }, void 0, true), provider.clinic_chefarzt && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Chefarzt: \", provider.clinic_chefarzt, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true), \"Beste Route: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.bold,\n          children: [distances[providerKey] || \"Berechne...\", \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 28\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 7\n  }, this);\n\n  // Mock data for ICD chart\n  const mockICDData = [{\n    icd: \"D27\",\n    count: 120\n  }, {\n    icd: \"C50\",\n    count: 85\n  }, {\n    icd: \"G40\",\n    count: 42\n  }, {\n    icd: \"I10\",\n    count: 60\n  }, {\n    icd: \"C34\",\n    count: 30\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.scrollWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.scrollSection(15),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Informationen zur ausgew\\xE4hlten Einrichtung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.scrollSectionContent,\n        children: renderSelectedLocationInfo()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.scrollSection(25),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Leistungserbringer Informationen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.scrollSectionContent,\n        children: renderProviderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.scrollSection(55),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.scrollSectionContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: \"8px\"\n            },\n            children: \"Verteilung der ICD-F\\xE4lle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: \"12px\",\n              fontSize: \"12px\"\n            },\n            children: \"Zeigt an, wie viele F\\xE4lle (Fallzahlen) mit jedem ICD-Code verbunden sind.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: \"200px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: mockICDData,\n                children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"icd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  contentStyle: {\n                    fontSize: \"12px\",\n                    borderRadius: \"4px\",\n                    padding: \"6px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"count\",\n                  fill: \"#8884d8\",\n                  radius: [4, 4, 0, 0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            borderColor: \"#ddd\",\n            margin: \"15px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"15px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: \"8px\"\n            },\n            children: \"Erreichbarkeit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: \"12px\",\n              fontSize: \"12px\"\n            },\n            children: \"Berechnet die beste Route (Stra\\xDFenentfernung) zwischen dem Standort des Nutzers und jedem Anbieter.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this), Object.keys(distances).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"#f8f9fa\",\n              padding: \"10px\",\n              borderRadius: \"4px\",\n              borderLeft: \"4px solid #b3e5fc\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0,\n                fontSize: \"12px\"\n              },\n              children: [\"Entfernungen zu \", Object.keys(distances).length, \" Anbietern wurden berechnet.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.noData,\n            children: \"Daten werden geladen...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            borderColor: \"#ddd\",\n            margin: \"15px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"15px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: \"8px\"\n            },\n            children: \"Spezialisierungsgrad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: \"12px\",\n              fontSize: \"12px\"\n            },\n            children: \"Zentren mit hoher Fallzahl in spezifischen ICD-Bereichen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.noData,\n            children: \"Analyse in Bearbeitung...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            borderColor: \"#ddd\",\n            margin: \"15px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"15px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: \"8px\"\n            },\n            children: \"Kooperationsnetzwerke (Kooperationsnetzwerke)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: \"12px\",\n              fontSize: \"12px\"\n            },\n            children: \"Zentren mit hoher Fallzahl in spezifischen ICD-Bereichen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.noData,\n            children: \"Analyse in Bearbeitung...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            borderColor: \"#ddd\",\n            margin: \"15px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"15px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: \"8px\"\n            },\n            children: \"Empfohlene Behandlungsorte (Smart Recommendations)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: \"12px\",\n              fontSize: \"12px\"\n            },\n            children: \"Zentren mit hoher Fallzahl in spezifischen ICD-Bereichen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.noData,\n            children: \"Analyse in Bearbeitung...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 481,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"V4aJJlhoWQqNhBUDauoBJ78rKNg=\", false, function () {\n  return [useLocation];\n});\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useLocation","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","LINE_COLORS","styles","scrollWrapper","width","position","right","top","bottom","height","display","flexDirection","gap","padding","fontSize","fontWeight","boxSizing","scrollSection","percentage","overflow","scrollSectionContent","flex","overflowY","backgroundColor","border","borderRadius","boxShadow","title","marginBottom","list","listStyleType","margin","listItem","borderBottom","bold","noData","fontStyle","color","colorDot","marginRight","calculatingText","getRoadDistance","startLat","startLon","endLat","endLon","console","warn","url","response","fetch","data","json","routes","length","distance","toFixed","error","Analytics","_s","allLocations","selectedLocation","distances","setDistances","uniqueICDInfo","icd_name","icd_fallzahl","userLocation","find","loc","clinic_name","getProviderDetails","provider","type","mvz_name","asv_name","niedergelassene_name","name","address","clinic_address","mvz_address","asv_address","niedergelassene_address","city","clinic_city","mvz_city","asv_city","niedergelassene_city","lat","clinic_latitude","mvz_latitude","asv_latitude","niedergelassene_latitude","lon","clinic_longitude","mvz_longitude","asv_longitude","niedergelassene_longitude","getProviderKey","trim","filteredLocations","filter","fetchDistances","latitude","longitude","newDistances","roadDistance","providerKey","renderSelectedLocationInfo","style","children","fileName","_jsxFileName","lineNumber","columnNumber","key","renderICDInfo","renderProviderList","map","index","clinic_number_of_beds","cooperation","clinic_chefarzt","mockICDData","icd","count","dataKey","contentStyle","fill","radius","borderColor","Object","keys","borderLeft","_c","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/Analytics.js"],"sourcesContent":["// // export default Analytics;\r\n// import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\n// import { useLocation } from \"./LocationContext\";\r\n// import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\n// const LINE_COLORS = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\n// const styles = {\r\n//   scrollWrapper: {\r\n//     width: \"35%\",\r\n//     position: \"absolute\",\r\n//     right: \"10px\",\r\n//     top: \"130px\",\r\n//     bottom: \"5px\",\r\n//     height: \"100%\",\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     gap: \"10px\",\r\n//     padding: \"10px\",\r\n//     fontSize: \"12px\",\r\n//     fontWeight: \"600\",\r\n//     boxSizing: \"border-box\"\r\n//   },\r\n\r\n//   scrollSection: (percentage) => ({\r\n//     height: `${percentage}%`,\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     overflow: \"hidden\"\r\n//   }),\r\n\r\n//   scrollSectionContent: {\r\n//     flex: 1,\r\n//     overflowY: \"auto\",\r\n//     backgroundColor: \"#F0F1F1\",\r\n//     border: \"2px solid #b3e5fc\",\r\n//     padding: \"10px\",\r\n//     borderRadius: \"8px\",\r\n//     boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\r\n//   },\r\n\r\n//   title: {\r\n//     fontSize: \"16px\",\r\n//     marginBottom: \"4px\",\r\n//     fontWeight: \"600\",\r\n//     padding: \"2px 6px\",\r\n//     borderRadius: \"2px\"\r\n//   },\r\n\r\n//   list: {\r\n//     listStyleType: \"none\",\r\n//     padding: 0,\r\n//     margin: 0\r\n//   },\r\n\r\n//   listItem: {\r\n//     marginBottom: \"8px\",\r\n//     padding: \"8px\",\r\n//     borderBottom: \"1px solid #ddd\"\r\n//   },\r\n\r\n//   bold: { fontWeight: \"600\" },\r\n\r\n//   noData: {\r\n//     fontStyle: \"italic\",\r\n//     color: \"#999\"\r\n//   },\r\n\r\n//   colorDot: {\r\n//     display: \"inline-block\",\r\n//     width: \"12px\",\r\n//     height: \"12px\",\r\n//     borderRadius: \"50%\",\r\n//     marginRight: \"5px\"\r\n//   },\r\n\r\n//   calculatingText: {\r\n//     color: \"#666\",\r\n//     fontStyle: \"italic\"\r\n//   }\r\n// };\r\n\r\n// // Haversine Formula to calculate distances\r\n// const haversineDistance = (lat1, lon1, lat2, lon2) => {\r\n//     const toRad = (value) => (value * Math.PI) / 180;\r\n  \r\n//     const R = 6371; // Radius of Earth in kilometers\r\n//     const dLat = toRad(lat2 - lat1);\r\n//     const dLon = toRad(lon2 - lon1);\r\n  \r\n//     const a =\r\n//       Math.sin(dLat / 2) ** 2 +\r\n//       Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\r\n  \r\n//     const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n//     return (R * c).toFixed(2);\r\n//   };\r\n// const Analytics = React.memo(() => {\r\n//   const { allLocations, selectedLocation } = useLocation();\r\n//   const [distances, setDistances] = useState({});\r\n  \r\n//   const originLocation = useMemo(() => {\r\n//     return allLocations.find(loc =>\r\n//       loc.clinic_name === \"Your Location\" || loc.clinic_name === \"Zentrum (Umkreis)\"\r\n//     );\r\n//   }, [allLocations]);\r\n\r\n//   const getProviderKey = (type, name, address) => `${type}-${(name || '').trim()}-${(address || '').trim()}`;\r\n\r\n//   const getProviderDetails = (provider) => {\r\n//     const type = provider.clinic_name ? \"clinic\" :\r\n//       provider.mvz_name ? \"mvz\" :\r\n//       provider.asv_name ? \"asv\" :\r\n//       provider.niedergelassene_name ? \"niedergelassene\" :\r\n//       provider.neurologe_name ? \"neurologe\" :\r\n//       provider.onkologe_name ? \"onkologe\" : null;\r\n\r\n//     const name = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name || provider.neurologe_name || provider.onkologe_name;\r\n//     const address = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || provider.neurologe_address || provider.onkologe_address;\r\n//     const city = provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || provider.neurologe_city || provider.onkologe_city;\r\n\r\n//     const lat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude || provider.neurologe_latitude || provider.onkologe_latitude;\r\n//     const lon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude || provider.neurologe_longitude || provider.onkologe_longitude;\r\n\r\n//     return { type, name, address, city, lat, lon };\r\n//   };\r\n\r\n//   const filteredLocations = useMemo(() => allLocations.filter(p => p.clinic_name !== \"Your Location\" && p.clinic_name !== \"Zentrum (Umkreis)\"), [allLocations]);\r\n\r\n\r\n//   const renderSelectedLocationInfo = () => {\r\n//     const details = selectedLocation ? getProviderDetails(selectedLocation) : null;\r\n//     if (!details) return <p style={styles.noData}>Keine Einrichtung ausgewählt.</p>;\r\n//     const key = getProviderKey(details.type, details.name, details.address);\r\n//     return (\r\n//       <>\r\n//         <p><strong>Name:</strong> {details.name}</p>\r\n//         <p><strong>Adresse:</strong> {details.address}</p>\r\n//         <p><strong>Stadt:</strong> {details.city}</p>\r\n//         <p><strong>Beste Route:</strong> {distances[key] ? `${distances[key]} km` : \"Berechne...\"}</p>\r\n//       </>\r\n//     );\r\n//   };\r\n\r\n//   const renderProviderList = () => (\r\n//     filteredLocations.length === 0 ? <p style={styles.noData}>Keine Daten verfügbar.</p> : (\r\n//       <ul style={styles.list}>\r\n//         {filteredLocations.map((provider, index) => {\r\n//           const { type, name, address, city } = getProviderDetails(provider);\r\n//           const key = getProviderKey(type, name, address);\r\n//           return (\r\n//             <li key={index} style={styles.listItem}>\r\n//               <span style={{ ...styles.colorDot, backgroundColor: LINE_COLORS[index % LINE_COLORS.length] }} />\r\n//               <strong>{name}</strong><br />\r\n//               {address && <>Adresse: {address}<br /></>}\r\n//               {city && <>Stadt: {city}<br /></>}\r\n//               Beste Route: <span style={styles.bold}>{distances[key] || \"Berechne...\"} km</span>\r\n//             </li>\r\n//           );\r\n//         })}\r\n//       </ul>\r\n//     )\r\n//   );\r\n\r\n//   const mockICDData = [\r\n//     { icd: \"D27\", count: 120 },\r\n//     { icd: \"C50\", count: 85 },\r\n//     { icd: \"G40\", count: 42 },\r\n//     { icd: \"I10\", count: 60 },\r\n//     { icd: \"C34\", count: 30 }\r\n//   ];\r\n\r\n//   return (\r\n//     <div style={styles.scrollWrapper}>\r\n//       <div style={styles.scrollSection(20)}>\r\n//         <h3 style={styles.title}>Informationen zur ausgewählten Einrichtung</h3>\r\n//         <div style={styles.scrollSectionContent}>{renderSelectedLocationInfo()}</div>\r\n//       </div>\r\n\r\n//       <div style={styles.scrollSection(30)}>\r\n//         <h3 style={styles.title}>Leistungserbringer Informationen</h3>\r\n//         <div style={styles.scrollSectionContent}>{renderProviderList()}</div>\r\n//       </div>\r\n\r\n//       <div style={styles.scrollSection(45)}>\r\n//         <h3 style={styles.title}>Analytics Dashboard</h3>\r\n//         <div style={styles.scrollSectionContent}>\r\n//           <div style={{ marginBottom: \"20px\" }}>\r\n//             <h4>Verteilung der ICD-Fälle</h4>\r\n//             <p>Zeigt an, wie viele Fälle (Fallzahlen) mit jedem ICD-Code verbunden sind.</p>\r\n//             <p>Darstellung als Balkendiagramm nach ICD-Code.</p>\r\n//             <ResponsiveContainer width=\"100%\" height={200}>\r\n//               <BarChart data={mockICDData}>\r\n//                 <XAxis dataKey=\"icd\" />\r\n//                 <YAxis />\r\n//                 <Tooltip />\r\n//                 <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n//               </BarChart>\r\n//             </ResponsiveContainer>\r\n//           </div>\r\n//           <hr />\r\n//           <div style={{ margin: \"20px 0\" }}>\r\n//             <h4>Erreichbarkeit</h4>\r\n//             <p>Berechnet die beste Route (Straßenentfernung) zwischen dem Standort des Nutzers und jedem Anbieter.</p>\r\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\r\n//           </div>\r\n//           <hr />\r\n//           <div style={{ margin: \"20px 0\" }}>\r\n//             <h4>Spezialisierungsgrad</h4>\r\n//             <p>Ermittelt Zentren mit einer hohen Anzahl von Fällen in einem bestimmten ICD.</p>\r\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\r\n//           </div>\r\n//           <hr />\r\n//           <div style={{ margin: \"20px 0\" }}>\r\n//             <h4>Kooperationsnetzwerke</h4>\r\n//             <p>Visualisiert Kooperationen zwischen Kliniken, MVZs und ASVs.</p>\r\n//             <p>Basierend auf KOOPERIERT_MIT-Beziehungen.</p>\r\n//             <p style={styles.noData}>Noch keine Daten geladen.</p>\r\n//           </div>\r\n//           <hr />\r\n//           <div style={{ marginTop: \"20px\" }}>\r\n//             <h4>Empfohlene Behandlungsorte</h4>\r\n//             <p>Schlägt den besten Behandlungsort vor, basierend auf:</p>\r\n//             <ul>\r\n//               <li>Entfernung</li>\r\n//               <li>ICD-Spezialisierung</li>\r\n//               <li>Konnektivität der Kooperation</li>\r\n//             </ul>\r\n//             <p><strong>KI-basiertes Ranking:</strong> z.B. „Top 3 am nächsten + beste ICD-Übereinstimmung“</p>\r\n//             <p style={styles.noData}>Noch keine Empfehlungen verfügbar.</p>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// });\r\n\r\n// export default Analytics;\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useLocation } from \"./LocationContext\";\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nconst LINE_COLORS = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\nconst styles = {\r\n  scrollWrapper: {\r\n    width: \"35%\",\r\n    position: \"absolute\",\r\n    right: \"10px\",\r\n    top: \"130px\",\r\n    bottom: \"5px\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"10px\",\r\n    padding: \"10px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"600\",\r\n    boxSizing: \"border-box\"\r\n  },\r\n  scrollSection: (percentage) => ({\r\n    height: `${percentage}%`,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    overflow: \"hidden\"\r\n  }),\r\n  scrollSectionContent: {\r\n    flex: 1,\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#F0F1F1\",\r\n    border: \"2px solid #b3e5fc\",\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n    boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\r\n  },\r\n  title: {\r\n    fontSize: \"16px\",\r\n    marginBottom: \"4px\",\r\n    fontWeight: \"600\",\r\n    padding: \"2px 6px\",\r\n    borderRadius: \"2px\"\r\n  },\r\n  list: {\r\n    listStyleType: \"none\",\r\n    padding: 0,\r\n    margin: 0\r\n  },\r\n  listItem: {\r\n    marginBottom: \"8px\",\r\n    padding: \"8px\",\r\n    borderBottom: \"1px solid #ddd\"\r\n  },\r\n  bold: { fontWeight: \"600\" },\r\n  noData: {\r\n    fontStyle: \"italic\",\r\n    color: \"#999\"\r\n  },\r\n  colorDot: {\r\n    display: \"inline-block\",\r\n    width: \"12px\",\r\n    height: \"12px\",\r\n    borderRadius: \"50%\",\r\n    marginRight: \"5px\"\r\n  },\r\n  calculatingText: {\r\n    color: \"#666\",\r\n    fontStyle: \"italic\"\r\n  }\r\n};\r\n\r\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\r\n  if (!startLat || !startLon || !endLat || !endLon) {\r\n    console.warn(\"Missing coordinates for distance calculation!\", { startLat, startLon, endLat, endLon });\r\n    return \"N/A\";\r\n  }\r\n\r\n  const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    if (data.routes && data.routes.length > 0) {\r\n      return (data.routes[0].distance / 1000).toFixed(2);\r\n    } else {\r\n      console.warn(\"No valid route found for coordinates:\", { startLat, startLon, endLat, endLon });\r\n      return \"N/A\";\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching road distance:\", error);\r\n    return \"N/A\";\r\n  }\r\n};\r\n\r\nconst Analytics = () => {\r\n  const { allLocations, selectedLocation } = useLocation();\r\n  const [distances, setDistances] = useState({});\r\n\r\n  // Extract Unique ICD Information\r\n  const uniqueICDInfo = useMemo(() => {\r\n    return allLocations.length > 0\r\n      ? { \r\n          icd_name: allLocations[0].icd_name || \"N/A\",\r\n          icd_fallzahl: allLocations[0].icd_fallzahl || \"N/A\"\r\n        } \r\n      : null;\r\n  }, [allLocations]);\r\n\r\n  // Find User's Location\r\n  const userLocation = useMemo(() => \r\n    allLocations.find(loc => loc.clinic_name === \"Your Location\"), \r\n    [allLocations]\r\n  );\r\n\r\n  // Get provider details helper function\r\n  const getProviderDetails = (provider) => {\r\n    const type = provider.clinic_name ? \"clinic\" :\r\n      provider.mvz_name ? \"mvz\" :\r\n      provider.asv_name ? \"asv\" :\r\n      provider.niedergelassene_name ? \"niedergelassene\" : null;\r\n\r\n    const name = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\r\n    const address = provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address;\r\n    const city = provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city;\r\n\r\n    const lat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude;\r\n    const lon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude;\r\n\r\n    return { type, name, address, city, lat, lon };\r\n  };\r\n\r\n  // Generate unique key for each provider\r\n  const getProviderKey = (type, name, address) => `${type}-${(name || '').trim()}-${(address || '').trim()}`;\r\n\r\n  // Filter out user location\r\n  const filteredLocations = useMemo(() => \r\n    allLocations.filter(loc => loc.clinic_name !== \"Your Location\"), \r\n    [allLocations]\r\n  );\r\n\r\n  // Fetch distances for all providers\r\n  useEffect(() => {\r\n    const fetchDistances = async () => {\r\n      if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\r\n        console.warn(\"No valid user location found!\");\r\n        return;\r\n      }\r\n\r\n      const newDistances = {};\r\n\r\n      for (const provider of filteredLocations) {\r\n        const { type, name, address, lat, lon } = getProviderDetails(provider);\r\n        \r\n        if (!type || !name || !lat || !lon) {\r\n          console.warn(`Skipping provider with missing data: ${name}`);\r\n          continue;\r\n        }\r\n\r\n        const roadDistance = await getRoadDistance(\r\n          userLocation.latitude, \r\n          userLocation.longitude, \r\n          lat, \r\n          lon\r\n        );\r\n\r\n        const providerKey = getProviderKey(type, name, address);\r\n        newDistances[providerKey] = roadDistance;\r\n      }\r\n\r\n      setDistances(newDistances);\r\n    };\r\n\r\n    fetchDistances();\r\n  }, [userLocation, filteredLocations]);\r\n\r\n  // Render selected location info\r\n  const renderSelectedLocationInfo = () => {\r\n    if (!selectedLocation) return <p style={styles.noData}>Keine Einrichtung ausgewählt.</p>;\r\n    \r\n    const { type, name, address, city } = getProviderDetails(selectedLocation);\r\n    const key = getProviderKey(type, name, address);\r\n    \r\n    return (\r\n      <>\r\n        <p><strong>Name:</strong> {name}</p>\r\n        <p><strong>Adresse:</strong> {address}</p>\r\n        <p><strong>Stadt:</strong> {city}</p>\r\n        <p><strong>Beste Route:</strong> {distances[key] ? `${distances[key]} km` : \"Berechne...\"}</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Render ICD info\r\n  const renderICDInfo = () => (\r\n    uniqueICDInfo ? (\r\n      <>\r\n        <p><strong>Kooperation mit:</strong> {uniqueICDInfo.icd_name}</p>\r\n        <p><strong>Fallzahl:</strong> {uniqueICDInfo.icd_fallzahl}</p>\r\n      </>\r\n    ) : <p style={styles.noData}>Keine Kooperationsinformationen verfügbar.</p>\r\n  );\r\n\r\n  // Render provider list\r\n  const renderProviderList = () => (\r\n    filteredLocations.length === 0 ? (\r\n      <p style={styles.noData}>Keine Leistungserbringer verfügbar.</p>\r\n    ) : (\r\n      <ul style={styles.list}>\r\n        {filteredLocations.map((provider, index) => {\r\n          const { type, name, address, city } = getProviderDetails(provider);\r\n          if (!type || !name) return null;\r\n\r\n          const providerKey = getProviderKey(type, name, address);\r\n          \r\n          return (\r\n            <li key={index} style={styles.listItem}>\r\n              <span style={{ ...styles.colorDot, backgroundColor: LINE_COLORS[index % LINE_COLORS.length] }} />\r\n              <strong>{name}</strong><br />\r\n              {city && <>Stadt: {city}<br /></>}\r\n              {address && <>Adresse: {address}<br /></>}\r\n              {provider.clinic_number_of_beds && <>Anzahl von Betten: {provider.clinic_number_of_beds}<br /></>}\r\n              {provider.cooperation && <>Kooperation: {provider.cooperation}<br /></>}\r\n              {provider.clinic_chefarzt && <>Chefarzt: {provider.clinic_chefarzt}<br /></>}\r\n              Beste Route: <span style={styles.bold}>{distances[providerKey] || \"Berechne...\"} km</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    )\r\n  );\r\n\r\n  // Mock data for ICD chart\r\n  const mockICDData = [\r\n    { icd: \"D27\", count: 120 },\r\n    { icd: \"C50\", count: 85 },\r\n    { icd: \"G40\", count: 42 },\r\n    { icd: \"I10\", count: 60 },\r\n    { icd: \"C34\", count: 30 }\r\n  ];\r\n\r\n  return (\r\n    <div style={styles.scrollWrapper}>\r\n      {/* Section 1: Selected Location Information */}\r\n      <div style={styles.scrollSection(15)}>\r\n        <h3 style={styles.title}>Informationen zur ausgewählten Einrichtung</h3>\r\n        <div style={styles.scrollSectionContent}>\r\n          {renderSelectedLocationInfo()}\r\n        </div>\r\n      </div>\r\n  \r\n      {/* Section 2: Provider Information */}\r\n      <div style={styles.scrollSection(25)}>\r\n        <h3 style={styles.title}>Leistungserbringer Informationen</h3>\r\n        <div style={styles.scrollSectionContent}>\r\n          {renderProviderList()}\r\n        </div>\r\n      </div>\r\n  \r\n      {/* Section 3: Analytics Dashboard */}\r\n      <div style={styles.scrollSection(55)}>\r\n        <h3 style={styles.title}>Analytics Dashboard</h3>\r\n        <div style={styles.scrollSectionContent}>\r\n          {/* ICD Distribution Chart */}\r\n          <div style={{ marginBottom: \"20px\" }}>\r\n            <h4 style={{ marginBottom: \"8px\" }}>Verteilung der ICD-Fälle</h4>\r\n            <p style={{ marginBottom: \"12px\", fontSize: \"12px\" }}>\r\n              Zeigt an, wie viele Fälle (Fallzahlen) mit jedem ICD-Code verbunden sind.\r\n            </p>\r\n            <div style={{ height: \"200px\" }}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <BarChart data={mockICDData}>\r\n                  <XAxis dataKey=\"icd\" />\r\n                  <YAxis />\r\n                  <Tooltip \r\n                    contentStyle={{ \r\n                      fontSize: \"12px\",\r\n                      borderRadius: \"4px\",\r\n                      padding: \"6px\"\r\n                    }}\r\n                  />\r\n                  <Bar \r\n                    dataKey=\"count\" \r\n                    fill=\"#8884d8\" \r\n                    radius={[4, 4, 0, 0]}\r\n                  />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </div>\r\n          \r\n          <hr style={{ borderColor: \"#ddd\", margin: \"15px 0\" }} />\r\n          \r\n          {/* Reachability Section */}\r\n          <div style={{ margin: \"15px 0\" }}>\r\n            <h4 style={{ marginBottom: \"8px\" }}>Erreichbarkeit</h4>\r\n            <p style={{ marginBottom: \"12px\", fontSize: \"12px\" }}>\r\n              Berechnet die beste Route (Straßenentfernung) zwischen dem Standort des Nutzers und jedem Anbieter.\r\n            </p>\r\n            {Object.keys(distances).length > 0 ? (\r\n              <div style={{ \r\n                backgroundColor: \"#f8f9fa\", \r\n                padding: \"10px\", \r\n                borderRadius: \"4px\",\r\n                borderLeft: \"4px solid #b3e5fc\"\r\n              }}>\r\n                <p style={{ margin: 0, fontSize: \"12px\" }}>\r\n                  Entfernungen zu {Object.keys(distances).length} Anbietern wurden berechnet.\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <p style={styles.noData}>Daten werden geladen...</p>\r\n            )}\r\n          </div>\r\n  \r\n          <hr style={{ borderColor: \"#ddd\", margin: \"15px 0\" }} />\r\n  \r\n          {/* Additional Analytics Sections */}\r\n          <div style={{ margin: \"15px 0\" }}>\r\n            <h4 style={{ marginBottom: \"8px\" }}>Spezialisierungsgrad</h4>\r\n            <p style={{ marginBottom: \"12px\", fontSize: \"12px\" }}>\r\n              Zentren mit hoher Fallzahl in spezifischen ICD-Bereichen.\r\n            </p>\r\n            <p style={styles.noData}>Analyse in Bearbeitung...</p>\r\n          </div>\r\n          <hr style={{ borderColor: \"#ddd\", margin: \"15px 0\" }} />\r\n          {/* Additional Analytics Sections */}\r\n          <div style={{ margin: \"15px 0\" }}>\r\n            <h4 style={{ marginBottom: \"8px\" }}>Kooperationsnetzwerke (Kooperationsnetzwerke)</h4>\r\n            <p style={{ marginBottom: \"12px\", fontSize: \"12px\" }}>\r\n              Zentren mit hoher Fallzahl in spezifischen ICD-Bereichen.\r\n            </p>\r\n            <p style={styles.noData}>Analyse in Bearbeitung...</p>\r\n          </div>\r\n          <hr style={{ borderColor: \"#ddd\", margin: \"15px 0\" }} />\r\n          {/* Additional Analytics Sections */}\r\n          <div style={{ margin: \"15px 0\" }}>\r\n            <h4 style={{ marginBottom: \"8px\" }}>Empfohlene Behandlungsorte (Smart Recommendations)</h4>\r\n            <p style={{ marginBottom: \"12px\", fontSize: \"12px\" }}>\r\n              Zentren mit hoher Fallzahl in spezifischen ICD-Bereichen.\r\n            </p>\r\n            <p style={styles.noData}>Analyse in Bearbeitung...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Analytics;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}