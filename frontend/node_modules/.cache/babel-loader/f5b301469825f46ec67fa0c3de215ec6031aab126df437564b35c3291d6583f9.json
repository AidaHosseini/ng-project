{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidah\\\\ng-project\\\\frontend\\\\src\\\\components\\\\Analystics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useLocation } from \"./LocationContext\";\n\n// 🎯 Predefined colors for providers\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\n\n// 🚀 Function to get road distance from OSRM API\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\n  if (!startLat || !startLon || !endLat || !endLon) {\n    console.warn(\"🚨 Missing coordinates for distance calculation!\", {\n      startLat,\n      startLon,\n      endLat,\n      endLon\n    });\n    return \"N/A\";\n  }\n  const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.routes && data.routes.length > 0) {\n      return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\n    } else {\n      console.warn(\"⚠️ No valid route found for coordinates:\", {\n        startLat,\n        startLon,\n        endLat,\n        endLon\n      });\n      return \"N/A\";\n    }\n  } catch (error) {\n    console.error(\"❌ Error fetching road distance:\", error);\n    return \"N/A\";\n  }\n};\nconst Analystics = () => {\n  _s();\n  const {\n    allLocations\n  } = useLocation();\n  const [distances, setDistances] = useState({});\n\n  // // ✅ Extract Unique ICD Information (Only Once)\n  // const uniqueICDInfo = useMemo(() => {\n  //     return allLocations.length > 0\n  //         ? { \n\n  //             icd_name: allLocations[0].icd_name || \"N/A\",\n  //             icd_fallzahl: allLocations[0].icd_fallzahl || \"N/A\"\n  //         } \n  //         : null;\n  // }, [allLocations]);\n\n  // ✅ Find User's Location\n  const userLocation = useMemo(() => allLocations.find(loc => loc.clinic_name === \"Your Location\"), [allLocations]);\n\n  // ✅ Fetch Road Distances for ALL PROVIDERS\n  useEffect(() => {\n    const fetchDistances = async () => {\n      if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\n        console.warn(\"⚠️ No valid user location found!\");\n        return;\n      }\n      const newDistances = {};\n      for (const provider of allLocations) {\n        if (provider.clinic_name === \"Your Location\") continue; // Skip user location\n\n        // 🔹 Identify the provider type dynamically\n        const providerType = provider.clinic_name ? \"clinic\" : provider.mvz_name ? \"mvz\" : provider.asv_name ? \"asv\" : provider.niedergelassene_name ? \"niedergelassene\" : null;\n        const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\n        if (!providerType || !providerName) continue;\n        const providerLat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude;\n        const providerLon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude;\n        if (!providerLat || !providerLon) {\n          console.warn(`⚠️ Skipping provider with missing coordinates: ${providerName}`);\n          continue;\n        }\n\n        // 🔹 Fetch the road distance\n        const roadDistance = await getRoadDistance(userLocation.latitude, userLocation.longitude, providerLat, providerLon);\n\n        // 🔹 Store distance dynamically\n        newDistances[`${providerType}-${providerName}`] = roadDistance;\n      }\n      setDistances(newDistances);\n    };\n    fetchDistances();\n  }, [userLocation, allLocations]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.informationsContainer,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Informationen zur Kooperationen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.analysticContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.title,\n        children: \"Leistungserbringer Informationen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), allLocations.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.list,\n        children: allLocations.map((provider, index) => {\n          if (provider.clinic_name === \"Your Location\") return null; // Skip user location\n\n          // 🔹 Dynamically determine provider type and name\n          const providerType = provider.clinic_name ? \"clinic\" : provider.mvz_name ? \"mvz\" : provider.asv_name ? \"asv\" : provider.niedergelassene_name ? \"niedergelassene\" : null;\n          const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\n          if (!providerType || !providerName) return null;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: styles.listItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: lineColors[index % lineColors.length],\n                fontSize: \"14px\",\n                marginRight: \"5px\",\n                display: \"inline-block\",\n                width: \"12px\",\n                height: \"12px\",\n                borderRadius: \"50%\",\n                backgroundColor: lineColors[index % lineColors.length]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: providerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 37\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 69\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Stadt:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this), \" \", provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 168\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Addresse:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this), \" \", provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 183\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Anzahl von Betten:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 37\n            }, this), \" \", provider.clinic_number_of_beds || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 115\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Kooperation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this), \" \", provider.cooperation || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 99\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Chefarzt:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this), \" \", provider.clinic_chefarzt || \"N/A\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 100\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Beste Route:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.bold,\n              children: [distances[`${providerType}-${providerName}`] || \"Calculating...\", \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.noData,\n        children: \"No data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n// 🎨 CSS Styles\n_s(Analystics, \"28MUtDZUIBtpNJw59WTPD3pprbw=\", false, function () {\n  return [useLocation];\n});\n_c = Analystics;\nconst styles = {\n  informationsContainer: {\n    width: \"35%\",\n    fontWeight: \"600\",\n    position: \"absolute\",\n    border: \"2px solid #b3e5fc\",\n    right: \"10px\",\n    top: \"130px\",\n    bottom: \"650px\",\n    padding: \"15px\",\n    backgroundColor: \"#e1ecf0\",\n    boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\n    borderRadius: \"8px\",\n    marginBottom: \"15px\",\n    fontSize: \"12px\"\n  },\n  analysticContainer: {\n    width: \"35%\",\n    fontWeight: \"600\",\n    border: \"2px solid #b3e5fc\",\n    position: \"absolute\",\n    right: \"10px\",\n    top: \"250px\",\n    padding: \"15px\",\n    backgroundColor: \"#e1ecf0\",\n    boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\n    borderRadius: \"8px\",\n    fontSize: \"12px\"\n  },\n  title: {\n    fontSize: \"14px\",\n    marginBottom: \"8px\"\n  },\n  list: {\n    listStyleType: \"none\",\n    padding: 0,\n    margin: 0\n  },\n  listItem: {\n    marginBottom: \"8px\",\n    // Reduce spacing between each item\n    padding: \"8px\",\n    borderBottom: \"1px solid #ddd\"\n  },\n  bold: {\n    fontWeight: \"600\"\n  },\n  noData: {\n    fontStyle: \"italic\",\n    color: \"#999\"\n  }\n};\nexport default Analystics;\nvar _c;\n$RefreshReg$(_c, \"Analystics\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","lineColors","getRoadDistance","startLat","startLon","endLat","endLon","console","warn","url","response","fetch","data","json","routes","length","distance","toFixed","error","Analystics","_s","allLocations","distances","setDistances","userLocation","find","loc","clinic_name","fetchDistances","latitude","longitude","newDistances","provider","providerType","mvz_name","asv_name","niedergelassene_name","providerName","providerLat","clinic_latitude","mvz_latitude","asv_latitude","niedergelassene_latitude","providerLon","clinic_longitude","mvz_longitude","asv_longitude","niedergelassene_longitude","roadDistance","children","style","styles","informationsContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","analysticContainer","list","map","index","listItem","color","fontSize","marginRight","display","width","height","borderRadius","backgroundColor","clinic_city","mvz_city","asv_city","niedergelassene_city","clinic_address","mvz_address","asv_address","niedergelassene_address","clinic_number_of_beds","cooperation","clinic_chefarzt","bold","noData","_c","fontWeight","position","border","right","top","bottom","padding","boxShadow","marginBottom","listStyleType","margin","borderBottom","fontStyle","$RefreshReg$"],"sources":["C:/Users/aidah/ng-project/frontend/src/components/Analystics.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useLocation } from \"./LocationContext\";\r\n\r\n// 🎯 Predefined colors for providers\r\nconst lineColors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"pink\", \"yellow\"];\r\n\r\n// 🚀 Function to get road distance from OSRM API\r\nconst getRoadDistance = async (startLat, startLon, endLat, endLon) => {\r\n    if (!startLat || !startLon || !endLat || !endLon) {\r\n        console.warn(\"🚨 Missing coordinates for distance calculation!\", { startLat, startLon, endLat, endLon });\r\n        return \"N/A\";\r\n    }\r\n\r\n    const url = `https://router.project-osrm.org/route/v1/driving/${startLon},${startLat};${endLon},${endLat}?overview=false`;\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        if (data.routes && data.routes.length > 0) {\r\n            return (data.routes[0].distance / 1000).toFixed(2); // Convert meters to km\r\n        } else {\r\n            console.warn(\"⚠️ No valid route found for coordinates:\", { startLat, startLon, endLat, endLon });\r\n            return \"N/A\";\r\n        }\r\n    } catch (error) {\r\n        console.error(\"❌ Error fetching road distance:\", error);\r\n        return \"N/A\";\r\n    }\r\n};\r\n\r\nconst Analystics = () => {\r\n    const { allLocations } = useLocation();\r\n    const [distances, setDistances] = useState({});\r\n\r\n    // // ✅ Extract Unique ICD Information (Only Once)\r\n    // const uniqueICDInfo = useMemo(() => {\r\n    //     return allLocations.length > 0\r\n    //         ? { \r\n\r\n    //             icd_name: allLocations[0].icd_name || \"N/A\",\r\n    //             icd_fallzahl: allLocations[0].icd_fallzahl || \"N/A\"\r\n    //         } \r\n    //         : null;\r\n    // }, [allLocations]);\r\n\r\n    // ✅ Find User's Location\r\n    const userLocation = useMemo(() => \r\n        allLocations.find(loc => loc.clinic_name === \"Your Location\"), \r\n        [allLocations]\r\n    );\r\n\r\n    // ✅ Fetch Road Distances for ALL PROVIDERS\r\n    useEffect(() => {\r\n        const fetchDistances = async () => {\r\n            if (!userLocation || !userLocation.latitude || !userLocation.longitude) {\r\n                console.warn(\"⚠️ No valid user location found!\");\r\n                return;\r\n            }\r\n\r\n            const newDistances = {};\r\n\r\n            for (const provider of allLocations) {\r\n                if (provider.clinic_name === \"Your Location\") continue; // Skip user location\r\n\r\n                // 🔹 Identify the provider type dynamically\r\n                const providerType = provider.clinic_name \r\n                    ? \"clinic\"\r\n                    : provider.mvz_name \r\n                    ? \"mvz\"\r\n                    : provider.asv_name \r\n                    ? \"asv\"\r\n                    : provider.niedergelassene_name \r\n                    ? \"niedergelassene\"\r\n                    : null;\r\n\r\n                const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\r\n\r\n                if (!providerType || !providerName) continue;\r\n\r\n                const providerLat = provider.clinic_latitude || provider.mvz_latitude || provider.asv_latitude || provider.niedergelassene_latitude;\r\n                const providerLon = provider.clinic_longitude || provider.mvz_longitude || provider.asv_longitude || provider.niedergelassene_longitude;\r\n\r\n                if (!providerLat || !providerLon) {\r\n                    console.warn(`⚠️ Skipping provider with missing coordinates: ${providerName}`);\r\n                    continue;\r\n                }\r\n\r\n                // 🔹 Fetch the road distance\r\n                const roadDistance = await getRoadDistance(\r\n                    userLocation.latitude, userLocation.longitude, \r\n                    providerLat, providerLon\r\n                );\r\n\r\n                // 🔹 Store distance dynamically\r\n                newDistances[`${providerType}-${providerName}`] = roadDistance;\r\n            }\r\n\r\n            setDistances(newDistances);\r\n        };\r\n\r\n        fetchDistances();\r\n    }, [userLocation, allLocations]);\r\n\r\n    return (\r\n        <>\r\n            {/* 📌 ICD Information Section\r\n            {uniqueICDInfo && (\r\n                <div style={styles.informationsContainer}>\r\n                    <h3 style={styles.title}>Informationen zur Kooperationen</h3>\r\n                    <p><strong>Kooperation mit :</strong> {uniqueICDInfo.icd_name}</p>\r\n                    <p><strong>Fallzahl:</strong> {uniqueICDInfo.icd_fallzahl}</p>\r\n                </div>\r\n            )} */}\r\n            <div style={styles.informationsContainer} >\r\n            <h3 style={styles.title}>Informationen zur Kooperationen</h3>\r\n            </div>\r\n            {/* 📌 Leistungserbringer (Providers) Information */}\r\n            <div style={styles.analysticContainer}>\r\n                <h3 style={styles.title}>Leistungserbringer Informationen</h3>\r\n                {allLocations.length > 0 ? (\r\n                    <ul style={styles.list}>\r\n                        {allLocations.map((provider, index) => {\r\n                            if (provider.clinic_name === \"Your Location\") return null; // Skip user location\r\n\r\n                            // 🔹 Dynamically determine provider type and name\r\n                            const providerType = provider.clinic_name \r\n                                ? \"clinic\"\r\n                                : provider.mvz_name \r\n                                ? \"mvz\"\r\n                                : provider.asv_name \r\n                                ? \"asv\"\r\n                                : provider.niedergelassene_name \r\n                                ? \"niedergelassene\"\r\n                                : null;\r\n\r\n                            const providerName = provider.clinic_name || provider.mvz_name || provider.asv_name || provider.niedergelassene_name;\r\n\r\n                            if (!providerType || !providerName) return null;\r\n\r\n                            return (\r\n                                <li key={index} style={styles.listItem}>\r\n                                    {/* 🔵 Colored Circle Indicator */}\r\n                                    <span \r\n                                        style={{\r\n                                            color: lineColors[index % lineColors.length], \r\n                                            fontSize: \"14px\",  \r\n                                            marginRight: \"5px\",\r\n                                            display: \"inline-block\",\r\n                                            width: \"12px\",\r\n                                            height: \"12px\",\r\n                                            borderRadius: \"50%\",\r\n                                            backgroundColor: lineColors[index % lineColors.length],\r\n                                        }}>\r\n                                    </span>\r\n                                    <strong>{providerName}</strong> <br />\r\n                                    <strong>Stadt:</strong> {provider.clinic_city || provider.mvz_city || provider.asv_city || provider.niedergelassene_city || \"N/A\"} <br />\r\n                                    <strong>Addresse:</strong> {provider.clinic_address || provider.mvz_address || provider.asv_address || provider.niedergelassene_address || \"N/A\"} <br />\r\n                                    <strong>Anzahl von Betten:</strong> {provider.clinic_number_of_beds || \"N/A\"} <br />\r\n                                    <strong>Kooperation:</strong> {provider.cooperation || \"N/A\"} <br />\r\n                                    <strong>Chefarzt:</strong> {provider.clinic_chefarzt || \"N/A\"} <br />\r\n                                    <strong>Beste Route:</strong> \r\n                                    <span style={styles.bold}>\r\n                                        {distances[`${providerType}-${providerName}`] || \"Calculating...\"} km\r\n                                    </span>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                ) : (\r\n                    <p style={styles.noData}>No data available.</p>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n// 🎨 CSS Styles\r\nconst styles = {\r\n    informationsContainer: {\r\n        width: \"35%\",\r\n        fontWeight: \"600\",\r\n        position: \"absolute\",\r\n        border: \"2px solid #b3e5fc\",\r\n        right: \"10px\",\r\n        top: \"130px\",\r\n        bottom : \"650px\",\r\n        padding: \"15px\",\r\n        backgroundColor: \"#e1ecf0\",\r\n        boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: \"8px\",\r\n        marginBottom: \"15px\",\r\n        fontSize: \"12px\",\r\n    },\r\n    analysticContainer: {\r\n        width: \"35%\",\r\n        fontWeight: \"600\",\r\n        border: \"2px solid #b3e5fc\",\r\n        position: \"absolute\",\r\n        right: \"10px\",\r\n        top: \"250px\",\r\n        padding: \"15px\",\r\n        backgroundColor: \"#e1ecf0\",\r\n        boxShadow: \"0px 0px 8px rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: \"8px\",\r\n        fontSize: \"12px\",\r\n    },\r\n    title: {\r\n        fontSize: \"14px\",\r\n        marginBottom: \"8px\"\r\n    },\r\n    list: {\r\n        listStyleType: \"none\",\r\n        padding: 0,\r\n        margin: 0\r\n    },\r\n    listItem: {\r\n        marginBottom: \"8px\", // Reduce spacing between each item\r\n        padding: \"8px\",\r\n        borderBottom: \"1px solid #ddd\"\r\n    },\r\n    bold: {\r\n        fontWeight: \"600\"\r\n    },\r\n    noData: {\r\n        fontStyle: \"italic\",\r\n        color: \"#999\"\r\n    }\r\n};\r\n\r\n\r\nexport default Analystics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}